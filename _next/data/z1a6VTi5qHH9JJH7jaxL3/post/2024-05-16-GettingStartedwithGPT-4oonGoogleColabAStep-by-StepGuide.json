{"pageProps":{"post":{"title":"Google Colab에서 GPT-4o로 시작하기 단계별 안내","description":"","date":"2024-05-16 17:34","slug":"2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide","content":"\n\n<img src=\"/assets/img/2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide_0.png\" />\n\n2024년 5월 13일에 OpenAI는 최신 AI 모델인 GPT-4o를 선보였습니다. 이 모델은 텍스트와 이미지 모두와의 고급 음성 상호작용 능력을 보여주었습니다. 인공지능(AI)은 다양한 산업을 변화시키고 있으며, OpenAI의 GPT-4o 모델은 이 혁명의 선두주자입니다.\n\n<img src=\"/assets/img/2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide_1.png\" />\n\n본 안내서는 Google Colab에서 GPT-4o를 설정하고 사용하는 방법을 안내해 드립니다. 간단한 수학 문제를 해결하거나 복잡한 텍스트를 생성하거나 이미지를 분석하려는 경우, 이 튜토리얼을 통해 시작할 수 있을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n![image](https://miro.medium.com/v2/resize:fit:1400/0*Ob6Fa-AKD9ZTpBsW.gif)\n\n# 1. 설정\n\n코딩을 시작하기 전에 Google Colab 계정과 OpenAI의 GPT-4o API에 액세스할 수 있는지 확인해주세요. GPT-4o의 환경 설정 및 몇 가지 흥미로운 기능을 탐색하는 단계별 안내서가 여기 있습니다.\n\n## 단계 1: OpenAI Python 패키지 설치\n\n<div class=\"content-ad\"></div>\n\n먼저 OpenAI Python 패키지를 설치해야 합니다. 새로운 Colab 노트북을 열고 다음 명령을 실행하세요:\n\n```js\n!pip install --upgrade openai --quiet\n```\n\n## 단계 2: 라이브러리 가져오기 및 API 키 설정\n\n그 다음으로 필요한 라이브러리를 가져오고 API 키를 설정하세요. Google Colab의 userdata 모듈을 사용하여 API 키를 안전하게 저장할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nimport json\nfrom openai import OpenAI\nimport os\nfrom google.colab import userdata\n\nMODEL = \"gpt-4o\"\n\nclient = OpenAI(api_key=userdata.get('openai'))\n```\n\n## 단계 3: 첫 번째 완성물 생성\n\nGPT-4o가 어떻게 작동하는지 감을 잡기 위해 간단한 완성물을 만들어 봅시다. 모델에 간단한 수학 문제를 해결하도록 요청하겠습니다.\n\n```js\ncompletion = client.chat.completions.create(\n  model=MODEL,\n  messages=[\n    {\"role\": \"system\", \"content\": \"You are a helpful assistant. Help me with my math homework!\"},\n    {\"role\": \"user\", \"content\": \"Hello! Could you solve 4+5?\"}\n  ]\n)\n\nprint(\"Assistant: \" + completion.choices[0].message.content)\n```\n\n<div class=\"content-ad\"></div>\n\n## 단계 4: 더 복잡한 질문하기\n\nGPT-4o에게 더 복잡한 질문을 하여 기능을 더 잘 이해할 수 있습니다. 예를 들어, 모델의 기원 및 훈련 세부 정보에 대해 질문할 수 있습니다.\n\n```js\ncompletion = client.chat.completions.create(\n  model=MODEL,\n  messages=[\n    {\"role\": \"user\", \"content\": \"당신의 이름은 무엇이며 누가 만들었나요? 훈련의 종료일은 언제인가요?\"}\n  ]\n)\n\nprint(\"Assistant: \" + completion.choices[0].message.content)\n```\n\n## 2. 함수 호출을 위한 JSON 모드\n\n<div class=\"content-ad\"></div>\n\nGPT-4는 JSON 응답을 생성할 수 있어서 구조화된 데이터와 함수 호출에 유용합니다.\n\n![image](https://miro.medium.com/v2/resize:fit:1400/0*TyQQvSdTlOenI5YY.gif)\n\n## 단계 1: JSON 응답 생성\n\n주간 운동 루틴을 생성하기 위해 JSON 응답을 만들어 봅시다.\n\n<div class=\"content-ad\"></div>\n\n```js\ncompletion = client.chat.completions.create(\n  model=MODEL,\n  response_format={\"type\": \"json_object\"},\n  messages=[\n    {\"role\": \"system\", \"content\": \"You are a trainer who always responds in JSON\"},\n    {\"role\": \"user\", \"content\": \"Create a weekly workout routine for me\"}\n  ]\n)\n\nprint(completion.choices[0].message)\njson.loads(completion.choices[0].message.content)\n```\n\n# 3. Image Understanding\n\nGPT-4o can also understand and process images. We’ll explore how to work with images by encoding them in base64.\n\n![Image](https://miro.medium.com/v2/resize:fit:1080/0*pYZ8nvgtWiL55IhN.gif)\n\n<div class=\"content-ad\"></div>\n\n## 단계 1: 이미지 인코딩\n\n먼저 이미지를 base64로 인코딩하세요.\n\n```js\nfrom IPython.display import Image, display\nimport base64\n\nIMAGE_PATH = \"/content/IMG-20240118-WA0023.jpg\"\n\ndef encode_image(image_path):\n    with open(image_path, \"rb\") as image_file:\n        return base64.b64encode(image_file.read()).decode(\"utf-8\")\n\nbase64_image = encode_image(IMAGE_PATH)\ndisplay(Image(IMAGE_PATH))\n```\n\n## 단계 2: 이미지 분석\n\n<div class=\"content-ad\"></div>\n\n```js\nresponse = client.chat.completions.create(\n    model=MODEL,\n    messages=[\n        {\"role\": \"system\", \"content\": \"당신은 친절하고 마크다운으로 응답하는 도우미입니다. 수학 숙제를 도와주세요!\"},\n        {\"role\": \"user\", \"content\": [\n            {\"type\": \"text\", \"text\": \"꽃의 색깔은 무엇인가요?\"},\n            {\"type\": \"image_url\", \"image_url\": {\"url\": f\"data:image/png;base64,{base64_image}\"}}\n        ]}\n    ],\n    temperature=0.0,\n)\n\nprint(response.choices[0].message.content)\n```\n\n## 단계 3: URL 이미지 분석\n\nURL에서 직접 이미지를 분석할 수도 있습니다.```\n\n<div class=\"content-ad\"></div>\n\n```js\nresponse = client.chat.completions.create(\n    model=MODEL,\n    messages=[\n        {\"role\": \"system\", \"content\": \"마크다운으로 응답하는 도움이 되는 도우미에요. 수학 숙제를 도와줄게요!\"},\n        {\"role\": \"user\", \"content\": [\n            {\"type\": \"text\", \"text\": \"꽃의 색깔은 무엇인가요?\"},\n            {\"type\": \"image_url\", \"image_url\": {\"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Ranunculus_repens_1_%28cropped%29.JPG/192px-Ranunculus_repens_1_%28cropped%29.JPG\"}\n        ]}\n    ],\n    temperature=0.0,\n)\n\nprint(response.choices[0].message.content)\n```\n\n# 4. Function Calling\n\nGPT-4o는 사용자 입력에 기반하여 미리 정의된 함수를 호출할 수 있어요. 외부 데이터 소스나 서비스를 통합하는 데 특히 유용합니다.\n\n<img src=\"https://miro.medium.com/v2/resize:fit:1200/0*YKVvRxnSDMQEWPqb.gif\" />\n\n\n<div class=\"content-ad\"></div>\n\n## 단계 1: 함수 정의\n\nNBA 경기의 현재 점수를 가져오는 함수를 정의하세요.\n\n```js\ndef get_nba_game_score(team):\n    if \"lakers\" in team.lower():\n        return json.dumps({\"team\": \"레이커스\", \"score\": \"102\", \"opponent\": \"워리어스\", \"opponent_score\": \"98\"})\n    elif \"bulls\" in team.lower():\n        return json.dumps({\"team\": \"불스\", \"score\": \"89\", \"opponent\": \"셀틱스\", \"opponent_score\": \"95\"})\n    else:\n        return json.dumps({\"team\": team, \"score\": \"N/A\", \"opponent\": \"N/A\", \"opponent_score\": \"N/A\"})\n```\n\n## 단계 2: 대화 초기화 및 함수 호출\n\n<div class=\"content-ad\"></div>\n\n모델이 이 함수를 호출할 수 있는 대화를 만들어보세요.\n\n```js\ndef function_calling():\n    messages = [{\"role\": \"user\", \"content\": \"레이커스 게임 점수가 어떻게 되나요?\"}]\n\n    tools = [\n        {\n            \"type\": \"function\",\n            \"function\": {\n                \"name\": \"get_nba_game_score\",\n                \"description\": \"주어진 팀의 NBA 게임의 현재 점수를 가져옵니다.\",\n                \"parameters\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"team\": {\"type\": \"string\", \"description\": \"NBA 팀의 이름, 예: 레이커스, 불스\"},\n                    },\n                    \"required\": [\"team\"],\n                },\n            },\n        }\n    ]\n\n    response = client.chat.completions.create(\n        model=MODEL,\n        messages=messages,\n        tools=tools,\n        tool_choice=\"auto\",\n    )\n\n    response_message = response.choices[0].message\n    tool_calls = response_message.tool_calls\n\n    if tool_calls:\n        available_functions = {\"get_nba_game_score\": get_nba_game_score}\n        messages.append(response_message)\n\n        for tool_call in tool_calls:\n            function_name = tool_call.function.name\n            function_to_call = available_functions[function_name]\n            function_args = json.loads(tool_call.function.arguments)\n\n            function_response = function_to_call(team=function_args.get(\"team\"))\n\n            messages.append(\n                {\"tool_call_id\": tool_call.id, \"role\": \"tool\", \"name\": function_name, \"content\": function_response}\n            )\n\n        second_response = client.chat.completions.create(\n            model=MODEL,\n            messages=messages,\n        )\n\n        return second_response\n\nprint(function_calling())\n```\n\n축하합니다!\n\n이제 Google Colab에서 GPT-4o를 설정하고 사용하는 방법을 배웠습니다. 이 가이드는 기본 텍스트 완성, JSON 응답, 이미지 처리 및 함수 호출 내용을 다루었습니다. 이러한 기능을 확장하여 다양한 분야의 정교한 AI 응용프로그램을 구축할 수 있습니다. 즐거운 코딩하세요!\n\n<div class=\"content-ad\"></div>\n\n\n![Image](https://miro.medium.com/v2/resize:fit:1400/0*e35njv6_nLGt-8QY.gif)\n","ogImage":{"url":"/assets/img/2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide_0.png"},"coverImage":"/assets/img/2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide_0.png","tag":["Tech"],"readingTime":8},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"img\", {\n      src: \"/assets/img/2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide_0.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"2024년 5월 13일에 OpenAI는 최신 AI 모델인 GPT-4o를 선보였습니다. 이 모델은 텍스트와 이미지 모두와의 고급 음성 상호작용 능력을 보여주었습니다. 인공지능(AI)은 다양한 산업을 변화시키고 있으며, OpenAI의 GPT-4o 모델은 이 혁명의 선두주자입니다.\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-16-GettingStartedwithGPT-4oonGoogleColabAStep-by-StepGuide_1.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"본 안내서는 Google Colab에서 GPT-4o를 설정하고 사용하는 방법을 안내해 드립니다. 간단한 수학 문제를 해결하거나 복잡한 텍스트를 생성하거나 이미지를 분석하려는 경우, 이 튜토리얼을 통해 시작할 수 있을 것입니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:1400/0*Ob6Fa-AKD9ZTpBsW.gif\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"1. 설정\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"코딩을 시작하기 전에 Google Colab 계정과 OpenAI의 GPT-4o API에 액세스할 수 있는지 확인해주세요. GPT-4o의 환경 설정 및 몇 가지 흥미로운 기능을 탐색하는 단계별 안내서가 여기 있습니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 1: OpenAI Python 패키지 설치\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"먼저 OpenAI Python 패키지를 설치해야 합니다. 새로운 Colab 노트북을 열고 다음 명령을 실행하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"!pip install --upgrade openai --quiet\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 2: 라이브러리 가져오기 및 API 키 설정\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그 다음으로 필요한 라이브러리를 가져오고 API 키를 설정하세요. Google Colab의 userdata 모듈을 사용하여 API 키를 안전하게 저장할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" json\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" openai \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"OpenAI\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" os\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" google.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"colab\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" userdata\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"gpt-4o\\\"\"\n        }), \"\\n\\nclient = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"OpenAI\"\n        }), \"(api_key=userdata.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'openai'\"\n        }), \"))\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 3: 첫 번째 완성물 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GPT-4o가 어떻게 작동하는지 감을 잡기 위해 간단한 완성물을 만들어 봅시다. 모델에 간단한 수학 문제를 해결하도록 요청하겠습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"completion = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n  model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n  messages=[\\n    {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"system\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"You are a helpful assistant. Help me with my math homework!\\\"\"\n        }), \"},\\n    {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"user\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Hello! Could you solve 4+5?\\\"\"\n        }), \"}\\n  ]\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Assistant: \\\"\"\n        }), \" + completion.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"content\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 4: 더 복잡한 질문하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GPT-4o에게 더 복잡한 질문을 하여 기능을 더 잘 이해할 수 있습니다. 예를 들어, 모델의 기원 및 훈련 세부 정보에 대해 질문할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"completion = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n  model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n  messages=[\\n    {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"user\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"당신의 이름은 무엇이며 누가 만들었나요? 훈련의 종료일은 언제인가요?\\\"\"\n        }), \"}\\n  ]\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Assistant: \\\"\"\n        }), \" + completion.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"content\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"2. 함수 호출을 위한 JSON 모드\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GPT-4는 JSON 응답을 생성할 수 있어서 구조화된 데이터와 함수 호출에 유용합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:1400/0*TyQQvSdTlOenI5YY.gif\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 1: JSON 응답 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"주간 운동 루틴을 생성하기 위해 JSON 응답을 만들어 봅시다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"completion = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n  model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n  response_format={\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"json_object\\\"\"\n        }), \"},\\n  messages=[\\n    {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"system\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"You are a trainer who always responds in JSON\\\"\"\n        }), \"},\\n    {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"user\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Create a weekly workout routine for me\\\"\"\n        }), \"}\\n  ]\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(completion.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \")\\njson.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"loads\"\n        }), \"(completion.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"content\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"3. Image Understanding\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GPT-4o can also understand and process images. We’ll explore how to work with images by encoding them in base64.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:1080/0*pYZ8nvgtWiL55IhN.gif\",\n        alt: \"Image\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 1: 이미지 인코딩\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"먼저 이미지를 base64로 인코딩하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"IPython\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"display\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Image\"\n        }), \", display\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" base64\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"IMAGE_PATH\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"/content/IMG-20240118-WA0023.jpg\\\"\"\n        }), \"\\n\\ndef \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"encode_image\"\n        }), \"(image_path):\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"open\"\n        }), \"(image_path, \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"rb\\\"\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"image_file\"\n        }), \":\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" base64.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"b64encode\"\n        }), \"(image_file.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"read\"\n        }), \"()).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"decode\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"utf-8\\\"\"\n        }), \")\\n\\nbase64_image = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"encode_image\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"IMAGE_PATH\"\n        }), \")\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"display\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Image\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"IMAGE_PATH\"\n        }), \"))\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 2: 이미지 분석\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"response = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n    model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n    messages=[\\n        {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"system\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"당신은 친절하고 마크다운으로 응답하는 도우미입니다. 수학 숙제를 도와주세요!\\\"\"\n        }), \"},\\n        {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"user\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": [\\n            {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"text\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"text\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"꽃의 색깔은 무엇인가요?\\\"\"\n        }), \"},\\n            {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"image_url\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"image_url\\\"\"\n        }), \": {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"url\\\"\"\n        }), \": f\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"data:image/png;base64,{base64_image}\\\"\"\n        }), \"}}\\n        ]}\\n    ],\\n    temperature=\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \",\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(response.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"content\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 3: URL 이미지 분석\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"URL에서 직접 이미지를 분석할 수도 있습니다.```\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"response = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n    model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n    messages=[\\n        {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"system\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"마크다운으로 응답하는 도움이 되는 도우미에요. 수학 숙제를 도와줄게요!\\\"\"\n        }), \"},\\n        {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"user\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": [\\n            {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"text\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"text\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"꽃의 색깔은 무엇인가요?\\\"\"\n        }), \"},\\n            {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"image_url\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"image_url\\\"\"\n        }), \": {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"url\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Ranunculus_repens_1_%28cropped%29.JPG/192px-Ranunculus_repens_1_%28cropped%29.JPG\\\"\"\n        }), \"}\\n        ]}\\n    ],\\n    temperature=\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \",\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(response.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"content\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"4. Function Calling\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GPT-4o는 사용자 입력에 기반하여 미리 정의된 함수를 호출할 수 있어요. 외부 데이터 소스나 서비스를 통합하는 데 특히 유용합니다.\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"https://miro.medium.com/v2/resize:fit:1200/0*YKVvRxnSDMQEWPqb.gif\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 1: 함수 정의\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"NBA 경기의 현재 점수를 가져오는 함수를 정의하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"def \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get_nba_game_score\"\n        }), \"(team):\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"lakers\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"in\"\n        }), \" team.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"lower\"\n        }), \"():\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" json.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"dumps\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"team\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"레이커스\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"score\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"102\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"opponent\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"워리어스\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"opponent_score\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"98\\\"\"\n        }), \"})\\n    elif \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"bulls\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"in\"\n        }), \" team.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"lower\"\n        }), \"():\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" json.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"dumps\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"team\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"불스\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"score\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"89\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"opponent\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"셀틱스\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"opponent_score\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"95\\\"\"\n        }), \"})\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"else\"\n        }), \":\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" json.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"dumps\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"team\\\"\"\n        }), \": team, \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"score\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"N/A\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"opponent\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"N/A\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"opponent_score\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"N/A\\\"\"\n        }), \"})\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 2: 대화 초기화 및 함수 호출\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"모델이 이 함수를 호출할 수 있는 대화를 만들어보세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"def \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"function_calling\"\n        }), \"():\\n    messages = [{\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"user\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"레이커스 게임 점수가 어떻게 되나요?\\\"\"\n        }), \"}]\\n\\n    tools = [\\n        {\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"function\\\"\"\n        }), \",\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"function\\\"\"\n        }), \": {\\n                \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"name\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"get_nba_game_score\\\"\"\n        }), \",\\n                \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"description\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"주어진 팀의 NBA 게임의 현재 점수를 가져옵니다.\\\"\"\n        }), \",\\n                \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"parameters\\\"\"\n        }), \": {\\n                    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"object\\\"\"\n        }), \",\\n                    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"properties\\\"\"\n        }), \": {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"team\\\"\"\n        }), \": {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"string\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"description\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"NBA 팀의 이름, 예: 레이커스, 불스\\\"\"\n        }), \"},\\n                    },\\n                    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"required\\\"\"\n        }), \": [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"team\\\"\"\n        }), \"],\\n                },\\n            },\\n        }\\n    ]\\n\\n    response = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n        model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n        messages=messages,\\n        tools=tools,\\n        tool_choice=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"auto\\\"\"\n        }), \",\\n    )\\n\\n    response_message = response.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"choices\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \"\\n    tool_calls = response_message.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"tool_calls\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"tool_calls\"\n        }), \":\\n        available_functions = {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"get_nba_game_score\\\"\"\n        }), \": get_nba_game_score}\\n        messages.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"append\"\n        }), \"(response_message)\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" tool_call \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"in\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"tool_calls\"\n        }), \":\\n            function_name = tool_call.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"function\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"name\"\n        }), \"\\n            function_to_call = available_functions[function_name]\\n            function_args = json.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"loads\"\n        }), \"(tool_call.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"function\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"arguments\"\n        }), \")\\n\\n            function_response = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"function_to_call\"\n        }), \"(team=function_args.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"team\\\"\"\n        }), \"))\\n\\n            messages.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"append\"\n        }), \"(\\n                {\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"tool_call_id\\\"\"\n        }), \": tool_call.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"id\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"role\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"tool\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"name\\\"\"\n        }), \": function_name, \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"content\\\"\"\n        }), \": function_response}\\n            )\\n\\n        second_response = client.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"chat\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"completions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n            model=\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"MODEL\"\n        }), \",\\n            messages=messages,\\n        )\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" second_response\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"function_calling\"\n        }), \"())\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"축하합니다!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 Google Colab에서 GPT-4o를 설정하고 사용하는 방법을 배웠습니다. 이 가이드는 기본 텍스트 완성, JSON 응답, 이미지 처리 및 함수 호출 내용을 다루었습니다. 이러한 기능을 확장하여 다양한 분야의 정교한 AI 응용프로그램을 구축할 수 있습니다. 즐거운 코딩하세요!\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:1400/0*e35njv6_nLGt-8QY.gif\",\n        alt: \"Image\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}