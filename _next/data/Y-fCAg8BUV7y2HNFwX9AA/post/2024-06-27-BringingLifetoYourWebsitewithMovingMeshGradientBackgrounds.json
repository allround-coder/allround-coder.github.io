{"pageProps":{"post":{"title":"움직이는 메쉬 그라데이션 배경으로 웹사이트에 생명을 불어넣는 방법","description":"","date":"2024-06-27 18:24","slug":"2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds","content":"\n\n요즘에는 메쉬 그라데이션 디자인이 점점 더 인기를 끌고 있는 것 같아요.\n\n이것이 저에게 궁금증을 일으켰는데, 만약 이 그라데이션을 애니메이션화해서 더 생동감 있게 만들 수 있을까요?\n\n![이미지](/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_0.png)\n\n본문에서는 움직이는 메쉬 그라디언트 배경을 애니메이션화하여 웹사이트에 다이내미즘과 생동감을 더해주는 방법을 배워보겠어요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"https://miro.medium.com/v2/resize:fit:1400/1*PL_QXqTv_ibiPlDv9Ux1NQ.gif\" />\n\n# 준비물\n\n시작하기 전에 다음 사항을 준비해주세요:\n\n- React 프로젝트가 설정되어 있어야 합니다.\n- Tailwind 종속성이 설치되어 있어야 합니다. npm install -D tailwindcss postcss autoprefixer && npx tailwindcss init -p\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_1.png)\n\n# Mesh Gradient 배경 구현하기\n\n## 단계 1: Mesh Gradient Generator 찾기\n\n먼저, 우리는 애니메이션할 수 있는 mesh gradient를 생성해야 합니다. 빠른 구글 검색으로 몇 가지 훌륭한 mesh gradient 생성기를 찾을 수 있습니다. 이 기사에서는 CSS 형식으로 mesh gradient를 출력할 수 있는 것이 필요합니다. https://csshero.org/mesher/ 이 사이트를 사용해보세요.\n\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_2.png\" />\n\n## 단계 2: 메시 그라디언트 CSS를 배경으로 추가하기\n\n생성기에서 CSS 코드를 복사하여 React 컴포넌트에 추가해보세요. 그러면 배경이 메시 그라디언트로 변경될 것입니다.\n\nMeshGradientBackground.jsx\n\n<div class=\"content-ad\"></div>\n\n```js\nimport React from 'react';\n\nfunction MeshGradientBackground(props) {\n    return (\n        <div style={ {position: 'relative', height: '100vh'} }>\n            {/* Background using ::before pseudo-element */}\n            <div style={\n                {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    zIndex: -1, // Ensure background is behind content\n                    backgroundColor: '#ff99df',\n                    backgroundImage: `\n                        radial-gradient(circle at 52% 73%, hsla(310, 85%, 67%, 1) 0px, transparent 50%),\n                        radial-gradient(circle at 0% 30%, hsla(197, 90%, 76%, 1) 0px, transparent 50%),\n                        radial-gradient(circle at 41% 26%, hsla(234, 79%, 69%, 1) 0px, transparent 50%),\n                        radial-gradient(circle at 41% 51%, hsla(41, 70%, 63%, 1) 0px, transparent 50%),\n                        radial-gradient(circle at 41% 88%, hsla(36, 83%, 61%, 1) 0px, transparent 50%),\n                        radial-gradient(circle at 76% 73%, hsla(346, 69%, 70%, 1) 0px, transparent 50%),\n                        radial-gradient(circle at 29% 37%, hsla(272, 96%, 64%, 1) 0px, transparent 50%)`,\n                    backgroundSize: '100% 100%',\n                    filter: 'blur(80px)',\n                }\n            }></div>\n  \n        </div>\n    );\n}\n\nexport default MeshGradientBackground;\r\n```\n\n![Moving Mesh Gradient Background](/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_3.png)\n\n## 단계 3: 메쉬 그라디언트 배경 애니메이션화\n\n메쉬 그라디언트를 애니메이션화하는 것은 그라디언트 색상을 직접적으로 애니메이션화하는 것이 지원되지 않기 때문에 까다로울 수 있습니다. 이 문제를 해결하기 위해 배경 크기를 애니메이션화하여 움직임의 환상을 만들 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n업데이트한 내용이 있는 MeshGradientBackground.jsx 파일을 수정해주세요.\n\n```js\nimport React from 'react';\nimport '../../styles.css'; // 이 파일에 @keyframes 정의가 포함되어 있는지 확인해주세요\n\nfunction MeshGradientBackground(props) {\n    return (\n        <div style={{ position: 'relative', height: '100vh' }}>\n            {/* ::before 가상 요소를 사용한 배경 */}\n            <div style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                zIndex: -1, // 배경이 내용 뒤에 있도록 함\n                backgroundColor: '#ff99df',\n                backgroundImage: `\n                    radial-gradient(circle at 52% 73%, hsla(310, 85%, 67%, 1) 0px, transparent 50%),\n                    radial-gradient(circle at 0% 30%, hsla(197, 90%, 76%, 1) 0px, transparent 50%),\n                    radial-gradient(circle at 41% 26%, hsla(234, 79%, 69%, 1) 0px, transparent 50%),\n                    radial-gradient(circle at 41% 51%, hsla(41, 70%, 63%, 1) 0px, transparent 50%),\n                    radial-gradient(circle at 41% 88%, hsla(36, 83%, 61%, 1) 0px, transparent 50%),\n                    radial-gradient(circle at 76% 73%, hsla(346, 69%, 70%, 1) 0px, transparent 50%),\n                    radial-gradient(circle at 29% 37%, hsla(272, 96%, 64%, 1) 0px, transparent 50%)`,\n                backgroundSize: '150% 150%',\n                filter: 'blur(80px)',\n                animation: 'moveBackground 10s linear infinite',\n            }}></div>\n  \n        </div>\n    );\n}\n\nexport default MeshGradientBackground;\n```\n\nstyles.css 파일을 추가해주세요.\n\n```css\n@keyframes moveBackground {\n    0% { background-size: 100% 100%; }\n    10% { background-size: 120% 80%; }\n    20% { background-size: 190% 140%; }\n    30% { background-size: 130% 110%; }\n    40% { background-size: 150% 120%; }\n    50% { background-size: 180% 100%; }\n    60% { background-size: 220% 80%; }\n    70% { background-size: 100% 50%; }\n    80% { background-size: 120% 70%; }\n    90% { background-size: 110% 90%; }\n    100% { background-size: 100% 100%; }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n\n![Background Animation](https://miro.medium.com/v2/resize:fit:1400/1*GURQVNHCw-MtVgHjeS4GcQ.gif)\n\nThe background should move like this.\n\nExplanation:\n\nThe moveBackground animation is applied to this div, making the background size change over time, which gives the illusion of movement.\n\n\n<div class=\"content-ad\"></div>\n\n요렇게 하면 됩니다 — 메쉬 그라데이션 배경을 애니메이션화하는 간단한 키프레임 애니메이션이 완성되었어요.\n\n하지만 여기서 멈출 수 없었어요. 이 아름다운 배경의 매력을 전시하는 전체 랜딩 페이지로 만들고 싶었거든요. 그래서 Figma에서 디자인을 만들고 코드로 구현했어요.\n\n![GIF](https://miro.medium.com/v2/resize:fit:1400/1*PL_QXqTv_ibiPlDv9Ux1NQ.gif)\n\n전체 구성 요소를 다운로드하려면 제 GitHub를 확인해주세요!","ogImage":{"url":"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_0.png"},"coverImage":"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_0.png","tag":["Tech"],"readingTime":6},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>요즘에는 메쉬 그라데이션 디자인이 점점 더 인기를 끌고 있는 것 같아요.</p>\n<p>이것이 저에게 궁금증을 일으켰는데, 만약 이 그라데이션을 애니메이션화해서 더 생동감 있게 만들 수 있을까요?</p>\n<p><img src=\"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_0.png\" alt=\"이미지\"></p>\n<p>본문에서는 움직이는 메쉬 그라디언트 배경을 애니메이션화하여 웹사이트에 다이내미즘과 생동감을 더해주는 방법을 배워보겠어요.</p>\n<div class=\"content-ad\"></div>\n<img src=\"https://miro.medium.com/v2/resize:fit:1400/1*PL_QXqTv_ibiPlDv9Ux1NQ.gif\">\n<h1>준비물</h1>\n<p>시작하기 전에 다음 사항을 준비해주세요:</p>\n<ul>\n<li>React 프로젝트가 설정되어 있어야 합니다.</li>\n<li>Tailwind 종속성이 설치되어 있어야 합니다. npm install -D tailwindcss postcss autoprefixer &#x26;&#x26; npx tailwindcss init -p</li>\n</ul>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_1.png\" alt=\"이미지\"></p>\n<h1>Mesh Gradient 배경 구현하기</h1>\n<h2>단계 1: Mesh Gradient Generator 찾기</h2>\n<p>먼저, 우리는 애니메이션할 수 있는 mesh gradient를 생성해야 합니다. 빠른 구글 검색으로 몇 가지 훌륭한 mesh gradient 생성기를 찾을 수 있습니다. 이 기사에서는 CSS 형식으로 mesh gradient를 출력할 수 있는 것이 필요합니다. <a href=\"https://csshero.org/mesher/\" rel=\"nofollow\" target=\"_blank\">https://csshero.org/mesher/</a> 이 사이트를 사용해보세요.</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_2.png\">\n<h2>단계 2: 메시 그라디언트 CSS를 배경으로 추가하기</h2>\n<p>생성기에서 CSS 코드를 복사하여 React 컴포넌트에 추가해보세요. 그러면 배경이 메시 그라디언트로 변경될 것입니다.</p>\n<p>MeshGradientBackground.jsx</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">MeshGradientBackground</span>(<span class=\"hljs-params\">props</span>) {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{</span> {<span class=\"hljs-attr\">position:</span> '<span class=\"hljs-attr\">relative</span>', <span class=\"hljs-attr\">height:</span> '<span class=\"hljs-attr\">100vh</span>'} }></span>\n            {/* Background using ::before pseudo-element */}\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{</span>\n                {\n                    <span class=\"hljs-attr\">position:</span> '<span class=\"hljs-attr\">absolute</span>',\n                    <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">0</span>,\n                    <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n                    <span class=\"hljs-attr\">width:</span> '<span class=\"hljs-attr\">100</span>%',\n                    <span class=\"hljs-attr\">height:</span> '<span class=\"hljs-attr\">100</span>%',\n                    <span class=\"hljs-attr\">zIndex:</span> <span class=\"hljs-attr\">-1</span>, // <span class=\"hljs-attr\">Ensure</span> <span class=\"hljs-attr\">background</span> <span class=\"hljs-attr\">is</span> <span class=\"hljs-attr\">behind</span> <span class=\"hljs-attr\">content</span>\n                    <span class=\"hljs-attr\">backgroundColor:</span> '#<span class=\"hljs-attr\">ff99df</span>',\n                    <span class=\"hljs-attr\">backgroundImage:</span> `\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">52</span>% <span class=\"hljs-attr\">73</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">310</span>, <span class=\"hljs-attr\">85</span>%, <span class=\"hljs-attr\">67</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">0</span>% <span class=\"hljs-attr\">30</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">197</span>, <span class=\"hljs-attr\">90</span>%, <span class=\"hljs-attr\">76</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">41</span>% <span class=\"hljs-attr\">26</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">234</span>, <span class=\"hljs-attr\">79</span>%, <span class=\"hljs-attr\">69</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">41</span>% <span class=\"hljs-attr\">51</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">41</span>, <span class=\"hljs-attr\">70</span>%, <span class=\"hljs-attr\">63</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">41</span>% <span class=\"hljs-attr\">88</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">36</span>, <span class=\"hljs-attr\">83</span>%, <span class=\"hljs-attr\">61</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">76</span>% <span class=\"hljs-attr\">73</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">346</span>, <span class=\"hljs-attr\">69</span>%, <span class=\"hljs-attr\">70</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                        <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">29</span>% <span class=\"hljs-attr\">37</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">272</span>, <span class=\"hljs-attr\">96</span>%, <span class=\"hljs-attr\">64</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%)`,\n                    <span class=\"hljs-attr\">backgroundSize:</span> '<span class=\"hljs-attr\">100</span>% <span class=\"hljs-attr\">100</span>%',\n                    <span class=\"hljs-attr\">filter:</span> '<span class=\"hljs-attr\">blur</span>(<span class=\"hljs-attr\">80px</span>)',\n                }\n            }></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  \n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n    );\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">MeshGradientBackground</span>;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-27-BringingLifetoYourWebsitewithMovingMeshGradientBackgrounds_3.png\" alt=\"Moving Mesh Gradient Background\"></p>\n<h2>단계 3: 메쉬 그라디언트 배경 애니메이션화</h2>\n<p>메쉬 그라디언트를 애니메이션화하는 것은 그라디언트 색상을 직접적으로 애니메이션화하는 것이 지원되지 않기 때문에 까다로울 수 있습니다. 이 문제를 해결하기 위해 배경 크기를 애니메이션화하여 움직임의 환상을 만들 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p>업데이트한 내용이 있는 MeshGradientBackground.jsx 파일을 수정해주세요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'../../styles.css'</span>; <span class=\"hljs-comment\">// 이 파일에 @keyframes 정의가 포함되어 있는지 확인해주세요</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">MeshGradientBackground</span>(<span class=\"hljs-params\">props</span>) {\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">position:</span> '<span class=\"hljs-attr\">relative</span>', <span class=\"hljs-attr\">height:</span> '<span class=\"hljs-attr\">100vh</span>' }}></span>\n            {/* ::before 가상 요소를 사용한 배경 */}\n            <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span>\n                <span class=\"hljs-attr\">position:</span> '<span class=\"hljs-attr\">absolute</span>',\n                <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">0</span>,\n                <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n                <span class=\"hljs-attr\">width:</span> '<span class=\"hljs-attr\">100</span>%',\n                <span class=\"hljs-attr\">height:</span> '<span class=\"hljs-attr\">100</span>%',\n                <span class=\"hljs-attr\">zIndex:</span> <span class=\"hljs-attr\">-1</span>, // <span class=\"hljs-attr\">배경이</span> <span class=\"hljs-attr\">내용</span> <span class=\"hljs-attr\">뒤에</span> <span class=\"hljs-attr\">있도록</span> <span class=\"hljs-attr\">함</span>\n                <span class=\"hljs-attr\">backgroundColor:</span> '#<span class=\"hljs-attr\">ff99df</span>',\n                <span class=\"hljs-attr\">backgroundImage:</span> `\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">52</span>% <span class=\"hljs-attr\">73</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">310</span>, <span class=\"hljs-attr\">85</span>%, <span class=\"hljs-attr\">67</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">0</span>% <span class=\"hljs-attr\">30</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">197</span>, <span class=\"hljs-attr\">90</span>%, <span class=\"hljs-attr\">76</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">41</span>% <span class=\"hljs-attr\">26</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">234</span>, <span class=\"hljs-attr\">79</span>%, <span class=\"hljs-attr\">69</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">41</span>% <span class=\"hljs-attr\">51</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">41</span>, <span class=\"hljs-attr\">70</span>%, <span class=\"hljs-attr\">63</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">41</span>% <span class=\"hljs-attr\">88</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">36</span>, <span class=\"hljs-attr\">83</span>%, <span class=\"hljs-attr\">61</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">76</span>% <span class=\"hljs-attr\">73</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">346</span>, <span class=\"hljs-attr\">69</span>%, <span class=\"hljs-attr\">70</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%),\n                    <span class=\"hljs-attr\">radial-gradient</span>(<span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">at</span> <span class=\"hljs-attr\">29</span>% <span class=\"hljs-attr\">37</span>%, <span class=\"hljs-attr\">hsla</span>(<span class=\"hljs-attr\">272</span>, <span class=\"hljs-attr\">96</span>%, <span class=\"hljs-attr\">64</span>%, <span class=\"hljs-attr\">1</span>) <span class=\"hljs-attr\">0px</span>, <span class=\"hljs-attr\">transparent</span> <span class=\"hljs-attr\">50</span>%)`,\n                <span class=\"hljs-attr\">backgroundSize:</span> '<span class=\"hljs-attr\">150</span>% <span class=\"hljs-attr\">150</span>%',\n                <span class=\"hljs-attr\">filter:</span> '<span class=\"hljs-attr\">blur</span>(<span class=\"hljs-attr\">80px</span>)',\n                <span class=\"hljs-attr\">animation:</span> '<span class=\"hljs-attr\">moveBackground</span> <span class=\"hljs-attr\">10s</span> <span class=\"hljs-attr\">linear</span> <span class=\"hljs-attr\">infinite</span>',\n            }}></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  \n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n    );\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">MeshGradientBackground</span>;\n</code></pre>\n<p>styles.css 파일을 추가해주세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-keyword\">@keyframes</span> moveBackground {\n    <span class=\"hljs-number\">0%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">100%</span> <span class=\"hljs-number\">100%</span>; }\n    <span class=\"hljs-number\">10%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">120%</span> <span class=\"hljs-number\">80%</span>; }\n    <span class=\"hljs-number\">20%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">190%</span> <span class=\"hljs-number\">140%</span>; }\n    <span class=\"hljs-number\">30%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">130%</span> <span class=\"hljs-number\">110%</span>; }\n    <span class=\"hljs-number\">40%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">150%</span> <span class=\"hljs-number\">120%</span>; }\n    <span class=\"hljs-number\">50%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">180%</span> <span class=\"hljs-number\">100%</span>; }\n    <span class=\"hljs-number\">60%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">220%</span> <span class=\"hljs-number\">80%</span>; }\n    <span class=\"hljs-number\">70%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">100%</span> <span class=\"hljs-number\">50%</span>; }\n    <span class=\"hljs-number\">80%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">120%</span> <span class=\"hljs-number\">70%</span>; }\n    <span class=\"hljs-number\">90%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">110%</span> <span class=\"hljs-number\">90%</span>; }\n    <span class=\"hljs-number\">100%</span> { <span class=\"hljs-attribute\">background-size</span>: <span class=\"hljs-number\">100%</span> <span class=\"hljs-number\">100%</span>; }\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1400/1*GURQVNHCw-MtVgHjeS4GcQ.gif\" alt=\"Background Animation\"></p>\n<p>The background should move like this.</p>\n<p>Explanation:</p>\n<p>The moveBackground animation is applied to this div, making the background size change over time, which gives the illusion of movement.</p>\n<div class=\"content-ad\"></div>\n<p>요렇게 하면 됩니다 — 메쉬 그라데이션 배경을 애니메이션화하는 간단한 키프레임 애니메이션이 완성되었어요.</p>\n<p>하지만 여기서 멈출 수 없었어요. 이 아름다운 배경의 매력을 전시하는 전체 랜딩 페이지로 만들고 싶었거든요. 그래서 Figma에서 디자인을 만들고 코드로 구현했어요.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1400/1*PL_QXqTv_ibiPlDv9Ux1NQ.gif\" alt=\"GIF\"></p>\n<p>전체 구성 요소를 다운로드하려면 제 GitHub를 확인해주세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}