{"pageProps":{"post":{"title":"CSS로 마우스를 따라다니는 원 만들기 방법","description":"","date":"2024-05-02 00:22","slug":"2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS","content":"\n\n# 간략한 내용\n\n여기 코드만 보고 싶다면 제 Codepen을 확인하세요!\n\n# 배경\n\n저는 개인 프로젝트를 진행하던 중 특정 요소 위에 커서가 있을 때 따라다니는 작은 원을 가지고 싶었습니다. 이것을 어떻게 구현했는지에 대한 설명입니다.\n\n<div class=\"content-ad\"></div>\n\n## 내 요소들\n\n여기 예제의 HTML은 꽤 간단해요.\n\n```js\n<div class=\"container\">\n  <div class=\"hover-box\"></div>\n</div>\n```\n\n요소는 단 두 개뿐이에요. 하나는 마우스를 올렸을 때 커서 추적기가 나타나길 원하는 요소이고, 다른 하나는 호버 박스를 가운데 정렬하기 위한 컨테이너 요소예요.\n\n<div class=\"content-ad\"></div>\n\n## 일부 스타일링\n\n여기에 상자와 컨테이너에 적용한 스타일이 있어. 나는 상자를 화면 중앙에 배치하고 싶었어.\n\n```js\n:root {\n  background-color: black;\n}\n\n.container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.hover-box {\n  background-color: #32A1F0;\n  --hover-box-height: 200px;\n  height: var(--hover-box-height);\n  width: var(--hover-box-height);\n  border-radius: 1em;\n}\n```\n\n# 시작해볼까요?\n\n<div class=\"content-ad\"></div>\n\n나는 호버 시 나타나는 가상 요소를 사용하기로 결정했어요. translate를 사용하여 가상 요소를 이동시키고 CSS 변수를 사용하여 커서 위치를 추적했어요.\n\n```js\n.hover-box:hover::before {\n  --cursor-tracker-diameter: 24px;\n  background-color: red;\n  opacity: 0.5;\n  height: var(--cursor-tracker-diameter);\n  width: var(--cursor-tracker-diameter);\n  border-radius: var(--cursor-tracker-diameter);\n  content: \"\";\n  translate: var(--x) var(--y);\n}\n```\n\n## 커서 위치 추적하기\n\n\"mousemove\" 이벤트를 사용하여 호버 박스 내에서 마우스가 움직일 때를 추적할 수 있어요. x와 y 오프셋을 얻어와 CSS 변수로 설정했어요.\n\n<div class=\"content-ad\"></div>\n\n```js\nconst hoverBox = document.querySelector('.hover-box');\n\nhoverBox.addEventListener('mousemove', (event) => {\n  const x = event.offsetX;\n  const y = event.offsetY;\n  hoverBox.style.setProperty('--x', `${x}px`);\n  hoverBox.style.setProperty('--y', `${y}px`);\n})\n```\n\n## 어디 있죠?\n\n이 시점에서는 커서 추적기가 전혀 나타나지 않았습니다. 몇 가지 시도를 한 후에 가상 요소에 display: flex를 추가하면 나타난다는 것을 발견했습니다. 정확히 왜 이것이 작동하는지는 모르지만, ::before 가상 요소의 기본 표시가 인라인인 것과 관련이 있을 것으로 생각됩니다.\n\n```js\n.hover-box:hover::before {\n  --cursor-tracker-diameter: 24px;\n  background-color: red;\n  opacity: 0.5;\n  height: var(--cursor-tracker-diameter);\n  width: var(--cursor-tracker-diameter);\n  border-radius: var(--cursor-tracker-diameter);\n  content: \"\";\n  translate: var(--x) var(--y);\n  display: block;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## 원을 조정하기\n\n<img src=\"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_0.png\" />\n\n그겢은 제가 원하는 것과 조금 다릅니다. X와 Y를 어떤 값으로 설정해야 마우스 커서가 원의 가운데에 위치하게 할 수 있는지 조정해 봅시다.\n\n```js\nhoverBox.addEventListener('mousemove', (event) => {\n  const x = event.offsetX - 8;\n  const y = event.offsetY - 7;\n  hoverBox.style.setProperty('--x', `${x}px`);\n  hoverBox.style.setProperty('--y', `${y}px`);\n})\n```\n\n<div class=\"content-ad\"></div>\n\n그것을 좀 더 다뤄 본 후에, 왼쪽으로 8 픽셀 올려서 7 픽셀 올리는 것이 가장 나에게 적합하다고 판단했어.\n\n<img src=\"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_1.png\" />\n\n## 계속해서 커서를 따라옵니다!\n\n가끔 커서 추적기가 요소 바깥에서 커서를 추적하는 것을 알게 되었어.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_2.png\" />\n\n박스 밖에 나오지 않도록 하기 위해 호버 박스에 overflow: hidden을 추가했어요.\n\n```js\n.hover-box {\n  background-color: #32A1F0;\n  --hover-box-height: 200px;\n  height: var(--hover-box-height);\n  width: var(--hover-box-height);\n  border-radius: 1em;\n  overflow: hidden;\n}\n```\n\n# 이제 완료되었어요!\n\n<div class=\"content-ad\"></div>\n\n그 정도면 괜찮을 거에요! 도움이 되었으면 좋겣네요.","ogImage":{"url":"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_0.png"},"coverImage":"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>간략한 내용</h1>\n<p>여기 코드만 보고 싶다면 제 Codepen을 확인하세요!</p>\n<h1>배경</h1>\n<p>저는 개인 프로젝트를 진행하던 중 특정 요소 위에 커서가 있을 때 따라다니는 작은 원을 가지고 싶었습니다. 이것을 어떻게 구현했는지에 대한 설명입니다.</p>\n<div class=\"content-ad\"></div>\n<h2>내 요소들</h2>\n<p>여기 예제의 HTML은 꽤 간단해요.</p>\n<pre><code class=\"hljs language-js\">&#x3C;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"container\"</span>>\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"hover-box\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n&#x3C;/div>\n</code></pre>\n<p>요소는 단 두 개뿐이에요. 하나는 마우스를 올렸을 때 커서 추적기가 나타나길 원하는 요소이고, 다른 하나는 호버 박스를 가운데 정렬하기 위한 컨테이너 요소예요.</p>\n<div class=\"content-ad\"></div>\n<h2>일부 스타일링</h2>\n<p>여기에 상자와 컨테이너에 적용한 스타일이 있어. 나는 상자를 화면 중앙에 배치하고 싶었어.</p>\n<pre><code class=\"hljs language-js\">:root {\n  background-<span class=\"hljs-attr\">color</span>: black;\n}\n\n.<span class=\"hljs-property\">container</span> {\n  <span class=\"hljs-attr\">height</span>: 100vh;\n  <span class=\"hljs-attr\">display</span>: flex;\n  justify-<span class=\"hljs-attr\">content</span>: center;\n  align-<span class=\"hljs-attr\">items</span>: center;\n}\n\n.<span class=\"hljs-property\">hover</span>-box {\n  background-<span class=\"hljs-attr\">color</span>: #32A1F0;\n  --hover-box-<span class=\"hljs-attr\">height</span>: 200px;\n  <span class=\"hljs-attr\">height</span>: <span class=\"hljs-title function_\">var</span>(--hover-box-height);\n  <span class=\"hljs-attr\">width</span>: <span class=\"hljs-title function_\">var</span>(--hover-box-height);\n  border-<span class=\"hljs-attr\">radius</span>: 1em;\n}\n</code></pre>\n<h1>시작해볼까요?</h1>\n<div class=\"content-ad\"></div>\n<p>나는 호버 시 나타나는 가상 요소를 사용하기로 결정했어요. translate를 사용하여 가상 요소를 이동시키고 CSS 변수를 사용하여 커서 위치를 추적했어요.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">hover</span>-<span class=\"hljs-attr\">box</span>:<span class=\"hljs-attr\">hover</span>::before {\n  --cursor-tracker-<span class=\"hljs-attr\">diameter</span>: 24px;\n  background-<span class=\"hljs-attr\">color</span>: red;\n  <span class=\"hljs-attr\">opacity</span>: <span class=\"hljs-number\">0.5</span>;\n  <span class=\"hljs-attr\">height</span>: <span class=\"hljs-title function_\">var</span>(--cursor-tracker-diameter);\n  <span class=\"hljs-attr\">width</span>: <span class=\"hljs-title function_\">var</span>(--cursor-tracker-diameter);\n  border-<span class=\"hljs-attr\">radius</span>: <span class=\"hljs-title function_\">var</span>(--cursor-tracker-diameter);\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">\"\"</span>;\n  <span class=\"hljs-attr\">translate</span>: <span class=\"hljs-title function_\">var</span>(--x) <span class=\"hljs-title function_\">var</span>(--y);\n}\n</code></pre>\n<h2>커서 위치 추적하기</h2>\n<p>\"mousemove\" 이벤트를 사용하여 호버 박스 내에서 마우스가 움직일 때를 추적할 수 있어요. x와 y 오프셋을 얻어와 CSS 변수로 설정했어요.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> hoverBox = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">'.hover-box'</span>);\n\nhoverBox.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'mousemove'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =></span> {\n  <span class=\"hljs-keyword\">const</span> x = event.<span class=\"hljs-property\">offsetX</span>;\n  <span class=\"hljs-keyword\">const</span> y = event.<span class=\"hljs-property\">offsetY</span>;\n  hoverBox.<span class=\"hljs-property\">style</span>.<span class=\"hljs-title function_\">setProperty</span>(<span class=\"hljs-string\">'--x'</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${x}</span>px`</span>);\n  hoverBox.<span class=\"hljs-property\">style</span>.<span class=\"hljs-title function_\">setProperty</span>(<span class=\"hljs-string\">'--y'</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${y}</span>px`</span>);\n})\n</code></pre>\n<h2>어디 있죠?</h2>\n<p>이 시점에서는 커서 추적기가 전혀 나타나지 않았습니다. 몇 가지 시도를 한 후에 가상 요소에 display: flex를 추가하면 나타난다는 것을 발견했습니다. 정확히 왜 이것이 작동하는지는 모르지만, ::before 가상 요소의 기본 표시가 인라인인 것과 관련이 있을 것으로 생각됩니다.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">hover</span>-<span class=\"hljs-attr\">box</span>:<span class=\"hljs-attr\">hover</span>::before {\n  --cursor-tracker-<span class=\"hljs-attr\">diameter</span>: 24px;\n  background-<span class=\"hljs-attr\">color</span>: red;\n  <span class=\"hljs-attr\">opacity</span>: <span class=\"hljs-number\">0.5</span>;\n  <span class=\"hljs-attr\">height</span>: <span class=\"hljs-title function_\">var</span>(--cursor-tracker-diameter);\n  <span class=\"hljs-attr\">width</span>: <span class=\"hljs-title function_\">var</span>(--cursor-tracker-diameter);\n  border-<span class=\"hljs-attr\">radius</span>: <span class=\"hljs-title function_\">var</span>(--cursor-tracker-diameter);\n  <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">\"\"</span>;\n  <span class=\"hljs-attr\">translate</span>: <span class=\"hljs-title function_\">var</span>(--x) <span class=\"hljs-title function_\">var</span>(--y);\n  <span class=\"hljs-attr\">display</span>: block;\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<h2>원을 조정하기</h2>\n<img src=\"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_0.png\">\n<p>그겢은 제가 원하는 것과 조금 다릅니다. X와 Y를 어떤 값으로 설정해야 마우스 커서가 원의 가운데에 위치하게 할 수 있는지 조정해 봅시다.</p>\n<pre><code class=\"hljs language-js\">hoverBox.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'mousemove'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =></span> {\n  <span class=\"hljs-keyword\">const</span> x = event.<span class=\"hljs-property\">offsetX</span> - <span class=\"hljs-number\">8</span>;\n  <span class=\"hljs-keyword\">const</span> y = event.<span class=\"hljs-property\">offsetY</span> - <span class=\"hljs-number\">7</span>;\n  hoverBox.<span class=\"hljs-property\">style</span>.<span class=\"hljs-title function_\">setProperty</span>(<span class=\"hljs-string\">'--x'</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${x}</span>px`</span>);\n  hoverBox.<span class=\"hljs-property\">style</span>.<span class=\"hljs-title function_\">setProperty</span>(<span class=\"hljs-string\">'--y'</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${y}</span>px`</span>);\n})\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>그것을 좀 더 다뤄 본 후에, 왼쪽으로 8 픽셀 올려서 7 픽셀 올리는 것이 가장 나에게 적합하다고 판단했어.</p>\n<img src=\"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_1.png\">\n<h2>계속해서 커서를 따라옵니다!</h2>\n<p>가끔 커서 추적기가 요소 바깥에서 커서를 추적하는 것을 알게 되었어.</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-05-02-HowToCreateaCircleThatFollowstheCursorinCSS_2.png\">\n<p>박스 밖에 나오지 않도록 하기 위해 호버 박스에 overflow: hidden을 추가했어요.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">hover</span>-box {\n  background-<span class=\"hljs-attr\">color</span>: #32A1F0;\n  --hover-box-<span class=\"hljs-attr\">height</span>: 200px;\n  <span class=\"hljs-attr\">height</span>: <span class=\"hljs-title function_\">var</span>(--hover-box-height);\n  <span class=\"hljs-attr\">width</span>: <span class=\"hljs-title function_\">var</span>(--hover-box-height);\n  border-<span class=\"hljs-attr\">radius</span>: 1em;\n  <span class=\"hljs-attr\">overflow</span>: hidden;\n}\n</code></pre>\n<h1>이제 완료되었어요!</h1>\n<div class=\"content-ad\"></div>\n<p>그 정도면 괜찮을 거에요! 도움이 되었으면 좋겣네요.</p>\n</body>\n</html>\n"},"__N_SSG":true}