{"pageProps":{"post":{"title":"Dayjs로 날짜 조작하기 - 주어진 시간을 추가하거나 빼기","description":"","date":"2024-05-13 00:23","slug":"2024-05-13-ManipulatingDateswithDayjsAddorSubtractaGivenAmountofTime","content":"\n\n<img src=\"/assets/img/2024-05-13-ManipulatingDateswithDayjsAddorSubtractaGivenAmountofTime_0.png\" />\n\nDay.js는 우리 앱에서 날짜를 조작할 수 있게 해주는 JavaScript 라이브러리입니다.\n\n이 기사에서는 JavaScript 앱에서 Day.js를 사용하여 날짜를 조작하는 방법을 살펴보겠습니다.\n\n# 주어진 시간 만큼 추가하거나 빼기\n\n\n\nDay.js의 Date 객체에 add 메소드를 사용하여 지정된 시간을 추가할 수 있어요.\n\n예를 들어, 다음과 같이 작성할 수 있어요:\n\n```js\nconst dayjs = require(\"dayjs\");\nconst result = dayjs().add(7, \"day\");\nconsole.log(result);\n```\n\n현재 날짜 및 시간에 7일을 추가하려면 이렇게 해보세요.\n\n\n\n우리는 첫 번째 인수로 `year`, `month`, `date`, `hour`, `minute`, `second`, 그리고 `millisecond` 단위 값 중 하나를 사용하여 add 메서드를 호출합니다.\n\n두 번째 인수는 설정할 값입니다.\n\n1월부터 시작하는 월은 JavaScript 날짜와 같이 0으로 시작합니다.\n\n각 인수 문자열에 대한 축약어도 있습니다.\n\n\n\n`y`는 `year`의 약어입니다.\n\n`M`은 `month`의 약어입니다.\n\n`D`는 `date`의 약어입니다.\n\n`d`는 `day`의 약어이며, 이는 주의 요일을 나타냅니다. 0은 일요일부터 시작하며, 6은 토요일을 의미합니다.\n\n\n\n`h`은 `시간`의 약자입니다.\n\n`m`은 `분`의 약자입니다.\n\n`s`는 `초`의 약자입니다.\n\n그리고 `ms`는 `밀리초`의 약자입니다.\n\n\n\n웹 애플리케이션에서 날짜를 조작할 수 있는 JavaScript 라이브러리인 Day.js를 사용해봤네요. \"add\"를 \"subtract\"로 대체하고 동일한 인수를 유지하여 특정 시간을 뺄 수 있습니다.\n\n# 결론","ogImage":{"url":"/assets/img/2024-05-13-ManipulatingDateswithDayjsAddorSubtractaGivenAmountofTime_0.png"},"coverImage":"/assets/img/2024-05-13-ManipulatingDateswithDayjsAddorSubtractaGivenAmountofTime_0.png","tag":["Tech"],"readingTime":1},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-05-13-ManipulatingDateswithDayjsAddorSubtractaGivenAmountofTime_0.png\">\n<p>Day.js는 우리 앱에서 날짜를 조작할 수 있게 해주는 JavaScript 라이브러리입니다.</p>\n<p>이 기사에서는 JavaScript 앱에서 Day.js를 사용하여 날짜를 조작하는 방법을 살펴보겠습니다.</p>\n<h1>주어진 시간 만큼 추가하거나 빼기</h1>\n<p>Day.js의 Date 객체에 add 메소드를 사용하여 지정된 시간을 추가할 수 있어요.</p>\n<p>예를 들어, 다음과 같이 작성할 수 있어요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> dayjs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"dayjs\"</span>);\n<span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-title function_\">dayjs</span>().<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-number\">7</span>, <span class=\"hljs-string\">\"day\"</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n</code></pre>\n<p>현재 날짜 및 시간에 7일을 추가하려면 이렇게 해보세요.</p>\n<p>우리는 첫 번째 인수로 <code>year</code>, <code>month</code>, <code>date</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, 그리고 <code>millisecond</code> 단위 값 중 하나를 사용하여 add 메서드를 호출합니다.</p>\n<p>두 번째 인수는 설정할 값입니다.</p>\n<p>1월부터 시작하는 월은 JavaScript 날짜와 같이 0으로 시작합니다.</p>\n<p>각 인수 문자열에 대한 축약어도 있습니다.</p>\n<p><code>y</code>는 <code>year</code>의 약어입니다.</p>\n<p><code>M</code>은 <code>month</code>의 약어입니다.</p>\n<p><code>D</code>는 <code>date</code>의 약어입니다.</p>\n<p><code>d</code>는 <code>day</code>의 약어이며, 이는 주의 요일을 나타냅니다. 0은 일요일부터 시작하며, 6은 토요일을 의미합니다.</p>\n<p><code>h</code>은 <code>시간</code>의 약자입니다.</p>\n<p><code>m</code>은 <code>분</code>의 약자입니다.</p>\n<p><code>s</code>는 <code>초</code>의 약자입니다.</p>\n<p>그리고 <code>ms</code>는 <code>밀리초</code>의 약자입니다.</p>\n<p>웹 애플리케이션에서 날짜를 조작할 수 있는 JavaScript 라이브러리인 Day.js를 사용해봤네요. \"add\"를 \"subtract\"로 대체하고 동일한 인수를 유지하여 특정 시간을 뺄 수 있습니다.</p>\n<h1>결론</h1>\n</body>\n</html>\n"},"__N_SSG":true}