{"pageProps":{"post":{"title":"Vite React에서 프록시 설정하기","description":"","date":"2024-05-12 20:13","slug":"2024-05-12-SetupProxyinViteReact","content":"\n\nVite React 애플리케이션에서는 다음이 제게 가장 잘 작동하는 방법입니다:\n\nvite.config.js 파일에서 proxy 옵션을 사용할 수 있습니다. proxy 옵션을 사용하면 개발 중에 특정 요청을 다른 서버로 리디렉션할 수 있습니다. 이는 예를 들어 프런트엔드 애플리케이션이 별도 서버에서 실행되는 백엔드 API와 통신해야 할 때 유용합니다.\n\nvite.config.js 파일 안에 proxy 옵션을 정의하세요:\n\n```js\n/// <reference types=\"vite/client\" />\n\nimport { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  server: {\n      proxy: {\n        '/api': {\n          target: 'http://your-backend-api-server.com',\n          changeOrigin: true,\n          rewrite: (path) => path.replace(/^\\/api/, ''),\n        },\n      },\n    },\n});\n```\n\n\n\n이 예제에서는 /api로 시작하는 요청에 대한 프록시를 설정하고 있습니다. 이 패턴과 일치하는 모든 요청은 http://your-backend-api-server.com 으로 리디렉션됩니다.\n\n환경 변수에서 API URL을 가져오고 싶다면 다음과 같이 작성할 수 있습니다.\n\n```js\n/// <reference types=\"vite/client\" />\n\nimport { defineConfig, loadEnv } from 'vite';\nimport react from '@vitejs/plugin-react';\n\n// https://vitejs.dev/config/\nexport default ({ mode }) => {\n  process.env = { ...process.env, ...loadEnv(mode, process.cwd()) };\n  const config = {\n    plugins: [react()],\n    server: {\n      proxy: {\n        '/api': {\n          target: process.env.VITE_BASE_URL,\n          changeOrigin: true,\n          rewrite: (path) => path.replace(/^\\/api/, ''),\n        },\n      },\n    },\n  };\n  return defineConfig(config);\n};\n```\n\n여기서 VITE_BASE_URL이 API URL입니다.\n\n\n\n이 포스트가 마음에 드셨다면 아래의 하트를 클릭해주세요 :).","ogImage":{"url":"/assets/img/2024-05-12-SetupProxyinViteReact_0.png"},"coverImage":"/assets/img/2024-05-12-SetupProxyinViteReact_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>Vite React 애플리케이션에서는 다음이 제게 가장 잘 작동하는 방법입니다:</p>\n<p>vite.config.js 파일에서 proxy 옵션을 사용할 수 있습니다. proxy 옵션을 사용하면 개발 중에 특정 요청을 다른 서버로 리디렉션할 수 있습니다. 이는 예를 들어 프런트엔드 애플리케이션이 별도 서버에서 실행되는 백엔드 API와 통신해야 할 때 유용합니다.</p>\n<p>vite.config.js 파일 안에 proxy 옵션을 정의하세요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/// &#x3C;reference types=\"vite/client\" /></span>\n\n<span class=\"hljs-keyword\">import</span> { defineConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vite'</span>;\n<span class=\"hljs-keyword\">import</span> react <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@vitejs/plugin-react'</span>;\n\n<span class=\"hljs-comment\">// https://vitejs.dev/config/</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">defineConfig</span>({\n  <span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-title function_\">react</span>()],\n  <span class=\"hljs-attr\">server</span>: {\n      <span class=\"hljs-attr\">proxy</span>: {\n        <span class=\"hljs-string\">'/api'</span>: {\n          <span class=\"hljs-attr\">target</span>: <span class=\"hljs-string\">'http://your-backend-api-server.com'</span>,\n          <span class=\"hljs-attr\">changeOrigin</span>: <span class=\"hljs-literal\">true</span>,\n          <span class=\"hljs-attr\">rewrite</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">path</span>) =></span> path.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^\\/api/</span>, <span class=\"hljs-string\">''</span>),\n        },\n      },\n    },\n});\n</code></pre>\n<p>이 예제에서는 /api로 시작하는 요청에 대한 프록시를 설정하고 있습니다. 이 패턴과 일치하는 모든 요청은 <a href=\"http://your-backend-api-server.com\" rel=\"nofollow\" target=\"_blank\">http://your-backend-api-server.com</a> 으로 리디렉션됩니다.</p>\n<p>환경 변수에서 API URL을 가져오고 싶다면 다음과 같이 작성할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/// &#x3C;reference types=\"vite/client\" /></span>\n\n<span class=\"hljs-keyword\">import</span> { defineConfig, loadEnv } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vite'</span>;\n<span class=\"hljs-keyword\">import</span> react <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@vitejs/plugin-react'</span>;\n\n<span class=\"hljs-comment\">// https://vitejs.dev/config/</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> ({ mode }) => {\n  process.<span class=\"hljs-property\">env</span> = { ...process.<span class=\"hljs-property\">env</span>, ...<span class=\"hljs-title function_\">loadEnv</span>(mode, process.<span class=\"hljs-title function_\">cwd</span>()) };\n  <span class=\"hljs-keyword\">const</span> config = {\n    <span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-title function_\">react</span>()],\n    <span class=\"hljs-attr\">server</span>: {\n      <span class=\"hljs-attr\">proxy</span>: {\n        <span class=\"hljs-string\">'/api'</span>: {\n          <span class=\"hljs-attr\">target</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">VITE_BASE_URL</span>,\n          <span class=\"hljs-attr\">changeOrigin</span>: <span class=\"hljs-literal\">true</span>,\n          <span class=\"hljs-attr\">rewrite</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">path</span>) =></span> path.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^\\/api/</span>, <span class=\"hljs-string\">''</span>),\n        },\n      },\n    },\n  };\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">defineConfig</span>(config);\n};\n</code></pre>\n<p>여기서 VITE_BASE_URL이 API URL입니다.</p>\n<p>이 포스트가 마음에 드셨다면 아래의 하트를 클릭해주세요 :).</p>\n</body>\n</html>\n"},"__N_SSG":true}