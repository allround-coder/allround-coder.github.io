{"pageProps":{"post":{"title":"배열 변수를 상태 변수로 변환하기","description":"","date":"2024-05-12 18:51","slug":"2024-05-12-TransformingArrayVariableAsAStateVariable","content":"\n\n```js\nconst demoArray = [\n  { id: 0, name: \"Yogesh\", age: 24 },\n  { id: 1, name: \"Nitesh\", age: 21 },\n  { id: 2, name: \"Hriday\", age: 24 },\n];\n```\n\n화면에 표시하거나 렌더링 목록 기술을 사용하여 배열 정보를 렌더링하는 컴포넌트를 만듭니다.\n\n```js\nfunction TransformArray() {\n  const [info, setInfo] = useState(demoArray);\n\n  return (\n    <Fragment>\n      <h1>소피모어를 하는 우리 동문 정보</h1>\n      {info.map((ele) => (\n        <Fragment key={ele.id}>\n          <h1>\n            {ele.name}-{ele.age}\n          </h1>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n}\n```\n\n\n\n루트 컴포넌트에서 TransformArray의 컴포넌트 인스턴스를 생성하는 컴포넌트를 반환하세요.\n\n```js\nfunction App() {\n  return <TransformArray />;\n}\n```\n\n렌더링하기\n\n```js\nimport React from \"react\";\nimport { createRoot } from \"react-dom\";\n\ncreateRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n\n\n여기 전체 코드가 있어요\n\n```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\n// 전역으로 선언된 배열\nconst demoArray = [\n  { id: 0, name: \"Yogesh\", age: 24 },\n  { id: 1, name: \"Nitesh\", age: 21 },\n  { id: 2, name: \"Hriday\", age: 24 },\n];\n\n// 작동하는 컴포넌트\nfunction TransformArray() {\n  const [info, setInfo] = useState(demoArray);\n\n  return (\n    <Fragment>\n      <h1>2학년 시절 우리 동문 정보</h1>\n      {info.map((ele) => (\n        <Fragment key={ele.id}>\n          <h1>\n            {ele.name}-{ele.age}\n          </h1>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n}\n\n// 루트 컴포넌트\nfunction App() {\n  return <TransformArray />;\n}\n\n// React 컴포넌트 렌더링\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n이제 이 학생들이 10년 후의 나이를 알려주는 버튼을 만들어보세요\n\n```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\n// 전역으로 선언된 배열\nconst demoArray = [\n  { id: 0, name: \"Yogesh\", age: 24 },\n  { id: 1, name: \"Nitesh\", age: 21 },\n  { id: 2, name: \"Hriday\", age: 24 },\n];\n\n// 작동하는 컴포넌트\nfunction TransformArray() {\n  const [info, setInfo] = useState(demoArray);\n\n  function handleClick() {\n    const newVal = info.map((ele) => ({ ...ele, age: ele.age + 10 }));\n    setInfo(newVal);\n  }\n\n  return (\n    <Fragment>\n      <h1>2학년 시절 우리 동문 정보</h1>\n      {info.map((ele) => (\n        <Fragment key={ele.id}>\n          <h1>\n            {ele.name}-{ele.age}\n          </h1>\n        </Fragment>\n      ))}\n      <button onClick={handleClick}>현재 나이</button>\n    </Fragment>\n  );\n}\n\n// 루트 컴포넌트\nfunction App() {\n  return <TransformArray />;\n}\n\n// React 컴포넌트 렌더링\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n\n\n여기서 우리는 현재 학생의 나이를 처리하는 간단한 버튼을 만들었습니다.\n\n지금은 맵 메서드가 특히 배열 내부의 객체를 업데이트하기 위해 리액트에서 널리 사용됩니다.\n\n우리가 원하는 변수를 업데이트하는 데 꽤 간단한 방법으로 구조 분해 메커니즘을 사용했습니다.","ogImage":{"url":"/assets/img/2024-05-12-TransformingArrayVariableAsAStateVariable_0.png"},"coverImage":"/assets/img/2024-05-12-TransformingArrayVariableAsAStateVariable_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> demoArray = [\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Yogesh\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">24</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Nitesh\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">21</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Hriday\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">24</span> },\n];\n</code></pre>\n<p>화면에 표시하거나 렌더링 목록 기술을 사용하여 배열 정보를 렌더링하는 컴포넌트를 만듭니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TransformArray</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> [info, setInfo] = <span class=\"hljs-title function_\">useState</span>(demoArray);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Fragment</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>소피모어를 하는 우리 동문 정보<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n      {info.map((ele) => (\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Fragment</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{ele.id}</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>\n            {ele.name}-{ele.age}\n          <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Fragment</span>></span>\n      ))}\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Fragment</span>></span></span>\n  );\n}\n</code></pre>\n<p>루트 컴포넌트에서 TransformArray의 컴포넌트 인스턴스를 생성하는 컴포넌트를 반환하세요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">App</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">TransformArray</span> /></span></span>;\n}\n</code></pre>\n<p>렌더링하기</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> { createRoot } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom\"</span>;\n\n<span class=\"hljs-title function_\">createRoot</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"root\"</span>)).<span class=\"hljs-title function_\">render</span>(\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">React.StrictMode</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">App</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">React.StrictMode</span>></span></span>\n);\n</code></pre>\n<p>여기 전체 코드가 있어요</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">ReactDOM</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom/client\"</span>;\n\n<span class=\"hljs-comment\">// 전역으로 선언된 배열</span>\n<span class=\"hljs-keyword\">const</span> demoArray = [\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Yogesh\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">24</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Nitesh\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">21</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Hriday\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">24</span> },\n];\n\n<span class=\"hljs-comment\">// 작동하는 컴포넌트</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TransformArray</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> [info, setInfo] = <span class=\"hljs-title function_\">useState</span>(demoArray);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Fragment</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>2학년 시절 우리 동문 정보<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n      {info.map((ele) => (\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Fragment</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{ele.id}</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>\n            {ele.name}-{ele.age}\n          <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Fragment</span>></span>\n      ))}\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Fragment</span>></span></span>\n  );\n}\n\n<span class=\"hljs-comment\">// 루트 컴포넌트</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">App</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">TransformArray</span> /></span></span>;\n}\n\n<span class=\"hljs-comment\">// React 컴포넌트 렌더링</span>\n<span class=\"hljs-title class_\">ReactDOM</span>.<span class=\"hljs-title function_\">createRoot</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"root\"</span>)).<span class=\"hljs-title function_\">render</span>(\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">React.StrictMode</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">App</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">React.StrictMode</span>></span></span>\n);\n</code></pre>\n<p>이제 이 학생들이 10년 후의 나이를 알려주는 버튼을 만들어보세요</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">ReactDOM</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom/client\"</span>;\n\n<span class=\"hljs-comment\">// 전역으로 선언된 배열</span>\n<span class=\"hljs-keyword\">const</span> demoArray = [\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Yogesh\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">24</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Nitesh\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">21</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Hriday\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">24</span> },\n];\n\n<span class=\"hljs-comment\">// 작동하는 컴포넌트</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">TransformArray</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> [info, setInfo] = <span class=\"hljs-title function_\">useState</span>(demoArray);\n\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleClick</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> newVal = info.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">ele</span>) =></span> ({ ...ele, <span class=\"hljs-attr\">age</span>: ele.<span class=\"hljs-property\">age</span> + <span class=\"hljs-number\">10</span> }));\n    <span class=\"hljs-title function_\">setInfo</span>(newVal);\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Fragment</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>2학년 시절 우리 동문 정보<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n      {info.map((ele) => (\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Fragment</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{ele.id}</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>\n            {ele.name}-{ele.age}\n          <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Fragment</span>></span>\n      ))}\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleClick}</span>></span>현재 나이<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Fragment</span>></span></span>\n  );\n}\n\n<span class=\"hljs-comment\">// 루트 컴포넌트</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">App</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">TransformArray</span> /></span></span>;\n}\n\n<span class=\"hljs-comment\">// React 컴포넌트 렌더링</span>\n<span class=\"hljs-title class_\">ReactDOM</span>.<span class=\"hljs-title function_\">createRoot</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"root\"</span>)).<span class=\"hljs-title function_\">render</span>(\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">React.StrictMode</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">App</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">React.StrictMode</span>></span></span>\n);\n</code></pre>\n<p>여기서 우리는 현재 학생의 나이를 처리하는 간단한 버튼을 만들었습니다.</p>\n<p>지금은 맵 메서드가 특히 배열 내부의 객체를 업데이트하기 위해 리액트에서 널리 사용됩니다.</p>\n<p>우리가 원하는 변수를 업데이트하는 데 꽤 간단한 방법으로 구조 분해 메커니즘을 사용했습니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}