{"pageProps":{"post":{"title":"CSS 기초 문법 정리","description":"","date":"2024-05-02 00:01","slug":"2024-05-02-IntroductiontoCSSSyntax","content":"\n\n![CSS Syntax](/assets/img/2024-05-02-IntroductiontoCSSSyntax_0.png)\n\nCSS를 사용하는 규칙의 두 부분은 선언 블록과 선택자입니다.\n\n## CSS 구문:\n\n![CSS Syntax](/assets/img/2024-05-02-IntroductiontoCSSSyntax_1.png)\n\n<div class=\"content-ad\"></div>\n\n선택기는 스타일을 지정하려는 HTML 요소를 가리킵니다.\n\n각 선언은 콜론으로 구분된 CSS 속성 이름과 값으로 구성됩니다.\n\n# 예제:\n\n```js\n<!DOCTYPE html>\n<html>\n<head>\n<style>\np {\n  color: red;\n  text-align: center;\n} \n</style>\n</head>\n<body>\n\n<p>Hello World!</p>\n<p>These paragraphs are styled with CSS.</p>\n\n</body>\n</html>\n```\n\n<div class=\"content-ad\"></div>\n\n## 예시 설명:\n\n- CSS에서 P는 셀렉터입니다 (스타일을 적용할 HTML 요소를 가리킵니다: `p`).\n- Red는 속성(property)의 값인 색상입니다.\n- 속성의 값은 'center'이고, 사용된 속성은 text-align입니다.\n\n![이미지](/assets/img/2024-05-02-IntroductiontoCSSSyntax_2.png)\n\n# 읽어 주셔서 감사합니다!","ogImage":{"url":"/assets/img/2024-05-02-IntroductiontoCSSSyntax_0.png"},"coverImage":"/assets/img/2024-05-02-IntroductiontoCSSSyntax_0.png","tag":["Tech"],"readingTime":1},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-02-IntroductiontoCSSSyntax_0.png\",\n        alt: \"CSS Syntax\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"CSS를 사용하는 규칙의 두 부분은 선언 블록과 선택자입니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"CSS 구문:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-02-IntroductiontoCSSSyntax_1.png\",\n        alt: \"CSS Syntax\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"선택기는 스타일을 지정하려는 HTML 요소를 가리킵니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"각 선언은 콜론으로 구분된 CSS 속성 이름과 값으로 구성됩니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"예제:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<!\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DOCTYPE\"\n        }), \" html>\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"html\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"head\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"style\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"css\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-selector-tag\",\n              children: \"p\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-attribute\",\n              children: \"color\"\n            }), \": red;\\n  \", _jsx(_components.span, {\n              className: \"hljs-attribute\",\n              children: \"text-align\"\n            }), \": center;\\n} \\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"style\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"head\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"body\"\n            }), \">\"]\n          }), \"\\n\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"Hello World!\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"These paragraphs are styled with CSS.\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"body\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"html\"\n            }), \">\"]\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"예시 설명:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"CSS에서 P는 셀렉터입니다 (스타일을 적용할 HTML 요소를 가리킵니다: \", _jsx(_components.code, {\n          children: \"p\"\n        }), \").\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Red는 속성(property)의 값인 색상입니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"속성의 값은 'center'이고, 사용된 속성은 text-align입니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-02-IntroductiontoCSSSyntax_2.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"읽어 주셔서 감사합니다!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}