{"pageProps":{"post":{"title":"EC2 인스턴스에 HTML 웹사이트를 호스팅하는 방법","description":"","date":"2024-06-22 15:27","slug":"2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance","content":"\n\nAWS에서 HTML 웹사이트 호스팅하기\n\n![How to Host an HTML Website on an EC2 Instance](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_0.png)\n\n## 요구 사항:\n\nAWS\n\n<div class=\"content-ad\"></div>\n\nVPC\n\n# 사례 연구 및 소개:\n\n2023년 두 번째 분기에 착한 인터넷 랜드마크 기업으로 시작한 스타트업은 외국인 근로자가 가족에게 돈을 송금하는 수요를 처리할 수 있는 웹 사이트를 구축할 계획입니다. 기관은 클라이언트가 쉽게 사용할 수 있는 웹 사이트를 운영하고자 합니다. 이 튜토리얼에서는 HTML 및 Apache 서버를 사용하여 Amazon EC2에 웹 사이트를 호스팅하는 방법에 대해 설명합니다.\n\nHTML은 경량 언어로 다른 언어와 쉽게 인터페이스할 수 있습니다. 또한 EC2의 우수한 가용성, 보안, 비용 효율성 및 확장성을 활용할 수 있을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n웹 사이트가 활성화되면 터미널을 사용하여 EC2에 SSH하여 모든 것이 올바르게 작동하는지 확인할 것입니다. 모든 단계를 완료한 후에 사용한 리소스를 정리할 것입니다.\n\n# 목표\n\n- 보안 그룹을 생성하고 포트 80과 22를 허용합니다.\n- 기본 VPC를 사용합니다.\n- 제공된 서브넷 및 리전을 사용합니다.\n- 인스턴스를 시작합니다.\n- Apache 웹 서버에 도달할 수 있는지 테스트합니다.\n- 정리하기\n\n# 단계 1: 지역 선택\n\n<div class=\"content-ad\"></div>\n\n새로운 AWS 콘솔을 사용하여 미국 동부(버지니아 북부) 지역을 선택하십시오. 사용하고 싶은 지역을 선택할 수 있습니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_1.png)\n\n## 단계 2: 보안 그룹 생성 및 포트 80 및 22 열기\n\nAWS 콘솔에서 VPC를 검색하고 VPC 대시 보드로 이동하세요.\n\n<div class=\"content-ad\"></div>\n\n아래는 마크다운 형식으로 변환한 내용입니다.\n\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_2.png)\n\n보안 그룹 선택 — 왼쪽 핸드 사이드 메뉴 또는 페이지 중앙에서 찾을 수 있습니다\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_3.png)\n\n오른쪽 핸드 사이드에서 '보안 그룹 생성' 버튼을 클릭하세요\n\n\n<div class=\"content-ad\"></div>\n\n\n![How to Host an HTML Website on an EC2 Instance - Step 4](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_4.png)\n\nCreate a security group by entering the name and description. You can choose any available VPC. In our case, we selected the default VPC.\n\n![How to Host an HTML Website on an EC2 Instance - Step 5](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_5.png)\n\nScroll down to Inbound rules. First, add a rule for port 80 to allow internet users to access our website. Click on Add rule and choose HTTP with port 80 always open.\n\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_6.png\" />\n\n다음으로 할 일은 소스 아래에서 포트 80으로 오는 트래픽을 인터넷의 어느 곳에서든 허용하도록 하는 것입니다. 소스에서 IPv4의 Anywhere를 선택하세요 — 이렇게 하면 자동으로 0.0.0/0이 나타납니다.\n\n여전히 인바운드 규칙 아래에 있습니다. 다음으로 선택할 규칙은 SSH입니다. 이것은 TCP 프로토콜과 22 포트 범위를 나타냅니다. 소스에서 My IP를 선택해야 합니다 — 이것은 여러분의 IP 주소를 보여줍니다.\n\n이것은 포트 22로 들어오는 트래픽이 여러분의 IP 주소에서 오는 경우에만 허용된다는 것을 의미합니다. 포트 22를 통해 EC2 인스턴스에 SSH로 연결할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n보안 최상의 실천을 위해 항상 EC2 인스턴스로 SSH 접속할 수 있는 IP 주소를 귀하의 IP 주소로 제한해야 합니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_7.png)\n\n따라서 이 두 가지 규칙을 열어야 합니다. 완료되면 페이지 하단 오른쪽 부분의 '보안 그룹 생성'을 클릭하세요.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_8.png)\n\n<div class=\"content-ad\"></div>\n\n보안 그룹이 생성되었어요\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_9.png)\n\n# 단계 3: EC2 인스턴스 시작. (보안 그룹 및 키페어 추가)\n\n검색 바에서 EC2를 입력하고 서비스에서 EC2를 선택하세요.\n\n<div class=\"content-ad\"></div>\n\n\n[![Screenshot 1](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_10.png)](URL_LINK_1)\n[![Screenshot 2](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_11.png)](URL_LINK_2)\n\nScroll down to Application and OS Images (Amazon Machine Image). Under Quick Start select Amazon Linux. The AMI that we are going to use is Amazon Linux 2 AMI Free Tier\n\n[![Screenshot 3](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_12.png)](URL_LINK_3)\n\n\n<div class=\"content-ad\"></div>\n\n인스턴스 유형은 t2.micro 프리 티어로 설정됩니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_13.png)\n\n키페어(로그인) 항목으로 내려가서 이전에 만들었던 키페어를 선택합니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_14.png)\n\n<div class=\"content-ad\"></div>\n\n네트워크 설정으로 스크롤하여 편집을 클릭하세요. 드롭다운 메뉴에서 선택 가능한 VPC 목록이 표시됩니다. 이전에 사용한 기본 VPC를 선택할 것입니다.\n\n다음으로 이전에 만든 MYSECURITY33 보안 그룹을 선택해야 합니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_15.png)\n\n오른쪽에 설정을 확인한 후 인스턴스를 시작을 클릭하세요.\n\n<div class=\"content-ad\"></div>\n\n![화면 캡처 1](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_16.png)\n\n인스턴스를 성공적으로 시작했습니다. \"모든 인스턴스 보기\"를 클릭해봐요.\n\n![화면 캡처 2](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_17.png)\n\n![화면 캡처 3](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_18.png)\n\n<div class=\"content-ad\"></div>\n\n# 단계 4: EC2 인스턴스에 SSH로 접속하기\n\nEC2 인스턴스로 SSH로 접속하려면 myinstance33를 선택하십시오.\n\n![image1](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_19.png)\n\n![image2](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_20.png)\n\n<div class=\"content-ad\"></div>\n\ncmd에서 키 다운로드 폴더로 이동해주세요.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_21.png)\n\n그리고 여기에 Amazon 링크를 입력해주세요.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_22.png)\n\n<div class=\"content-ad\"></div>\n\n'yes' 값을 주면 cmd에서 ec2 인스턴스를 받을 수 있습니다.\n\n![EC2 인스턴스](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_23.png)\n\n# 단계 5: 웹 사이트에 필요한 소프트웨어 설치하기\n\nEC2 터미널에 입력해야 하는 첫 번째 명령은 sudo su 이며, Enter를 눌러야 합니다 — 이는 루트 사용자로 변경하는 것을 허용합니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_24.png)\n\n다음으로 입력해야 할 명령어는 yum update -y 입니다. 초록색 바탕의 프롬프트가 표시되면 다음 명령어를 실행할 수 있습니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_25.png)\n\n이제 yum install -y httpd를 입력해 봅시다.\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_26.png)\n\n다음 명령어는 디렉토리 변경을 의미합니다. 즉, html 디렉토리로 이동하려는 의미입니다. cd /var/www/html 를 입력해 봅시다.\n\n이전에는 ec2 디렉토리에 있었습니다.\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_27.png)\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_28.png)\n\n위 명령을 실행한 후에 html 디렉토리에 이미 들어와 있는 것을 알 수 있습니다.\n\n다음으로 Putty 세션에서 입력해야 할 명령은 다음과 같습니다: wget https://github.com/azeezsalu/techmax/archive/refs/heads/main.zip\n\n각 명령어를 정의해 봅시다:\n\n\n<div class=\"content-ad\"></div>\n\n`wget`은 EC2 인스턴스로 파일을 다운로드하는 데 사용하는 Linux 명령어입니다.\n\n다운로드하려는 파일이 위치한 URL입니다: https://github.com/azeezsalu/techmax/archive/refs/heads/main.zip\n\n파일은 main.zip에 다운로드되었습니다. 파일을 확인하려면 ls를 입력해보세요.\n\n<div class=\"content-ad\"></div>\n\n\n![Image](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_30.png)\n\n웹 파일을 EC2 인스턴스로 다운로드하고 나면, 웹 파일을 이 zip 폴더에 넣게 됩니다. 그리고 그 다음 단계로 이어집니다.\n\n# Step 6: HTML 디렉토리에 웹 파일 넣기\n\n우리는 웹사이트를 볼 수 있도록 html 디렉토리에 웹 파일을 넣어야 합니다. 우리의 다음 명령어가 바로 이 일을 수행할 것입니다. main.zip 파일을 풀기 위해 unzip main.zip을 실행합시다.\n\n\n<div class=\"content-ad\"></div>\n\n\n![How to Host an HTML Website on an EC2 Instance - Step 31](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_31.png)\n\nIf we type the ls command, it will show us the zip folder and the unzipped version.\n\n![How to Host an HTML Website on an EC2 Instance - Step 32](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_32.png)\n\nThe next step is to copy all our web files from the unzipped version into the html directory. Let's use the following command: cp -r techmax-main/* /var/www/html/\n\n\n<div class=\"content-ad\"></div>\n\n\n![Image description](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_33.png)\n\nAnd if we type `ls` again, we are going to see all the web files in the html directory\n\n![Image description](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_34.png)\n\nThe next command that we need to do is to remove the `main.zip` and the `techmax-main` that we unzipped because we don’t need them anymore. Let’s type `rm -rf techmax-main main.zip` and press Enter\n\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_35.png\" />\n\nls 명령어를 다시 입력하면 main.zip과 techmax-main이 더 이상 표시되지 않습니다.\n\n<img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_36.png\" />\n\n이제 모든 준비가 되었습니다! 아파치 서비스를 시작할 준비가 되었습니다.\n\n<div class=\"content-ad\"></div>\n\n# 단계 7: 아파치 서비스 시작하기\n\n다음 두 명령을 실행해봅시다: `systemctl enable httpd`와 `systemctl start httpd`\n\n![이미지 1](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_37.png)\n\n![이미지 2](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_38.png)\n\n<div class=\"content-ad\"></div>\n\n![image 1](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_39.png)\n\nAWS 콘솔로 돌아가서 EC2 인스턴스 대시보드로 이동합시다. myinstance33 인스턴스를 선택하고 아래의 세부 정보로 이동하세요. 퍼블릭 IPv4 주소를 복사해주세요.\n\n![image 2](/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_40.png)\n\n다른 탭이나 창을 열고, 복사한 주소를 주소 창에 붙여넣어주세요.\n\n<div class=\"content-ad\"></div>\n\n여기 있어요! 우리는 우리 웹사이트에 접속할 수 있어요.\n\n### 결론과 정리\n\n다음과 같이 EC2 인스턴스에 HTML 웹사이트를 호스팅하는 방법이 이렇게 쉬워요. 이 방법을 사용하여 EC2 인스턴스에 어떤 HTML 웹사이트든 호스팅할 수 있어요. 이 튜토리얼에 필요한 모든 것들을 다 배웠으니, 다음 할 일은 EC2 인스턴스를 종료하여 비용을 절약하는 거예요.","ogImage":{"url":"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_0.png"},"coverImage":"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_0.png","tag":["Tech"],"readingTime":9},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>AWS에서 HTML 웹사이트 호스팅하기</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_0.png\" alt=\"How to Host an HTML Website on an EC2 Instance\"></p>\n<h2>요구 사항:</h2>\n<p>AWS</p>\n<div class=\"content-ad\"></div>\n<p>VPC</p>\n<h1>사례 연구 및 소개:</h1>\n<p>2023년 두 번째 분기에 착한 인터넷 랜드마크 기업으로 시작한 스타트업은 외국인 근로자가 가족에게 돈을 송금하는 수요를 처리할 수 있는 웹 사이트를 구축할 계획입니다. 기관은 클라이언트가 쉽게 사용할 수 있는 웹 사이트를 운영하고자 합니다. 이 튜토리얼에서는 HTML 및 Apache 서버를 사용하여 Amazon EC2에 웹 사이트를 호스팅하는 방법에 대해 설명합니다.</p>\n<p>HTML은 경량 언어로 다른 언어와 쉽게 인터페이스할 수 있습니다. 또한 EC2의 우수한 가용성, 보안, 비용 효율성 및 확장성을 활용할 수 있을 것입니다.</p>\n<div class=\"content-ad\"></div>\n<p>웹 사이트가 활성화되면 터미널을 사용하여 EC2에 SSH하여 모든 것이 올바르게 작동하는지 확인할 것입니다. 모든 단계를 완료한 후에 사용한 리소스를 정리할 것입니다.</p>\n<h1>목표</h1>\n<ul>\n<li>보안 그룹을 생성하고 포트 80과 22를 허용합니다.</li>\n<li>기본 VPC를 사용합니다.</li>\n<li>제공된 서브넷 및 리전을 사용합니다.</li>\n<li>인스턴스를 시작합니다.</li>\n<li>Apache 웹 서버에 도달할 수 있는지 테스트합니다.</li>\n<li>정리하기</li>\n</ul>\n<h1>단계 1: 지역 선택</h1>\n<div class=\"content-ad\"></div>\n<p>새로운 AWS 콘솔을 사용하여 미국 동부(버지니아 북부) 지역을 선택하십시오. 사용하고 싶은 지역을 선택할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_1.png\" alt=\"이미지\"></p>\n<h2>단계 2: 보안 그룹 생성 및 포트 80 및 22 열기</h2>\n<p>AWS 콘솔에서 VPC를 검색하고 VPC 대시 보드로 이동하세요.</p>\n<div class=\"content-ad\"></div>\n<p>아래는 마크다운 형식으로 변환한 내용입니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_2.png\" alt=\"이미지\"></p>\n<p>보안 그룹 선택 — 왼쪽 핸드 사이드 메뉴 또는 페이지 중앙에서 찾을 수 있습니다</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_3.png\" alt=\"이미지\"></p>\n<p>오른쪽 핸드 사이드에서 '보안 그룹 생성' 버튼을 클릭하세요</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_4.png\" alt=\"How to Host an HTML Website on an EC2 Instance - Step 4\"></p>\n<p>Create a security group by entering the name and description. You can choose any available VPC. In our case, we selected the default VPC.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_5.png\" alt=\"How to Host an HTML Website on an EC2 Instance - Step 5\"></p>\n<p>Scroll down to Inbound rules. First, add a rule for port 80 to allow internet users to access our website. Click on Add rule and choose HTTP with port 80 always open.</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_6.png\">\n<p>다음으로 할 일은 소스 아래에서 포트 80으로 오는 트래픽을 인터넷의 어느 곳에서든 허용하도록 하는 것입니다. 소스에서 IPv4의 Anywhere를 선택하세요 — 이렇게 하면 자동으로 0.0.0/0이 나타납니다.</p>\n<p>여전히 인바운드 규칙 아래에 있습니다. 다음으로 선택할 규칙은 SSH입니다. 이것은 TCP 프로토콜과 22 포트 범위를 나타냅니다. 소스에서 My IP를 선택해야 합니다 — 이것은 여러분의 IP 주소를 보여줍니다.</p>\n<p>이것은 포트 22로 들어오는 트래픽이 여러분의 IP 주소에서 오는 경우에만 허용된다는 것을 의미합니다. 포트 22를 통해 EC2 인스턴스에 SSH로 연결할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p>보안 최상의 실천을 위해 항상 EC2 인스턴스로 SSH 접속할 수 있는 IP 주소를 귀하의 IP 주소로 제한해야 합니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_7.png\" alt=\"이미지\"></p>\n<p>따라서 이 두 가지 규칙을 열어야 합니다. 완료되면 페이지 하단 오른쪽 부분의 '보안 그룹 생성'을 클릭하세요.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_8.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p>보안 그룹이 생성되었어요</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_9.png\" alt=\"이미지\"></p>\n<h1>단계 3: EC2 인스턴스 시작. (보안 그룹 및 키페어 추가)</h1>\n<p>검색 바에서 EC2를 입력하고 서비스에서 EC2를 선택하세요.</p>\n<div class=\"content-ad\"></div>\n<p><a href=\"URL_LINK_1\"><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_10.png\" alt=\"Screenshot 1\"></a>\n<a href=\"URL_LINK_2\"><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_11.png\" alt=\"Screenshot 2\"></a></p>\n<p>Scroll down to Application and OS Images (Amazon Machine Image). Under Quick Start select Amazon Linux. The AMI that we are going to use is Amazon Linux 2 AMI Free Tier</p>\n<p><a href=\"URL_LINK_3\"><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_12.png\" alt=\"Screenshot 3\"></a></p>\n<div class=\"content-ad\"></div>\n<p>인스턴스 유형은 t2.micro 프리 티어로 설정됩니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_13.png\" alt=\"이미지\"></p>\n<p>키페어(로그인) 항목으로 내려가서 이전에 만들었던 키페어를 선택합니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_14.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p>네트워크 설정으로 스크롤하여 편집을 클릭하세요. 드롭다운 메뉴에서 선택 가능한 VPC 목록이 표시됩니다. 이전에 사용한 기본 VPC를 선택할 것입니다.</p>\n<p>다음으로 이전에 만든 MYSECURITY33 보안 그룹을 선택해야 합니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_15.png\" alt=\"이미지\"></p>\n<p>오른쪽에 설정을 확인한 후 인스턴스를 시작을 클릭하세요.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_16.png\" alt=\"화면 캡처 1\"></p>\n<p>인스턴스를 성공적으로 시작했습니다. \"모든 인스턴스 보기\"를 클릭해봐요.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_17.png\" alt=\"화면 캡처 2\"></p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_18.png\" alt=\"화면 캡처 3\"></p>\n<div class=\"content-ad\"></div>\n<h1>단계 4: EC2 인스턴스에 SSH로 접속하기</h1>\n<p>EC2 인스턴스로 SSH로 접속하려면 myinstance33를 선택하십시오.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_19.png\" alt=\"image1\"></p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_20.png\" alt=\"image2\"></p>\n<div class=\"content-ad\"></div>\n<p>cmd에서 키 다운로드 폴더로 이동해주세요.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_21.png\" alt=\"이미지\"></p>\n<p>그리고 여기에 Amazon 링크를 입력해주세요.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_22.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p>'yes' 값을 주면 cmd에서 ec2 인스턴스를 받을 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_23.png\" alt=\"EC2 인스턴스\"></p>\n<h1>단계 5: 웹 사이트에 필요한 소프트웨어 설치하기</h1>\n<p>EC2 터미널에 입력해야 하는 첫 번째 명령은 sudo su 이며, Enter를 눌러야 합니다 — 이는 루트 사용자로 변경하는 것을 허용합니다.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_24.png\" alt=\"이미지\"></p>\n<p>다음으로 입력해야 할 명령어는 yum update -y 입니다. 초록색 바탕의 프롬프트가 표시되면 다음 명령어를 실행할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_25.png\" alt=\"이미지\"></p>\n<p>이제 yum install -y httpd를 입력해 봅시다.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_26.png\" alt=\"이미지\"></p>\n<p>다음 명령어는 디렉토리 변경을 의미합니다. 즉, html 디렉토리로 이동하려는 의미입니다. cd /var/www/html 를 입력해 봅시다.</p>\n<p>이전에는 ec2 디렉토리에 있었습니다.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_27.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_28.png\" alt=\"이미지\"></p>\n<p>위 명령을 실행한 후에 html 디렉토리에 이미 들어와 있는 것을 알 수 있습니다.</p>\n<p>다음으로 Putty 세션에서 입력해야 할 명령은 다음과 같습니다: wget <a href=\"https://github.com/azeezsalu/techmax/archive/refs/heads/main.zip\" rel=\"nofollow\" target=\"_blank\">https://github.com/azeezsalu/techmax/archive/refs/heads/main.zip</a></p>\n<p>각 명령어를 정의해 봅시다:</p>\n<div class=\"content-ad\"></div>\n<p><code>wget</code>은 EC2 인스턴스로 파일을 다운로드하는 데 사용하는 Linux 명령어입니다.</p>\n<p>다운로드하려는 파일이 위치한 URL입니다: <a href=\"https://github.com/azeezsalu/techmax/archive/refs/heads/main.zip\" rel=\"nofollow\" target=\"_blank\">https://github.com/azeezsalu/techmax/archive/refs/heads/main.zip</a></p>\n<p>파일은 main.zip에 다운로드되었습니다. 파일을 확인하려면 ls를 입력해보세요.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_30.png\" alt=\"Image\"></p>\n<p>웹 파일을 EC2 인스턴스로 다운로드하고 나면, 웹 파일을 이 zip 폴더에 넣게 됩니다. 그리고 그 다음 단계로 이어집니다.</p>\n<h1>Step 6: HTML 디렉토리에 웹 파일 넣기</h1>\n<p>우리는 웹사이트를 볼 수 있도록 html 디렉토리에 웹 파일을 넣어야 합니다. 우리의 다음 명령어가 바로 이 일을 수행할 것입니다. main.zip 파일을 풀기 위해 unzip main.zip을 실행합시다.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_31.png\" alt=\"How to Host an HTML Website on an EC2 Instance - Step 31\"></p>\n<p>If we type the ls command, it will show us the zip folder and the unzipped version.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_32.png\" alt=\"How to Host an HTML Website on an EC2 Instance - Step 32\"></p>\n<p>The next step is to copy all our web files from the unzipped version into the html directory. Let's use the following command: cp -r techmax-main/* /var/www/html/</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_33.png\" alt=\"Image description\"></p>\n<p>And if we type <code>ls</code> again, we are going to see all the web files in the html directory</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_34.png\" alt=\"Image description\"></p>\n<p>The next command that we need to do is to remove the <code>main.zip</code> and the <code>techmax-main</code> that we unzipped because we don’t need them anymore. Let’s type <code>rm -rf techmax-main main.zip</code> and press Enter</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_35.png\">\n<p>ls 명령어를 다시 입력하면 main.zip과 techmax-main이 더 이상 표시되지 않습니다.</p>\n<img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_36.png\">\n<p>이제 모든 준비가 되었습니다! 아파치 서비스를 시작할 준비가 되었습니다.</p>\n<div class=\"content-ad\"></div>\n<h1>단계 7: 아파치 서비스 시작하기</h1>\n<p>다음 두 명령을 실행해봅시다: <code>systemctl enable httpd</code>와 <code>systemctl start httpd</code></p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_37.png\" alt=\"이미지 1\"></p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_38.png\" alt=\"이미지 2\"></p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_39.png\" alt=\"image 1\"></p>\n<p>AWS 콘솔로 돌아가서 EC2 인스턴스 대시보드로 이동합시다. myinstance33 인스턴스를 선택하고 아래의 세부 정보로 이동하세요. 퍼블릭 IPv4 주소를 복사해주세요.</p>\n<p><img src=\"/assets/img/2024-06-22-HowtoHostanHTMLWebsiteonanEC2Instance_40.png\" alt=\"image 2\"></p>\n<p>다른 탭이나 창을 열고, 복사한 주소를 주소 창에 붙여넣어주세요.</p>\n<div class=\"content-ad\"></div>\n<p>여기 있어요! 우리는 우리 웹사이트에 접속할 수 있어요.</p>\n<h3>결론과 정리</h3>\n<p>다음과 같이 EC2 인스턴스에 HTML 웹사이트를 호스팅하는 방법이 이렇게 쉬워요. 이 방법을 사용하여 EC2 인스턴스에 어떤 HTML 웹사이트든 호스팅할 수 있어요. 이 튜토리얼에 필요한 모든 것들을 다 배웠으니, 다음 할 일은 EC2 인스턴스를 종료하여 비용을 절약하는 거예요.</p>\n</body>\n</html>\n"},"__N_SSG":true}