{"pageProps":{"post":{"title":"리액트 시작하는 개발자가 봐야하는 글","description":"","date":"2024-05-20 22:08","slug":"2024-05-20-GettingStartedwithReactYourFunandEasyGuide","content":"\n\n- HTML: 웹페이지의 기본 구조를 이해합니다.\n- CSS: 스타일을 적용하여 웹페이지를 멋지게 만듭니다.\n- JavaScript: 웹페이지를 인터랙티브하게 만드는 코딩 언어를 배웁니다.\n- DOM 조작: 웹페이지를 동적으로 변경하는 방법에 익숙해집니다.\n\n- TODO 앱 만들기: 간단한 할 일 목록을 만들면서 배운 것을 연습해보세요!\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>나의 TODO 앱</title>\n  <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n  <div class=\"todo-container\">\n    <input type=\"text\" id=\"todo-input\" placeholder=\"새로운 할 일 추가\">\n    <button id=\"add-btn\">추가</button>\n    <ul id=\"todo-list\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n```css\n/* styles.css */\n.todo-container {\n  max-width: 400px;\n  margin: 0 auto;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n// script.js\nconst todoInput = document.getElementById('todo-input');\nconst addBtn = document.getElementById('add-btn');\nconst todoList = document.getElementById('todo-list');\n\naddBtn.addEventListener('click', () => {\n  const todoText = todoInput.value.trim();\n  if (todoText !== '') {\n    const todoItem = document.createElement('li');\n    todoItem.textContent = todoText;\n    todoList.appendChild(todoItem);\n    todoInput.value = '';\n  }\n});\n```\n\n- Components: 요소들을 웹페이지 구성의 빌딩 블록으로 생각해보세요.\n- Props: 이것들은 요소들이 서로 대화할 때 사용하는 메시지와 같습니다.\n- UseState: 웹페이지에서 무슨 일이 일어나고 있는지 추적하는 데 도움을 줍니다.\n- UseEffect: 이것은 웹페이지가 서로 다른 액션에 대응하는 방법을 관리합니다.\n\n- Create Components: 할 일 목록을 재사용할 수 있는 작은 부분들로 나누세요.\n- Use Props: 할 일 목록의 다른 부분들 사이에 정보를 전달하세요.\n- Manage State: useState로 할 일 목록에서 무슨 일이 일어나고 있는지 추적하세요.\n- Handle Side Effects: useEffect를 사용하여 새로운 할 일 항목을 가져오거나 무언가 변경될 때 페이지를 업데이트하는 등의 작업을 수행하세요.\n\n```js\n// script.js\nconst TodoApp = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todoText, setTodoText] = React.useState('');\n\n  const handleAddTodo = () => {\n    if (todoText.trim() !== '') {\n      setTodos([...todos, todoText]);\n      setTodoText('');\n    }\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <input\n        type=\"text\"\n        value={todoText}\n        onChange={(e) => setTodoText(e.target.value)}\n        placeholder=\"Add a new todo\"\n      />\n      <button onClick={handleAddTodo}>Add</button>\n      <ul>\n        {todos.map((todo, index) => (\n          <li key={index}>{todo}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReactDOM.render(<TodoApp />, document.getElementById('root'));\n```\n\n<div class=\"content-ad\"></div>\n\n## 이제 React에 익숙해졌으니 창의력을 발휘해보세요! 무엇이든 시작해보고 어떤 놀라운 것들을 만들어낼 수 있는지 확인해보세요. 기억하세요, 모든 위대한 프로젝트는 간단한 아이디어로 시작됩니다. 여러분은 할 수 있어요!","ogImage":{"url":"/assets/img/2024-05-20-GettingStartedwithReactYourFunandEasyGuide_0.png"},"coverImage":"/assets/img/2024-05-20-GettingStartedwithReactYourFunandEasyGuide_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<ul>\n<li>\n<p>HTML: 웹페이지의 기본 구조를 이해합니다.</p>\n</li>\n<li>\n<p>CSS: 스타일을 적용하여 웹페이지를 멋지게 만듭니다.</p>\n</li>\n<li>\n<p>JavaScript: 웹페이지를 인터랙티브하게 만드는 코딩 언어를 배웁니다.</p>\n</li>\n<li>\n<p>DOM 조작: 웹페이지를 동적으로 변경하는 방법에 익숙해집니다.</p>\n</li>\n<li>\n<p>TODO 앱 만들기: 간단한 할 일 목록을 만들면서 배운 것을 연습해보세요!</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-js\">&#x3C;!<span class=\"hljs-variable constant_\">DOCTYPE</span> html>\n&#x3C;html lang=\"en\">\n&#x3C;head>\n  &#x3C;meta charset=\"UTF-8\">\n  &#x3C;title>나의 TODO 앱&#x3C;/title>\n  &#x3C;link rel=\"stylesheet\" href=\"styles.css\">\n&#x3C;/head>\n&#x3C;body>\n  &#x3C;div class=\"todo-container\">\n    &#x3C;input type=\"text\" id=\"todo-input\" placeholder=\"새로운 할 일 추가\">\n    &#x3C;button id=\"add-btn\">추가&#x3C;/button>\n    &#x3C;ul id=\"todo-list\">&#x3C;/ul>\n  &#x3C;/div>\n  &#x3C;script src=\"script.js\">&#x3C;/script>\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* styles.css */</span>\n<span class=\"hljs-selector-class\">.todo-container</span> {\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">400px</span>;\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// script.js</span>\n<span class=\"hljs-keyword\">const</span> todoInput = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">'todo-input'</span>);\n<span class=\"hljs-keyword\">const</span> addBtn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">'add-btn'</span>);\n<span class=\"hljs-keyword\">const</span> todoList = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">'todo-list'</span>);\n\naddBtn.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'click'</span>, <span class=\"hljs-function\">() =></span> {\n  <span class=\"hljs-keyword\">const</span> todoText = todoInput.<span class=\"hljs-property\">value</span>.<span class=\"hljs-title function_\">trim</span>();\n  <span class=\"hljs-keyword\">if</span> (todoText !== <span class=\"hljs-string\">''</span>) {\n    <span class=\"hljs-keyword\">const</span> todoItem = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">'li'</span>);\n    todoItem.<span class=\"hljs-property\">textContent</span> = todoText;\n    todoList.<span class=\"hljs-title function_\">appendChild</span>(todoItem);\n    todoInput.<span class=\"hljs-property\">value</span> = <span class=\"hljs-string\">''</span>;\n  }\n});\n</code></pre>\n<ul>\n<li>\n<p>Components: 요소들을 웹페이지 구성의 빌딩 블록으로 생각해보세요.</p>\n</li>\n<li>\n<p>Props: 이것들은 요소들이 서로 대화할 때 사용하는 메시지와 같습니다.</p>\n</li>\n<li>\n<p>UseState: 웹페이지에서 무슨 일이 일어나고 있는지 추적하는 데 도움을 줍니다.</p>\n</li>\n<li>\n<p>UseEffect: 이것은 웹페이지가 서로 다른 액션에 대응하는 방법을 관리합니다.</p>\n</li>\n<li>\n<p>Create Components: 할 일 목록을 재사용할 수 있는 작은 부분들로 나누세요.</p>\n</li>\n<li>\n<p>Use Props: 할 일 목록의 다른 부분들 사이에 정보를 전달하세요.</p>\n</li>\n<li>\n<p>Manage State: useState로 할 일 목록에서 무슨 일이 일어나고 있는지 추적하세요.</p>\n</li>\n<li>\n<p>Handle Side Effects: useEffect를 사용하여 새로운 할 일 항목을 가져오거나 무언가 변경될 때 페이지를 업데이트하는 등의 작업을 수행하세요.</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// script.js</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">TodoApp</span> = (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">const</span> [todos, setTodos] = <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-title function_\">useState</span>([]);\n  <span class=\"hljs-keyword\">const</span> [todoText, setTodoText] = <span class=\"hljs-title class_\">React</span>.<span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-string\">''</span>);\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">handleAddTodo</span> = (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-keyword\">if</span> (todoText.<span class=\"hljs-title function_\">trim</span>() !== <span class=\"hljs-string\">''</span>) {\n      <span class=\"hljs-title function_\">setTodos</span>([...todos, todoText]);\n      <span class=\"hljs-title function_\">setTodoText</span>(<span class=\"hljs-string\">''</span>);\n    }\n  };\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"todo-container\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span>\n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span>\n        <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{todoText}</span>\n        <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =></span> setTodoText(e.target.value)}\n        placeholder=\"Add a new todo\"\n      />\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleAddTodo}</span>></span>Add<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        {todos.map((todo, index) => (\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{index}</span>></span>{todo}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        ))}\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  );\n};\n\n<span class=\"hljs-title class_\">ReactDOM</span>.<span class=\"hljs-title function_\">render</span>(<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">TodoApp</span> /></span></span>, <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">'root'</span>));\n</code></pre>\n<div class=\"content-ad\"></div>\n<h2>이제 React에 익숙해졌으니 창의력을 발휘해보세요! 무엇이든 시작해보고 어떤 놀라운 것들을 만들어낼 수 있는지 확인해보세요. 기억하세요, 모든 위대한 프로젝트는 간단한 아이디어로 시작됩니다. 여러분은 할 수 있어요!</h2>\n</body>\n</html>\n"},"__N_SSG":true}