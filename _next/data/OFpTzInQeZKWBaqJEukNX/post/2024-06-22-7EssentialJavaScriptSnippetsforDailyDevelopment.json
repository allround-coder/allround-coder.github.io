{"pageProps":{"post":{"title":" 일상 개발에 꼭 필요한 7가지 자바스크립트 코드 스니펫","description":"","date":"2024-06-22 13:48","slug":"2024-06-22-7EssentialJavaScriptSnippetsforDailyDevelopment","content":"\n\n<img src=\"/assets/img/2024-06-22-7EssentialJavaScriptSnippetsforDailyDevelopment_0.png\" />\n\n우리의 일상적인 개발 루틴에서는 종종 콘텐츠를 복사하거나 URL로부터 특정 매개변수를 가져오는 등 여러 일반적인 JavaScript 코드 스니펫을 사용합니다.\n\n이 코드 스니펫들은 개발의 편의를 위해 고정된 구현을 가지고 있습니다. 오늘은 자주 사용되는 7가지 코드 스니펫을 살펴보겠습니다.\n\n# 1️⃣ 클립보드로 콘텐츠 복사하기\n\n<div class=\"content-ad\"></div>\n\n지정된 DOM 요소에서 내용을 사용자 클립보드로 복사하는 버튼을 사용하는 방법:\n\n```js\nconst copyToClipboard = (content) => {\n  const textarea = document.createElement(\"textarea\");\n  textarea.value = content;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand(\"Copy\");\n  textarea.remove();\n}\n```\n\n# 2️⃣ URLSearchParams를 사용하여 URL 검색 매개변수 가져 오기\n\n이것은 매우 흔한 작업입니다. 이 작업에 대해 regex에 의존했지만 이제는 더 간단한 접근 방법이 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nconst getQueryByName = (name) => {\n  const query = new URLSearchParams(location.search);\n  return decodeURIComponent(query.get(name));\n}\n\n// 사용 예시:\n// URL: https://sunday.com/?name=fatfish&age=100\nconst name = getQueryByName('name'); // fatfish\nconst age = getQueryByName('age'); // 100\nconst gender = getQueryByName('gender'); // null\n```\n\n# 3️⃣ 페이지 상단으로 스무스하게 스크롤\n\n페이지 상단으로 스무스하게 스크롤하는 방법:\n\n```js\nconst scrollToTop = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n# 4️⃣ 현재 스크롤 위치 가져오기\n\n페이지의 현재 스크롤 위치를 검색합니다:\n\n```js\nconst getScrollPosition = (el = window) => ({\n  x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop,\n});\n\ngetScrollPosition(); // { x: 0, y: 215 }\n```\n\n# 5️⃣ 기기가 안드로이드인지 iOS인지 확인하기\n\n<div class=\"content-ad\"></div>\n\n현재 기기의 운영 체제를 식별하십시오:\n\n```js\nfunction getOSType() {\n  let u = navigator.userAgent;\n  let isAndroid = u.indexOf(\"Android\") > -1 || u.indexOf(\"Linux\") > -1;\n  let isIOS = !!u.match(/\\(i[^]+( U)? CPU.+Mac OS X/);\n  \n  if (isIOS) {\n    return 0; // iOS\n  } else if (isAndroid) {\n    return 1; // Android\n  } else {\n    return 2; // Other\n  }\n}\n\ngetOSType(); // 0은 iOS\n```\n\n# 6️⃣ 통화 포맷\n\n숫자를 통화 형식으로 변환하세요:\n\n<div class=\"content-ad\"></div>\n\n```js\nconst formatMoney = (money) => {\n  return money.toLocaleString();\n}\n\nconsole.log(formatMoney(123456789)); // '123,456,789'\nconsole.log(formatMoney(123456789.123)); // '123,456,789.123'\nconsole.log(formatMoney(123)); // '123'\n```\n\n# 7️⃣ 전체 화면 모드로 들어가고 나오기\n\n전체 화면으로 들어가고 나오기 함수:\n\n```js\n// 전체 화면으로 들어가기\nfunction fullScreen() {\n  let el = document.documentElement;\n  let rfs = el.requestFullScreen || el.webkitRequestFullScreen || el.mozRequestFullScreen || el.msRequestFullScreen;\n  if (rfs) {\n    rfs.call(el);\n  } else if (typeof window.ActiveXObject !== \"undefined\") {\n    let wscript = new ActiveXObject(\"WScript.Shell\");\n    if (wscript != null) {\n      wscript.SendKeys(\"{F11}\");\n    }\n  }\n}\n\n// 전체 화면에서 나오기\nfunction exitScreen() {\n  let el = document;\n  let cfs = el.cancelFullScreen || el.webkitCancelFullScreen || el.mozCancelFullScreen || el.exitFullScreen;\n  if (cfs) {\n    cfs.call(el);\n  } else if (typeof window.ActiveXObject !== \"undefined\") {\n    let wscript = new ActiveXObject(\"WScript.Shell\");\n    if (wscript != null) {\n      wscript.SendKeys(\"{F11}\");\n    }\n  }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n# 쉽게 말해 🚀\n\nIn Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:\n\n- 작가를 추천하고 팔로우하세요 👏\n- 팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter\n- 다른 플랫폼 방문하기: CoFeed | Differ\n- PlainEnglish.io에서 더 많은 콘텐츠 확인하기","ogImage":{"url":"/assets/img/2024-06-22-7EssentialJavaScriptSnippetsforDailyDevelopment_0.png"},"coverImage":"/assets/img/2024-06-22-7EssentialJavaScriptSnippetsforDailyDevelopment_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-06-22-7EssentialJavaScriptSnippetsforDailyDevelopment_0.png\">\n<p>우리의 일상적인 개발 루틴에서는 종종 콘텐츠를 복사하거나 URL로부터 특정 매개변수를 가져오는 등 여러 일반적인 JavaScript 코드 스니펫을 사용합니다.</p>\n<p>이 코드 스니펫들은 개발의 편의를 위해 고정된 구현을 가지고 있습니다. 오늘은 자주 사용되는 7가지 코드 스니펫을 살펴보겠습니다.</p>\n<h1>1️⃣ 클립보드로 콘텐츠 복사하기</h1>\n<div class=\"content-ad\"></div>\n<p>지정된 DOM 요소에서 내용을 사용자 클립보드로 복사하는 버튼을 사용하는 방법:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">copyToClipboard</span> = (<span class=\"hljs-params\">content</span>) => {\n  <span class=\"hljs-keyword\">const</span> textarea = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"textarea\"</span>);\n  textarea.<span class=\"hljs-property\">value</span> = content;\n  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-title function_\">appendChild</span>(textarea);\n  textarea.<span class=\"hljs-title function_\">select</span>();\n  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">execCommand</span>(<span class=\"hljs-string\">\"Copy\"</span>);\n  textarea.<span class=\"hljs-title function_\">remove</span>();\n}\n</code></pre>\n<h1>2️⃣ URLSearchParams를 사용하여 URL 검색 매개변수 가져 오기</h1>\n<p>이것은 매우 흔한 작업입니다. 이 작업에 대해 regex에 의존했지만 이제는 더 간단한 접근 방법이 있습니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getQueryByName</span> = (<span class=\"hljs-params\">name</span>) => {\n  <span class=\"hljs-keyword\">const</span> query = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">URLSearchParams</span>(location.<span class=\"hljs-property\">search</span>);\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">decodeURIComponent</span>(query.<span class=\"hljs-title function_\">get</span>(name));\n}\n\n<span class=\"hljs-comment\">// 사용 예시:</span>\n<span class=\"hljs-comment\">// URL: https://sunday.com/?name=fatfish&#x26;age=100</span>\n<span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-title function_\">getQueryByName</span>(<span class=\"hljs-string\">'name'</span>); <span class=\"hljs-comment\">// fatfish</span>\n<span class=\"hljs-keyword\">const</span> age = <span class=\"hljs-title function_\">getQueryByName</span>(<span class=\"hljs-string\">'age'</span>); <span class=\"hljs-comment\">// 100</span>\n<span class=\"hljs-keyword\">const</span> gender = <span class=\"hljs-title function_\">getQueryByName</span>(<span class=\"hljs-string\">'gender'</span>); <span class=\"hljs-comment\">// null</span>\n</code></pre>\n<h1>3️⃣ 페이지 상단으로 스무스하게 스크롤</h1>\n<p>페이지 상단으로 스무스하게 스크롤하는 방법:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">scrollToTop</span> = (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">const</span> c = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>.<span class=\"hljs-property\">scrollTop</span> || <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">scrollTop</span>;\n  <span class=\"hljs-keyword\">if</span> (c > <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">requestAnimationFrame</span>(scrollToTop);\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">scrollTo</span>(<span class=\"hljs-number\">0</span>, c - c / <span class=\"hljs-number\">8</span>);\n  }\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>4️⃣ 현재 스크롤 위치 가져오기</h1>\n<p>페이지의 현재 스크롤 위치를 검색합니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getScrollPosition</span> = (<span class=\"hljs-params\">el = <span class=\"hljs-variable language_\">window</span></span>) => ({\n  <span class=\"hljs-attr\">x</span>: el.<span class=\"hljs-property\">pageXOffset</span> !== <span class=\"hljs-literal\">undefined</span> ? el.<span class=\"hljs-property\">pageXOffset</span> : el.<span class=\"hljs-property\">scrollLeft</span>,\n  <span class=\"hljs-attr\">y</span>: el.<span class=\"hljs-property\">pageYOffset</span> !== <span class=\"hljs-literal\">undefined</span> ? el.<span class=\"hljs-property\">pageYOffset</span> : el.<span class=\"hljs-property\">scrollTop</span>,\n});\n\n<span class=\"hljs-title function_\">getScrollPosition</span>(); <span class=\"hljs-comment\">// { x: 0, y: 215 }</span>\n</code></pre>\n<h1>5️⃣ 기기가 안드로이드인지 iOS인지 확인하기</h1>\n<div class=\"content-ad\"></div>\n<p>현재 기기의 운영 체제를 식별하십시오:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getOSType</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">let</span> u = navigator.<span class=\"hljs-property\">userAgent</span>;\n  <span class=\"hljs-keyword\">let</span> isAndroid = u.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">\"Android\"</span>) > -<span class=\"hljs-number\">1</span> || u.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">\"Linux\"</span>) > -<span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-keyword\">let</span> isIOS = !!u.<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-regexp\">/\\(i[^]+( U)? CPU.+Mac OS X/</span>);\n  \n  <span class=\"hljs-keyword\">if</span> (isIOS) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// iOS</span>\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (isAndroid) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>; <span class=\"hljs-comment\">// Android</span>\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">2</span>; <span class=\"hljs-comment\">// Other</span>\n  }\n}\n\n<span class=\"hljs-title function_\">getOSType</span>(); <span class=\"hljs-comment\">// 0은 iOS</span>\n</code></pre>\n<h1>6️⃣ 통화 포맷</h1>\n<p>숫자를 통화 형식으로 변환하세요:</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">formatMoney</span> = (<span class=\"hljs-params\">money</span>) => {\n  <span class=\"hljs-keyword\">return</span> money.<span class=\"hljs-title function_\">toLocaleString</span>();\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">formatMoney</span>(<span class=\"hljs-number\">123456789</span>)); <span class=\"hljs-comment\">// '123,456,789'</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">formatMoney</span>(<span class=\"hljs-number\">123456789.123</span>)); <span class=\"hljs-comment\">// '123,456,789.123'</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">formatMoney</span>(<span class=\"hljs-number\">123</span>)); <span class=\"hljs-comment\">// '123'</span>\n</code></pre>\n<h1>7️⃣ 전체 화면 모드로 들어가고 나오기</h1>\n<p>전체 화면으로 들어가고 나오기 함수:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 전체 화면으로 들어가기</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">fullScreen</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">let</span> el = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>;\n  <span class=\"hljs-keyword\">let</span> rfs = el.<span class=\"hljs-property\">requestFullScreen</span> || el.<span class=\"hljs-property\">webkitRequestFullScreen</span> || el.<span class=\"hljs-property\">mozRequestFullScreen</span> || el.<span class=\"hljs-property\">msRequestFullScreen</span>;\n  <span class=\"hljs-keyword\">if</span> (rfs) {\n    rfs.<span class=\"hljs-title function_\">call</span>(el);\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">ActiveXObject</span> !== <span class=\"hljs-string\">\"undefined\"</span>) {\n    <span class=\"hljs-keyword\">let</span> wscript = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActiveXObject</span>(<span class=\"hljs-string\">\"WScript.Shell\"</span>);\n    <span class=\"hljs-keyword\">if</span> (wscript != <span class=\"hljs-literal\">null</span>) {\n      wscript.<span class=\"hljs-title class_\">SendKeys</span>(<span class=\"hljs-string\">\"{F11}\"</span>);\n    }\n  }\n}\n\n<span class=\"hljs-comment\">// 전체 화면에서 나오기</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">exitScreen</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">let</span> el = <span class=\"hljs-variable language_\">document</span>;\n  <span class=\"hljs-keyword\">let</span> cfs = el.<span class=\"hljs-property\">cancelFullScreen</span> || el.<span class=\"hljs-property\">webkitCancelFullScreen</span> || el.<span class=\"hljs-property\">mozCancelFullScreen</span> || el.<span class=\"hljs-property\">exitFullScreen</span>;\n  <span class=\"hljs-keyword\">if</span> (cfs) {\n    cfs.<span class=\"hljs-title function_\">call</span>(el);\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">ActiveXObject</span> !== <span class=\"hljs-string\">\"undefined\"</span>) {\n    <span class=\"hljs-keyword\">let</span> wscript = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ActiveXObject</span>(<span class=\"hljs-string\">\"WScript.Shell\"</span>);\n    <span class=\"hljs-keyword\">if</span> (wscript != <span class=\"hljs-literal\">null</span>) {\n      wscript.<span class=\"hljs-title class_\">SendKeys</span>(<span class=\"hljs-string\">\"{F11}\"</span>);\n    }\n  }\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>쉽게 말해 🚀</h1>\n<p>In Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:</p>\n<ul>\n<li>작가를 추천하고 팔로우하세요 👏</li>\n<li>팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter</li>\n<li>다른 플랫폼 방문하기: CoFeed | Differ</li>\n<li>PlainEnglish.io에서 더 많은 콘텐츠 확인하기</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}