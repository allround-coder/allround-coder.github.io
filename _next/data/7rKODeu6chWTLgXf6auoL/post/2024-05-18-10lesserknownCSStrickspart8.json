{"pageProps":{"post":{"title":"잘 알려지지 않은 CSS 팁 10가지","description":"","date":"2024-05-18 22:08","slug":"2024-05-18-10lesserknownCSStrickspart8","content":"\n\n![이미지](/assets/img/2024-05-18-10lesserknownCSStrickspart8_0.png) \n\n10가지 잘 알려지지 않은 CSS 트릭 시리즈의 여덟 번째 파트에 오신 것을 환영합니다. 이미 느끼고 계신 분들도 있겠지만, 만약 여기 처음 오신 분들이라면 이전 게시물을 보지 않으셨다면... 안녕하세요! 저는 10가지 잘 알려지지 않은 CSS 트릭 목록을 만들었어요 (지금까지 70가지를 소개했고, 이번을 끝으로 80가지 트릭 모음이 완성될 거에요). 이번 트릭들이 웹 디자인 역량 향상에 도움이 되길 바래요.\n\n## 01. scroll-snap-align\n\nscroll-snap-align 속성은 스크롤 컨테이너 내에서 스크롤 스냅 지점의 정렬을 제어하여 스크롤 동작을 정확하게 제어하고 사용자 경험을 향상시킵니다.\n\n<div class=\"content-ad\"></div>\n\n```css\n.container {\n  scroll-snap-type: x mandatory;\n}\n\n.item {\n  scroll-snap-align: center;\n}\n```\n\n## 02. overscroll-behavior\n\noverscroll-behavior를 사용하면 브라우저가 스크롤 초과를 처리하는 방식을 정의하여 원치 않는 스크롤 효과를 방지하고 전체 스크롤 경험을 개선할 수 있습니다.\n\n```css\n.scrollable {\n  overscroll-behavior: contain;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## 03. font-kerning\n\nfont-kerning은 문자 간 간격을 미세하게 조정하여 텍스트 요소 내 문자 간 간격을 조정하여 최적의 가독성을 보장합니다.\n\n```js\np {\n  font-kerning: auto;\n}\n```\n\n## 04. shape-margin\n\n<div class=\"content-ad\"></div>\n\n함께 사용할 때 CSS 모양과 shape-margin은 부유 요소의 모양 주변에 여백을 지정하여 텍스트 감싸기와 레이아웃을 미세하게 제어할 수 있습니다.\n\n```js\n.shape {\n  shape-margin: 20px;\n}\n```\n\n## 05. scroll-margin\n\nscroll-margin은 스크롤링 컨테이너의 가장자리와 스크롤링 콘텐츠 시작 사이의 여백을 설정하여 스크롤링을 위한 버퍼 공간을 제공하여 사용자 경험을 향상시킵니다.\n\n<div class=\"content-ad\"></div>\n\n```css\n.container {\n  scroll-margin-top: 100px;\n}\n```\n\n## 06. tab-size\n\nscroll-margin은 스크롤링 컨테이너의 가장자리와 스크롤링 콘텐츠의 시작 사이의 여백을 설정하여 스크롤링에 대한 버퍼 공간을 제공하여 사용자 경험을 향상시킵니다.\n\n```css\npre {\n  tab-size: 4;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## 07. text-align-last\n\ntext-align-last은 블록 요소 내 텍스트의 마지막 줄 맞춤을 결정하여, 다중 줄 블록에서 텍스트 정렬을 정밀하게 제어합니다.\n\n```js\np {\n  text-align-last: justify;\n}\n```\n\n## 08. text-justify\n\n<div class=\"content-ad\"></div>\n\n이 속성은 텍스트 맞춤 동작을 제어하며, 텍스트 맞춤에 대해 단어 간 간격 또는 글자 간 간격을 사용해야 하는지를 지정합니다.\n\n```js\np {\n  text-align: justify;\n  text-justify: inter-word;\n}\n```\n\n## 09. column-fill\n\ncolumn-fill은 콘텐츠가 다중 열 레이아웃 전체에 분배되는 방식을 지시하여, 콘텐츠가 열 사이에 순차적으로 또는 균형있게 분배되도록 합니다.\n\n<div class=\"content-ad\"></div>\n\n```css\n.container {\n  column-count: 3;\n  column-fill: auto;\n}\n```\n\n## 10. outline-offset\n\noutline-offset 속성은 윤곽선과 요소 가장자리 사이의 간격을 조정하여 레이아웃에 영향을 주지 않고 윤곽선의 모양을 미세하게 제어할 수 있게 합니다.\n\n```css\nbutton {\n  outline: 2px solid blue;\n  outline-offset: 4px;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n# 읽어 주셔서 감사합니다\n\n- 👏 이야기에 박수를 보내주세요 (50번 클랩) - 기사를 더 많이 퍼지도록 도와주세요\n- ✉️ 독점 콘텐츠, 리소스 및 무료 선물을 위해 뉴스레터에 가입해주세요\n- 🤝 Buymeacoffee.com에서 커피 한 잔을 기부해주세요\n- 🔔 팔로우해주세요: Medium | X | LinkedIn\n- 📝  매월 5달러로 Medium 멤버십 프로그램에 가입하고 저와 다른 작가들이 멋진 작품을 이어나갈 수 있도록 지원해주세요","ogImage":{"url":"/assets/img/2024-05-18-10lesserknownCSStrickspart8_0.png"},"coverImage":"/assets/img/2024-05-18-10lesserknownCSStrickspart8_0.png","tag":["Tech"],"readingTime":3},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-18-10lesserknownCSStrickspart8_0.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"10가지 잘 알려지지 않은 CSS 트릭 시리즈의 여덟 번째 파트에 오신 것을 환영합니다. 이미 느끼고 계신 분들도 있겠지만, 만약 여기 처음 오신 분들이라면 이전 게시물을 보지 않으셨다면... 안녕하세요! 저는 10가지 잘 알려지지 않은 CSS 트릭 목록을 만들었어요 (지금까지 70가지를 소개했고, 이번을 끝으로 80가지 트릭 모음이 완성될 거에요). 이번 트릭들이 웹 디자인 역량 향상에 도움이 되길 바래요.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"01. scroll-snap-align\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"scroll-snap-align 속성은 스크롤 컨테이너 내에서 스크롤 스냅 지점의 정렬을 제어하여 스크롤 동작을 정확하게 제어하고 사용자 경험을 향상시킵니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".container\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"scroll-snap-type\"\n        }), \": x mandatory;\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".item\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"scroll-snap-align\"\n        }), \": center;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"02. overscroll-behavior\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"overscroll-behavior를 사용하면 브라우저가 스크롤 초과를 처리하는 방식을 정의하여 원치 않는 스크롤 효과를 방지하고 전체 스크롤 경험을 개선할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".scrollable\"\n        }), \" {\\n  overscroll-behavior: contain;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"03. font-kerning\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"font-kerning은 문자 간 간격을 미세하게 조정하여 텍스트 요소 내 문자 간 간격을 조정하여 최적의 가독성을 보장합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"p {\\n  font-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"kerning\"\n        }), \": auto;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"04. shape-margin\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"함께 사용할 때 CSS 모양과 shape-margin은 부유 요소의 모양 주변에 여백을 지정하여 텍스트 감싸기와 레이아웃을 미세하게 제어할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"shape\"\n        }), \" {\\n  shape-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"margin\"\n        }), \": 20px;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"05. scroll-margin\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"scroll-margin은 스크롤링 컨테이너의 가장자리와 스크롤링 콘텐츠 시작 사이의 여백을 설정하여 스크롤링을 위한 버퍼 공간을 제공하여 사용자 경험을 향상시킵니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".container\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"scroll-margin-top\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100px\"\n        }), \";\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"06. tab-size\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"scroll-margin은 스크롤링 컨테이너의 가장자리와 스크롤링 콘텐츠의 시작 사이의 여백을 설정하여 스크롤링에 대한 버퍼 공간을 제공하여 사용자 경험을 향상시킵니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [\"pre {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"tab-size\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \";\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"07. text-align-last\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"text-align-last은 블록 요소 내 텍스트의 마지막 줄 맞춤을 결정하여, 다중 줄 블록에서 텍스트 정렬을 정밀하게 제어합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"p {\\n  text-align-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"last\"\n        }), \": justify;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"08. text-justify\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 속성은 텍스트 맞춤 동작을 제어하며, 텍스트 맞춤에 대해 단어 간 간격 또는 글자 간 간격을 사용해야 하는지를 지정합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"p {\\n  text-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"align\"\n        }), \": justify;\\n  text-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"justify\"\n        }), \": inter-word;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"09. column-fill\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"column-fill은 콘텐츠가 다중 열 레이아웃 전체에 분배되는 방식을 지시하여, 콘텐츠가 열 사이에 순차적으로 또는 균형있게 분배되도록 합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".container\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"column-count\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \";\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"column-fill\"\n        }), \": auto;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"10. outline-offset\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"outline-offset 속성은 윤곽선과 요소 가장자리 사이의 간격을 조정하여 레이아웃에 영향을 주지 않고 윤곽선의 모양을 미세하게 제어할 수 있게 합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-tag\",\n          children: \"button\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"outline\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2px\"\n        }), \" solid blue;\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"outline-offset\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4px\"\n        }), \";\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"읽어 주셔서 감사합니다\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"👏 이야기에 박수를 보내주세요 (50번 클랩) - 기사를 더 많이 퍼지도록 도와주세요\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"✉️ 독점 콘텐츠, 리소스 및 무료 선물을 위해 뉴스레터에 가입해주세요\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"🤝 Buymeacoffee.com에서 커피 한 잔을 기부해주세요\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"🔔 팔로우해주세요: Medium | X | LinkedIn\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"📝  매월 5달러로 Medium 멤버십 프로그램에 가입하고 저와 다른 작가들이 멋진 작품을 이어나갈 수 있도록 지원해주세요\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}