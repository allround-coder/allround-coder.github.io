{"pageProps":{"post":{"title":"프론트엔드 개발자를 위한 CSS 팁","description":"","date":"2024-05-17 21:18","slug":"2024-05-17-MyULTIMATECSSCheatSheetfromBeginnertoPro","content":"\n\n## 개발자가 알아야 할 100가지 CSS 속성\n\n![CSS Cheat Sheet](/assets/img/2024-05-17-MyULTIMATECSSCheatSheetfromBeginnertoPro_0.png)\n\n웹 애플리케이션을 만들고 스타일링하는 것을 좋아하며 CSS가 제가 생각하고 이야기하는 가장 좋아하는 것입니다.\n\n4년의 경험을 통해 많은 것을 배웠고, 이 기사에서 그 지식을 여러분과 공유하고 싶습니다.\n\n<div class=\"content-ad\"></div>\n\n오늘은 모든 사람을 위한 궁극적인 CSS 치트 시트를 제공하기 위해 모든 것을 다 할 거에요 - 절대 초보자부터 궁극의 전문가까지.\n\n마지막으로, 아무도 모르는 최고의 CSS 한 줄 코드 몇 가지를 보여드릴 테니, 이를 통해 많은 작업을 절약할 수 있을 거에요.\n\n편안히 앉아서 즐기고 나중을 위해 저장하세요!\n\n# 초보자 레벨\n\n<div class=\"content-ad\"></div>\n\n셀렉터: `element`\n지정된 타입의 모든 요소를 선택합니다.\n\n셀렉터: `#id`\n지정된 id를 가진 요소를 선택합니다.\n\n셀렉터: `.class`\n지정된 클래스를 가진 모든 요소를 선택합니다.\n\n속성: color\n텍스트의 색상을 설정합니다.\n예시:\n\n<div class=\"content-ad\"></div>\n\n```css\np {\n color: blue;\n }\n```\n\n속성: font-size\n글꼴 크기를 설정합니다.\n예시:\n\n```css\nh1 {\n font-size: 24px;\n }\n```\n\n속성: background-color\n배경 색상을 설정합니다.\n예시:\n\n<div class=\"content-ad\"></div>\n\n\n```css\nbody {\n background-color: #f0f0f0;\n }\n```\n\n\nProperty: margin\nSets the margin properties.\nExample:\n\n```css\n.container {\n margin: 10px;\n }\n```\n\nProperty: padding\n\n\n<div class=\"content-ad\"></div>\n\n패딩 속성을 설정합니다.\n예시:\n\n```js\n.box {\n  padding: 20px;\n}\n```\n\n속성: display\n요소의 표시 방법을 설정합니다.\n예시:\n\n```js\n.block {\n  display: block;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n테이블 태그를 Markdown 형식으로 변경해주세요.\n\nProperty: position\nSets the positioning method.\nExample:\n\n```js\n.absolute {\n position: absolute;\n top: 0;\n left: 0;\n }\n```\n\nProperty: width\nSets the width of an element.\nExample:\n\n```js\nimg {\n width: 100px;\n }\n```\n\n<div class=\"content-ad\"></div>\n\n프로퍼티: 높이\n요소의 높이를 설정합니다.\n예시:\n\n```js\n.header {\n height: 80px;\n }\n```\n\n# 중급 레벨\n\n프로퍼티: 글꼴 패밀리\n글꼴 패밀리를 설정합니다.\n예시:\n\n<div class=\"content-ad\"></div>\n\n```json\nbody {\n font-family: Arial, sans-serif;\n }\n```\n\n속성: font-weight\n글꼴의 굵기를 설정합니다.\n예시:\n\n```json\n.bold-text {\n font-weight: bold;\n }\n```\n\n속성: text-transform\n텍스트 대문자화를 제어합니다.\n예시:\n\n\n<div class=\"content-ad\"></div>\n\n```js\nbutton {\n  cursor: pointer;\n}\n```\n\n속성: 배경 이미지\n요소에 하나 이상의 배경 이미지를 설정합니다.\n예시:\n\n```js\n.hero-section {\n  background-image: url('hero.jpg');\n}\n```\n\n속성: 배경 위치\n배경 이미지의 시작 위치를 설정합니다.\n예시:\n\n<div class=\"content-ad\"></div>\n\n```js\n.header {\n background-position: center;\n }\n```\n\n속성: background-repeat\n배경 이미지가 반복되는 방식을 설정합니다.\n예시:\n\n```js\n.pattern {\n background-repeat: repeat-x;\n }\n```\n\n속성: background-size\n배경 이미지의 크기를 설정합니다.\n예시:\n\n<div class=\"content-ad\"></div>\n\n```css\n.cover-image {\n background-size: cover;\n }\n```\n\n속성: 투명도\n투명도 수준을 설정합니다.\n예시:\n\n```css\n.overlay {\n opacity: 0.5;\n }\n```\n\n# 고급 레벨\n\n\n<div class=\"content-ad\"></div>\n\n속성: flex\n유연한 요소의 유연한 길이를 설정합니다.\n예시:\n\n```js\n.container {\n display: flex;\n }\n```\n\n속성: flex-direction\n유연한 컨테이너의 주 축 방향을 지정합니다.\n예시:\n\n```js\n.container {\n flex-direction: row;\n }\n```\n\n<div class=\"content-ad\"></div>\n\nProperty: flex-wrap\n플렉스 항목이 줄 바꿈해야 하는지를 지정합니다.\n예시:\n\n```js\n.container {\n flex-wrap: wrap;\n }\n```\n\nProperty: flex-grow\n플렉스 항목이 서로에 비해 어떻게 성장하는지를 지정합니다.\n예시:\n\n```js\n.item {\n flex-grow: 1;\n }\n```\n\n<div class=\"content-ad\"></div>\n\n속성: flex-shrink\n서로에 비해 얼마나 flex 항목이 줄어드는지를 지정합니다.\n예시:\n\n```js\n.item {\n  flex-shrink: 0;\n}\n```\n\n속성: flex-basis\nflex 항목의 초기 길이를 지정합니다.\n예시:\n\n```js\n.item {\n  flex-basis: 100px;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n프로퍼티: align-items\n플렉스 컨테이너의 교차 축을 따라 플렉스 아이템을 정렬합니다.\n예시:\n\n```js\n.container {\n align-items: center;\n }\n```\n\n프로퍼티: align-self\n개별 플렉스 아이템의 기본 정렬을 재정의할 수 있습니다.\n예시:\n\n```js\n.item {\n align-self: flex-end;\n }\n```\n\n<div class=\"content-ad\"></div>\n\n프로퍼티: justify-content\n플렉스 컨테이너의 주축을 따라 플렉스 아이템을 정렬합니다.\n예시:\n\n```js\n.container {\n justify-content: space-between;\n }\n```\n\n프로퍼티: grid-template-columns\n그리드 레이아웃에서 열의 크기를 지정합니다.\n예시:\n\n```js\n.container {\n display: grid;\n grid-template-columns: 1fr 2fr;\n }\n```\n\n<div class=\"content-ad\"></div>\n\n속성: grid-template-rows\n그리드 레이아웃에서 행의 크기를 지정합니다.\n예시:\n\n```js\n.container {\n display: grid;\n grid-template-rows: 100px auto;\n }\n```\n\n속성: grid-gap\n그리드 레이아웃에서 열과 행 사이의 간격을 설정합니다.\n예시:\n\n```js\n.container {\n display: grid;\n grid-gap: 10px;\n }\n```\n\n<div class=\"content-ad\"></div>\n\n속성: grid-auto-columns\n암시적 그리드 열의 크기를 지정합니다.\n예시:\n\n```js\n.container {\n display: grid;\n grid-auto-columns: 100px;\n}\n```\n\n속성: grid-auto-rows\n암시적 그리드 행의 크기를 지정합니다.\n예시:\n\n```js\n.container {\n display: grid;\n grid-auto-rows: 100px;\n}\n```\n\n<div class=\"content-ad\"></div>\n\nProperty: grid-auto-flow\n그리드 레이아웃에서 자동 배치 알고리즘이 작동하는 방식을 지정합니다.\n예시:\n\n```js\n.container {\n display: grid;\n grid-auto-flow: dense;\n }\n```\n\nProperty: grid-column\n그리드 열 내에서 그리드 항목의 크기와 위치를 지정합니다.\n예시:\n\n```js\n.item {\n grid-column: 2 / span 2;\n }\n```\n\n<div class=\"content-ad\"></div>\n\nProperty: grid-row\n그리드 항목의 크기 및 그리드 행 내 위치를 지정합니다.\n예시:\n\n```js\n.item {\n grid-row: 1 / span 2;\n }\n```\n\nProperty: grid-area\n요소의 크기 및 그리드 레이아웃 내 위치를 설정합니다.\n예시:\n\n```js\n.item {\n grid-area: 1 / 1 / span 2 / span 2;\n }\n```\n\n<div class=\"content-ad\"></div>\n\n이 상세한 CSS 치트 시트는 초보부터 고급 수준까지 다양한 속성 및 선택자를 다루며, 사용 예시를 통해 설명합니다. 특정 속성에 대한 질문이 있거나 추가 설명이 필요하다면 댓글로 자유롭게 질문해 주세요!\n\n이 기사가 도움이 되었기를 바랍니다. 여러분의 문제를 해결하는 데 도움이 되었기를 희망합니다! (새로운 문제가 발생하지 않길 바랍니다 ;-))\n\n즐거운 코딩하세요!","ogImage":{"url":"/assets/img/2024-05-17-MyULTIMATECSSCheatSheetfromBeginnertoPro_0.png"},"coverImage":"/assets/img/2024-05-17-MyULTIMATECSSCheatSheetfromBeginnertoPro_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    code: \"code\",\n    pre: \"pre\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"개발자가 알아야 할 100가지 CSS 속성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-MyULTIMATECSSCheatSheetfromBeginnertoPro_0.png\",\n        alt: \"CSS Cheat Sheet\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"웹 애플리케이션을 만들고 스타일링하는 것을 좋아하며 CSS가 제가 생각하고 이야기하는 가장 좋아하는 것입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"4년의 경험을 통해 많은 것을 배웠고, 이 기사에서 그 지식을 여러분과 공유하고 싶습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"오늘은 모든 사람을 위한 궁극적인 CSS 치트 시트를 제공하기 위해 모든 것을 다 할 거에요 - 절대 초보자부터 궁극의 전문가까지.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마지막으로, 아무도 모르는 최고의 CSS 한 줄 코드 몇 가지를 보여드릴 테니, 이를 통해 많은 작업을 절약할 수 있을 거에요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"편안히 앉아서 즐기고 나중을 위해 저장하세요!\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"초보자 레벨\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"셀렉터: \", _jsx(_components.code, {\n        children: \"element\"\n      }), \"\\n지정된 타입의 모든 요소를 선택합니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"셀렉터: \", _jsx(_components.code, {\n        children: \"#id\"\n      }), \"\\n지정된 id를 가진 요소를 선택합니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"셀렉터: \", _jsx(_components.code, {\n        children: \".class\"\n      }), \"\\n지정된 클래스를 가진 모든 요소를 선택합니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: color\\n텍스트의 색상을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-tag\",\n          children: \"p\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"color\"\n        }), \": blue;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: font-size\\n글꼴 크기를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-tag\",\n          children: \"h1\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"font-size\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"24px\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: background-color\\n배경 색상을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-tag\",\n          children: \"body\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"background-color\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"#f0f0f0\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: margin\\nSets the margin properties.\\nExample:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"margin\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10px\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: padding\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"패딩 속성을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"box\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"padding\"\n        }), \": 20px;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: display\\n요소의 표시 방법을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"block\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": block;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"테이블 태그를 Markdown 형식으로 변경해주세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: position\\nSets the positioning method.\\nExample:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"absolute\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"position\"\n        }), \": absolute;\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"top\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"left\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: width\\nSets the width of an element.\\nExample:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"img {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"width\"\n        }), \": 100px;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로퍼티: 높이\\n요소의 높이를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"header\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"height\"\n        }), \": 80px;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"중급 레벨\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로퍼티: 글꼴 패밀리\\n글꼴 패밀리를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [\"body \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n font-family\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" Arial\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \" sans-serif;\\n \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: font-weight\\n글꼴의 굵기를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [\".bold-text \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n font-weight\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" bold;\\n \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: text-transform\\n텍스트 대문자화를 제어합니다.\\n예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"button {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"cursor\"\n        }), \": pointer;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: 배경 이미지\\n요소에 하나 이상의 배경 이미지를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"hero\"\n        }), \"-section {\\n  background-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"image\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"url\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'hero.jpg'\"\n        }), \");\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: 배경 위치\\n배경 이미지의 시작 위치를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"header\"\n        }), \" {\\n background-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"position\"\n        }), \": center;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: background-repeat\\n배경 이미지가 반복되는 방식을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"pattern\"\n        }), \" {\\n background-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"repeat\"\n        }), \": repeat-x;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: background-size\\n배경 이미지의 크기를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".cover-image\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"background-size\"\n        }), \": cover;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: 투명도\\n투명도 수준을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".overlay\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"opacity\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.5\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"고급 레벨\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: flex\\n유연한 요소의 유연한 길이를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": flex;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: flex-direction\\n유연한 컨테이너의 주 축 방향을 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n flex-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"direction\"\n        }), \": row;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: flex-wrap\\n플렉스 항목이 줄 바꿈해야 하는지를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n flex-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"wrap\"\n        }), \": wrap;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: flex-grow\\n플렉스 항목이 서로에 비해 어떻게 성장하는지를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n flex-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"grow\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: flex-shrink\\n서로에 비해 얼마나 flex 항목이 줄어드는지를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n  flex-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"shrink\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \";\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: flex-basis\\nflex 항목의 초기 길이를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n  flex-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"basis\"\n        }), \": 100px;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로퍼티: align-items\\n플렉스 컨테이너의 교차 축을 따라 플렉스 아이템을 정렬합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n align-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"items\"\n        }), \": center;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로퍼티: align-self\\n개별 플렉스 아이템의 기본 정렬을 재정의할 수 있습니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n align-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"self\"\n        }), \": flex-end;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로퍼티: justify-content\\n플렉스 컨테이너의 주축을 따라 플렉스 아이템을 정렬합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n justify-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"content\"\n        }), \": space-between;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로퍼티: grid-template-columns\\n그리드 레이아웃에서 열의 크기를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": grid;\\n grid-template-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"columns\"\n        }), \": 1fr 2fr;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: grid-template-rows\\n그리드 레이아웃에서 행의 크기를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": grid;\\n grid-template-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"rows\"\n        }), \": 100px auto;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: grid-gap\\n그리드 레이아웃에서 열과 행 사이의 간격을 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": grid;\\n grid-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"gap\"\n        }), \": 10px;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: grid-auto-columns\\n암시적 그리드 열의 크기를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": grid;\\n grid-auto-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"columns\"\n        }), \": 100px;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"속성: grid-auto-rows\\n암시적 그리드 행의 크기를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": grid;\\n grid-auto-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"rows\"\n        }), \": 100px;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: grid-auto-flow\\n그리드 레이아웃에서 자동 배치 알고리즘이 작동하는 방식을 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"container\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"display\"\n        }), \": grid;\\n grid-auto-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"flow\"\n        }), \": dense;\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: grid-column\\n그리드 열 내에서 그리드 항목의 크기와 위치를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n grid-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"column\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \" / span \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: grid-row\\n그리드 항목의 크기 및 그리드 행 내 위치를 지정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n grid-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"row\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" / span \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Property: grid-area\\n요소의 크기 및 그리드 레이아웃 내 위치를 설정합니다.\\n예시:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"item\"\n        }), \" {\\n grid-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"area\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" / \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" / span \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \" / span \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n }\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 상세한 CSS 치트 시트는 초보부터 고급 수준까지 다양한 속성 및 선택자를 다루며, 사용 예시를 통해 설명합니다. 특정 속성에 대한 질문이 있거나 추가 설명이 필요하다면 댓글로 자유롭게 질문해 주세요!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 기사가 도움이 되었기를 바랍니다. 여러분의 문제를 해결하는 데 도움이 되었기를 희망합니다! (새로운 문제가 발생하지 않길 바랍니다 ;-))\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"즐거운 코딩하세요!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}