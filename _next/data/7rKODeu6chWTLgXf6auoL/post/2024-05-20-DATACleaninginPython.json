{"pageProps":{"post":{"title":"파이썬에서 데이터 정제하기","description":"","date":"2024-05-20 21:54","slug":"2024-05-20-DATACleaninginPython","content":"\n\n요구 사항: - Python3, 판다 라이브러리\n\n파이썬에서 데이터 클린업을 위한 몇 가지 미리 정의된 메서드가 있어요\n\n예: — dropna(), fillna(), duplicated(), loc()\n\n1. Dropna : 빈 행을 제거하는 데 사용돼요\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-05-20-DATACleaninginPython_0.png)\n\n제가 데이터 세트를 가지고 있는데 빈 셀을 제거하고 싶어요 (제 경우 (5. 2015)) 빈 셀이 포함된 행을 제거할 수 있어요.\n\n![image](/assets/img/2024-05-20-DATACleaninginPython_1.png)\n\n2. Fillna() : 빈 값을 fillna 메서드로 대체할 수 있어요.\n\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-05-20-DATACleaninginPython_2.png\" />\n\n이제 빈 값을 숫자 90으로 바꿀 수 있어요!\n\n<img src=\"/assets/img/2024-05-20-DATACleaninginPython_3.png\" />\n\n그리고 빈 값을 평균, 최빈값, 중앙값으로 대체할 수도 있어요.\n\n<div class=\"content-ad\"></div>\n\n\n![Image 1](/assets/img/2024-05-20-DATACleaninginPython_4.png)\n\n![Image 2](/assets/img/2024-05-20-DATACleaninginPython_5.png)\n\n3. Duplicate(): it can remove duplicate rows from our dataset\n\n![Image 3](/assets/img/2024-05-20-DATACleaninginPython_6.png)\n\n\n<div class=\"content-ad\"></div>\n\n4. `loc()`: `loc`은 location을 의미하며 이 함수를 사용하여 값을 바꿀 수 있습니다. 예를 들어, 데이터 세트에 잘못된 값이 들어가 있을 때 이 값을 변경하고 싶다면 `loc()`를 사용할 수 있습니다 :\n\n![파일](/assets/img/2024-05-20-DATACleaninginPython_7.png)\n\n이제 5번째 행의 값을 98로 바꾸고 싶다면 :\n\n![파일](/assets/img/2024-05-20-DATACleaninginPython_8.png)\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-05-20-DATACleaninginPython_9.png)\n","ogImage":{"url":"/assets/img/2024-05-20-DATACleaninginPython_0.png"},"coverImage":"/assets/img/2024-05-20-DATACleaninginPython_0.png","tag":["Tech"],"readingTime":2},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"요구 사항: - Python3, 판다 라이브러리\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"파이썬에서 데이터 클린업을 위한 몇 가지 미리 정의된 메서드가 있어요\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"예: — dropna(), fillna(), duplicated(), loc()\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Dropna : 빈 행을 제거하는 데 사용돼요\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_0.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"제가 데이터 세트를 가지고 있는데 빈 셀을 제거하고 싶어요 (제 경우 (5. 2015)) 빈 셀이 포함된 행을 제거할 수 있어요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_1.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Fillna() : 빈 값을 fillna 메서드로 대체할 수 있어요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-DATACleaninginPython_2.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 빈 값을 숫자 90으로 바꿀 수 있어요!\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-DATACleaninginPython_3.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그리고 빈 값을 평균, 최빈값, 중앙값으로 대체할 수도 있어요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_4.png\",\n        alt: \"Image 1\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_5.png\",\n        alt: \"Image 2\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Duplicate(): it can remove duplicate rows from our dataset\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_6.png\",\n        alt: \"Image 3\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"4\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"loc()\"\n        }), \": \", _jsx(_components.code, {\n          children: \"loc\"\n        }), \"은 location을 의미하며 이 함수를 사용하여 값을 바꿀 수 있습니다. 예를 들어, 데이터 세트에 잘못된 값이 들어가 있을 때 이 값을 변경하고 싶다면 \", _jsx(_components.code, {\n          children: \"loc()\"\n        }), \"를 사용할 수 있습니다 :\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_7.png\",\n        alt: \"파일\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 5번째 행의 값을 98로 바꾸고 싶다면 :\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_8.png\",\n        alt: \"파일\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DATACleaninginPython_9.png\",\n        alt: \"image\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}