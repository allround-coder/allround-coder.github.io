{"pageProps":{"post":{"title":"React Native에서 기기에서 파일을 업로드하는 방법","description":"","date":"2024-05-12 21:28","slug":"2024-05-12-HowtoUploadFilesFromDeviceinReactNative","content":"\n\n사용자들이 갤러리에서 이미지를 선택할 수 있는 기능을 제공하는 모바일 애플리케이션을 개발 중이신데요, React Native는 expo-image-picker를 통해 이를 쉽게 구현할 수 있어요. 이 라이브러리는 사용자들이 카메라 롤에서 기존 사진을 손쉽게 선택하거나 카메라를 통해 새 이미지를 캡처할 수 있는 기능을 제공합니다.\n\n![이미지](/assets/img/2024-05-12-HowtoUploadFilesFromDeviceinReactNative_0.png)\n\n# 설치\n\n시작하기 전에 React Native 프로젝트가 설정되어 있고 Expo와 통합되어 있는지 확인해주세요. Expo는 expo-image-picker 라이브러리를 제공하는데, 이를 통해 기기의 카메라와 사진 라이브러리에 접근할 수 있습니다.\n\n\n\n```js\nnpx expo install expo-image-picker\n```\n\n# 코드\n\n```js\nimport React, { useEffect, useState } from 'react';\nimport { Button, View, Image, Platform, StyleSheet, Text } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Pressable } from 'react-native';\n\n\nconst ImagePickerScreen = () => {\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const libraryStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (libraryStatus.status !== 'granted') {\n          alert('죄송합니다. 이 기능을 사용하려면 카메라 롤 권한이 필요합니다.');\n        }\n\n        const cameraStatus = await ImagePicker.requestCameraPermissionsAsync();\n        if (cameraStatus.status !== 'granted') {\n          alert('죄송합니다. 이 기능을 사용하려면 카메라 권한이 필요합니다.');\n        }\n      }\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Button title=\"카메라 롤에서 이미지 선택\" onPress={pickImage} />\n      {image && <Image source={{ uri: image }} style={styles.image} />}\n        <Pressable onPress={navigateProfile}>\n            <Text style={{ fontSize: 18, marginBottom: 10, color: '#003F5C', padding: 25 }}>프로필로 이동</Text>\n        </Pressable>\n    </View>\n  );\n};\n\nexport default ImagePickerScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: 20,\n  },\n});\n```\n\n# 코드 설명\n```\n\n\n\n이제 코드를 분해하여 각 부분을 이해해 봅시다.\n\n## 필요한 모듈 가져오기\n\n```js\nimport React, { useEffect, useState } from 'react';\nimport { Button, View, Image, Platform, StyleSheet, Text } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useNavigation } from '@react-navigation/native';\nimport { Pressable } from 'react-native';\n```\n\n이 섹션에서는 다음을 가져옵니다:\n\n\n\n- 기본 기능과 렌더링을 위한 React 훅과 컴포넌트를 사용합니다.\n- 이미지 선택을 처리하기 위해 expo-image-picker의 ImagePicker를 사용합니다.\n- 화면 전환을 위한 네비게이션 도구를 사용합니다.\n\n```js\nconst ImagePickerScreen = () => {\n  const [image, setImage] = useState(null);\n  const navigation = useNavigation();\n  ...\n};\n```\n\n여기서:\n\n- ImagePickerScreen 함수형 컴포넌트를 정의합니다.\n- 선택한 이미지를 관리하기 위해 useState를 사용합니다.\n- 네비게이션을 설정합니다.\n\n\n\n## 권한을 위한 useEffect 훅\n\n```js\nuseEffect(() => {\n  (async () => {\n    if (Platform.OS !== 'web') {\n      const libraryStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (libraryStatus.status !== 'granted') {\n        alert('죄송합니다, 이 기능을 사용하려면 사진 라이브러리 권한이 필요합니다!');\n      }\n\n      const cameraStatus = await ImagePicker.requestCameraPermissionsAsync();\n      if (cameraStatus.status !== 'granted') {\n        alert('죄송합니다, 이 기능을 사용하려면 카메라 권한이 필요합니다!');\n      }\n    }\n  })();\n}, []);\n```\n\n이 코드 블록은 컴포넌트가 마운트된 후 실행되는 useEffect 훅을 사용하고 있습니다:\n\n- 플랫폼 확인:\n\n\n\n먼저 플랫폼이 웹 브라우저가 아닌지 확인합니다 (Platform.OS !== `web`). 이것은 권한 처리가 일반적으로 모바일 기기 관련 문제이므로 웹 플랫폼에는 적용되지 않기 때문에 중요합니다.\n\n2. 권한 요청:\n\n미디어 라이브러리 권한: 미디어 라이브러리에 액세스하기 위한 권한을 요청합니다 (ImagePicker.requestMediaLibraryPermissionsAsync()). 이것은 앱이 기기에 저장된 사진에 액세스할 수 있도록 하는 데 필요합니다.\n\n카메라 권한: 마찬가지로, 카메라 사용 권한을 요청합니다 (ImagePicker.requestCameraPermissionsAsync()). 이 권한은 앱이 기기의 카메라를 사용하여 새로운 사진을 찍을 수 있도록 해야 합니다.\n\n\n\n3. 권한 상태 처리:\n\n만약 권한이 허용되지 않았을 경우 (상태 !== `granted`), 사용자에게 경고창을 보여줍니다. 이 경고창은 앱이 올바르게 작동하기 위해 이러한 권한이 필요하다는 것을 사용자에게 알리는 간단한 방법입니다.\n\n## 이미지 선택을 위한 pickImage 함수\n\n```js\nconst pickImage = async () => {\n  let result = await ImagePicker.launchImageLibraryAsync({\n    mediaTypes: ImagePicker.MediaTypeOptions.All,\n    allowsEditing: true,\n    aspect: [4, 3],\n    quality: 1,\n  });\n\n  if (!result.cancelled) {\n    setImage(result.uri);\n  }\n};\n```\n\n\n\n이 함수는 기기의 이미지 라이브러리를 열고 사용자가 이미지를 선택할 수 있도록 담당합니다:\n\n- 이미지 라이브러리 열기: ImagePicker.launchImageLibraryAsync은 이미지 라이브러리를 열어주는 비동기 함수입니다.\n- 구성:\n\n  - mediaTypes: ImagePicker.MediaTypeOptions.All: 이 설정은 사용자가 사진 및 동영상을 포함한 모든 미디어 유형을 선택할 수 있게 합니다.\n  - allowsEditing: true: 사용자는 이미지를 선택하기 전에 (자르기와 같은) 편집할 수 있습니다.\n  - aspect: [4, 3]: 이미지 편집기의 종횡비를 설정합니다.\n  - quality: 1: 선택한 이미지의 품질을 결정합니다. 여기서 1은 최상의 품질을 의미합니다.\n\n3. 선택 처리:\n\n\n\n- 해당 기능은 사용자가 이미지를 선택할 때까지 대기합니다. 이미지를 선택하면 결과 객체에 선택에 관한 세부 정보가 포함됩니다.\n- 작업이 취소되지 않은 경우 (!result.cancelled), 이미지 URI는 setImage(result.uri)를 호출하여 컴포넌트의 상태에 저장됩니다. 그런 다음 이 URI를 사용하여 이미지를 표시하거나 서버에 업로드할 수 있습니다.\n\n# 결론\n\nExpo의 Image Picker를 React Native 앱에 통합하면 사용자 경험을 향상시키는 강력한 방법을 시연합니다. 권한을 책임 있게 처리하고 이미지 선택 및 편집을 가능하게 함으로써, 이 앱은 사용자의 개인 정보를 존중할 뿐만 아니라 개인화되고 대화식인 접촉을 제공합니다. 이 기능은 현대적인 모바일 앱에서 중요하며, 사용자 참여를 풍부하게 해주고 앱을 보다 다양하고 사용자 친화적으로 만듭니다\n\nGitHub: https://github.com/sanchit0496/react_native_scaffolding\n\n\n\n# 더 많은 정보를 위해 Sanchit의 LinkedIn을 팔로우해 주세요","ogImage":{"url":"/assets/img/2024-05-12-HowtoUploadFilesFromDeviceinReactNative_0.png"},"coverImage":"/assets/img/2024-05-12-HowtoUploadFilesFromDeviceinReactNative_0.png","tag":["Tech"],"readingTime":6},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"사용자들이 갤러리에서 이미지를 선택할 수 있는 기능을 제공하는 모바일 애플리케이션을 개발 중이신데요, React Native는 expo-image-picker를 통해 이를 쉽게 구현할 수 있어요. 이 라이브러리는 사용자들이 카메라 롤에서 기존 사진을 손쉽게 선택하거나 카메라를 통해 새 이미지를 캡처할 수 있는 기능을 제공합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-HowtoUploadFilesFromDeviceinReactNative_0.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"설치\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시작하기 전에 React Native 프로젝트가 설정되어 있고 Expo와 통합되어 있는지 확인해주세요. Expo는 expo-image-picker 라이브러리를 제공하는데, 이를 통해 기기의 카메라와 사진 라이브러리에 접근할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npx expo install expo-image-picker\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"코드\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { useEffect, useState } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Button\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"View\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Image\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Platform\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"StyleSheet\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react-native'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" * \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'expo-image-picker'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Pressable\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react-native'\"\n        }), \";\\n\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"ImagePickerScreen\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [image, setImage] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \");\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useEffect\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n    (\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" () => {\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Platform\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"OS\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'web'\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" libraryStatus = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"requestMediaLibraryPermissionsAsync\"\n        }), \"();\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (libraryStatus.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"status\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'granted'\"\n        }), \") {\\n          \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"alert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'죄송합니다. 이 기능을 사용하려면 카메라 롤 권한이 필요합니다.'\"\n        }), \");\\n        }\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" cameraStatus = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"requestCameraPermissionsAsync\"\n        }), \"();\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (cameraStatus.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"status\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'granted'\"\n        }), \") {\\n          \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"alert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'죄송합니다. 이 기능을 사용하려면 카메라 권한이 필요합니다.'\"\n        }), \");\\n        }\\n      }\\n    })();\\n  }, []);\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"pickImage\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" result = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"launchImageLibraryAsync\"\n        }), \"({\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"mediaTypes\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"MediaTypeOptions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"All\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowsEditing\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"aspect\"\n        }), \": [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"],\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"quality\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",\\n    });\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (!result.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cancelled\"\n        }), \") {\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setImage\"\n        }), \"(result.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"uri\"\n        }), \");\\n    }\\n  };\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"View\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{styles.container}\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Button\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"title\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"카메라 롤에서 이미지 선택\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onPress\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{pickImage}\"\n            }), \" />\"]\n          }), \"\\n      {image && \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Image\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"source\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"uri:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"image\"\n            }), \" }} \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{styles.image}\"\n            }), \" />\"]\n          }), \"}\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Pressable\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onPress\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{navigateProfile}\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Text\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"fontSize:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"18\"\n            }), \", \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"marginBottom:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"10\"\n            }), \", \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"color:\"\n            }), \" '#\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"003F5C\"\n            }), \"', \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"25\"\n            }), \" }}>\"]\n          }), \"프로필로 이동\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Text\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Pressable\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"View\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n};\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePickerScreen\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" styles = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"StyleSheet\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"({\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"container\"\n        }), \": {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"flex\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"alignItems\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'center'\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"justifyContent\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'center'\"\n        }), \",\\n  },\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"image\"\n        }), \": {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"width\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"200\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"height\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"200\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"marginTop\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \",\\n  },\\n});\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"코드 설명\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"\\n\\n\\n이제 코드를 분해하여 각 부분을 이해해 봅시다.\\n\\n## 필요한 모듈 가져오기\\n\\n```js\\nimport React, { useEffect, useState } from 'react';\\nimport { Button, View, Image, Platform, StyleSheet, Text } from 'react-native';\\nimport * as ImagePicker from 'expo-image-picker';\\nimport { useNavigation } from '@react-navigation/native';\\nimport { Pressable } from 'react-native';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 섹션에서는 다음을 가져옵니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"기본 기능과 렌더링을 위한 React 훅과 컴포넌트를 사용합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"이미지 선택을 처리하기 위해 expo-image-picker의 ImagePicker를 사용합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"화면 전환을 위한 네비게이션 도구를 사용합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"ImagePickerScreen\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [image, setImage] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \");\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" navigation = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useNavigation\"\n        }), \"();\\n  ...\\n};\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"여기서:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ImagePickerScreen 함수형 컴포넌트를 정의합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"선택한 이미지를 관리하기 위해 useState를 사용합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"네비게이션을 설정합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"권한을 위한 useEffect 훅\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useEffect\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n  (\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" () => {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Platform\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"OS\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'web'\"\n        }), \") {\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" libraryStatus = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"requestMediaLibraryPermissionsAsync\"\n        }), \"();\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (libraryStatus.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"status\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'granted'\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"alert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'죄송합니다, 이 기능을 사용하려면 사진 라이브러리 권한이 필요합니다!'\"\n        }), \");\\n      }\\n\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" cameraStatus = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"requestCameraPermissionsAsync\"\n        }), \"();\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (cameraStatus.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"status\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'granted'\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"alert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'죄송합니다, 이 기능을 사용하려면 카메라 권한이 필요합니다!'\"\n        }), \");\\n      }\\n    }\\n  })();\\n}, []);\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 코드 블록은 컴포넌트가 마운트된 후 실행되는 useEffect 훅을 사용하고 있습니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"플랫폼 확인:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"먼저 플랫폼이 웹 브라우저가 아닌지 확인합니다 (Platform.OS !== \", _jsx(_components.code, {\n        children: \"web\"\n      }), \"). 이것은 권한 처리가 일반적으로 모바일 기기 관련 문제이므로 웹 플랫폼에는 적용되지 않기 때문에 중요합니다.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"권한 요청:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"미디어 라이브러리 권한: 미디어 라이브러리에 액세스하기 위한 권한을 요청합니다 (ImagePicker.requestMediaLibraryPermissionsAsync()). 이것은 앱이 기기에 저장된 사진에 액세스할 수 있도록 하는 데 필요합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"카메라 권한: 마찬가지로, 카메라 사용 권한을 요청합니다 (ImagePicker.requestCameraPermissionsAsync()). 이 권한은 앱이 기기의 카메라를 사용하여 새로운 사진을 찍을 수 있도록 해야 합니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"권한 상태 처리:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"만약 권한이 허용되지 않았을 경우 (상태 !== \", _jsx(_components.code, {\n        children: \"granted\"\n      }), \"), 사용자에게 경고창을 보여줍니다. 이 경고창은 앱이 올바르게 작동하기 위해 이러한 권한이 필요하다는 것을 사용자에게 알리는 간단한 방법입니다.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"이미지 선택을 위한 pickImage 함수\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"pickImage\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" result = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"launchImageLibraryAsync\"\n        }), \"({\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"mediaTypes\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ImagePicker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"MediaTypeOptions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"All\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowsEditing\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"aspect\"\n        }), \": [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"],\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"quality\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",\\n  });\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (!result.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cancelled\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setImage\"\n        }), \"(result.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"uri\"\n        }), \");\\n  }\\n};\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 함수는 기기의 이미지 라이브러리를 열고 사용자가 이미지를 선택할 수 있도록 담당합니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"이미지 라이브러리 열기: ImagePicker.launchImageLibraryAsync은 이미지 라이브러리를 열어주는 비동기 함수입니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"구성:\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"mediaTypes: ImagePicker.MediaTypeOptions.All: 이 설정은 사용자가 사진 및 동영상을 포함한 모든 미디어 유형을 선택할 수 있게 합니다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"allowsEditing: true: 사용자는 이미지를 선택하기 전에 (자르기와 같은) 편집할 수 있습니다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"aspect: [4, 3]: 이미지 편집기의 종횡비를 설정합니다.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"quality: 1: 선택한 이미지의 품질을 결정합니다. 여기서 1은 최상의 품질을 의미합니다.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"선택 처리:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"해당 기능은 사용자가 이미지를 선택할 때까지 대기합니다. 이미지를 선택하면 결과 객체에 선택에 관한 세부 정보가 포함됩니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"작업이 취소되지 않은 경우 (!result.cancelled), 이미지 URI는 setImage(result.uri)를 호출하여 컴포넌트의 상태에 저장됩니다. 그런 다음 이 URI를 사용하여 이미지를 표시하거나 서버에 업로드할 수 있습니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Expo의 Image Picker를 React Native 앱에 통합하면 사용자 경험을 향상시키는 강력한 방법을 시연합니다. 권한을 책임 있게 처리하고 이미지 선택 및 편집을 가능하게 함으로써, 이 앱은 사용자의 개인 정보를 존중할 뿐만 아니라 개인화되고 대화식인 접촉을 제공합니다. 이 기능은 현대적인 모바일 앱에서 중요하며, 사용자 참여를 풍부하게 해주고 앱을 보다 다양하고 사용자 친화적으로 만듭니다\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GitHub: https://github.com/sanchit0496/react_native_scaffolding\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"더 많은 정보를 위해 Sanchit의 LinkedIn을 팔로우해 주세요\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}