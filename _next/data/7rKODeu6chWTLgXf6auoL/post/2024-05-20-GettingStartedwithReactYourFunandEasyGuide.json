{"pageProps":{"post":{"title":"리액트 시작하는 개발자가 봐야하는 글","description":"","date":"2024-05-20 22:08","slug":"2024-05-20-GettingStartedwithReactYourFunandEasyGuide","content":"\n\n- HTML: 웹페이지의 기본 구조를 이해합니다.\n- CSS: 스타일을 적용하여 웹페이지를 멋지게 만듭니다.\n- JavaScript: 웹페이지를 인터랙티브하게 만드는 코딩 언어를 배웁니다.\n- DOM 조작: 웹페이지를 동적으로 변경하는 방법에 익숙해집니다.\n\n- TODO 앱 만들기: 간단한 할 일 목록을 만들면서 배운 것을 연습해보세요!\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>나의 TODO 앱</title>\n  <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n  <div class=\"todo-container\">\n    <input type=\"text\" id=\"todo-input\" placeholder=\"새로운 할 일 추가\">\n    <button id=\"add-btn\">추가</button>\n    <ul id=\"todo-list\"></ul>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n```css\n/* styles.css */\n.todo-container {\n  max-width: 400px;\n  margin: 0 auto;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n// script.js\nconst todoInput = document.getElementById('todo-input');\nconst addBtn = document.getElementById('add-btn');\nconst todoList = document.getElementById('todo-list');\n\naddBtn.addEventListener('click', () => {\n  const todoText = todoInput.value.trim();\n  if (todoText !== '') {\n    const todoItem = document.createElement('li');\n    todoItem.textContent = todoText;\n    todoList.appendChild(todoItem);\n    todoInput.value = '';\n  }\n});\n```\n\n- Components: 요소들을 웹페이지 구성의 빌딩 블록으로 생각해보세요.\n- Props: 이것들은 요소들이 서로 대화할 때 사용하는 메시지와 같습니다.\n- UseState: 웹페이지에서 무슨 일이 일어나고 있는지 추적하는 데 도움을 줍니다.\n- UseEffect: 이것은 웹페이지가 서로 다른 액션에 대응하는 방법을 관리합니다.\n\n- Create Components: 할 일 목록을 재사용할 수 있는 작은 부분들로 나누세요.\n- Use Props: 할 일 목록의 다른 부분들 사이에 정보를 전달하세요.\n- Manage State: useState로 할 일 목록에서 무슨 일이 일어나고 있는지 추적하세요.\n- Handle Side Effects: useEffect를 사용하여 새로운 할 일 항목을 가져오거나 무언가 변경될 때 페이지를 업데이트하는 등의 작업을 수행하세요.\n\n```js\n// script.js\nconst TodoApp = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todoText, setTodoText] = React.useState('');\n\n  const handleAddTodo = () => {\n    if (todoText.trim() !== '') {\n      setTodos([...todos, todoText]);\n      setTodoText('');\n    }\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <input\n        type=\"text\"\n        value={todoText}\n        onChange={(e) => setTodoText(e.target.value)}\n        placeholder=\"Add a new todo\"\n      />\n      <button onClick={handleAddTodo}>Add</button>\n      <ul>\n        {todos.map((todo, index) => (\n          <li key={index}>{todo}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReactDOM.render(<TodoApp />, document.getElementById('root'));\n```\n\n<div class=\"content-ad\"></div>\n\n## 이제 React에 익숙해졌으니 창의력을 발휘해보세요! 무엇이든 시작해보고 어떤 놀라운 것들을 만들어낼 수 있는지 확인해보세요. 기억하세요, 모든 위대한 프로젝트는 간단한 아이디어로 시작됩니다. 여러분은 할 수 있어요!","ogImage":{"url":"/assets/img/2024-05-20-GettingStartedwithReactYourFunandEasyGuide_0.png"},"coverImage":"/assets/img/2024-05-20-GettingStartedwithReactYourFunandEasyGuide_0.png","tag":["Tech"],"readingTime":3},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"HTML: 웹페이지의 기본 구조를 이해합니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"CSS: 스타일을 적용하여 웹페이지를 멋지게 만듭니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"JavaScript: 웹페이지를 인터랙티브하게 만드는 코딩 언어를 배웁니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"DOM 조작: 웹페이지를 동적으로 변경하는 방법에 익숙해집니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"TODO 앱 만들기: 간단한 할 일 목록을 만들면서 배운 것을 연습해보세요!\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<!\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DOCTYPE\"\n        }), \" html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>나의 TODO 앱</title>\\n  <link rel=\\\"stylesheet\\\" href=\\\"styles.css\\\">\\n</head>\\n<body>\\n  <div class=\\\"todo-container\\\">\\n    <input type=\\\"text\\\" id=\\\"todo-input\\\" placeholder=\\\"새로운 할 일 추가\\\">\\n    <button id=\\\"add-btn\\\">추가</button>\\n    <ul id=\\\"todo-list\\\"></ul>\\n  </div>\\n  <script src=\\\"script.js\\\"></script>\\n</body>\\n</html>\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/* styles.css */\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".todo-container\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"max-width\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"400px\"\n        }), \";\\n  \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"margin\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" auto;\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// script.js\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" todoInput = \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getElementById\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'todo-input'\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" addBtn = \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getElementById\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'add-btn'\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" todoList = \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getElementById\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'todo-list'\"\n        }), \");\\n\\naddBtn.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addEventListener\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'click'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" todoText = todoInput.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"value\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"trim\"\n        }), \"();\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (todoText !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" todoItem = \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createElement\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'li'\"\n        }), \");\\n    todoItem.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"textContent\"\n        }), \" = todoText;\\n    todoList.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"appendChild\"\n        }), \"(todoItem);\\n    todoInput.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"value\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \";\\n  }\\n});\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Components: 요소들을 웹페이지 구성의 빌딩 블록으로 생각해보세요.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Props: 이것들은 요소들이 서로 대화할 때 사용하는 메시지와 같습니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"UseState: 웹페이지에서 무슨 일이 일어나고 있는지 추적하는 데 도움을 줍니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"UseEffect: 이것은 웹페이지가 서로 다른 액션에 대응하는 방법을 관리합니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Create Components: 할 일 목록을 재사용할 수 있는 작은 부분들로 나누세요.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Use Props: 할 일 목록의 다른 부분들 사이에 정보를 전달하세요.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Manage State: useState로 할 일 목록에서 무슨 일이 일어나고 있는지 추적하세요.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Handle Side Effects: useEffect를 사용하여 새로운 할 일 항목을 가져오거나 무언가 변경될 때 페이지를 업데이트하는 등의 작업을 수행하세요.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// script.js\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"TodoApp\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [todos, setTodos] = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"([]);\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [todoText, setTodoText] = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \");\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleAddTodo\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (todoText.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"trim\"\n        }), \"() !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \") {\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setTodos\"\n        }), \"([...todos, todoText]);\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setTodoText\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \");\\n    }\\n  };\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"todo-container\\\"\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"input\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text\\\"\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{todoText}\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setTodoText(e.target.value)}\\n        placeholder=\\\"Add a new todo\\\"\\n      />\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onClick\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{handleAddTodo}\"\n            }), \">\"]\n          }), \"Add\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"ul\"\n            }), \">\"]\n          }), \"\\n        {todos.map((todo, index) => (\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"key\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{index}\"\n            }), \">\"]\n          }), \"{todo}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \">\"]\n          }), \"\\n        ))}\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"ul\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n};\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactDOM\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"render\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"xml\",\n          children: _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"TodoApp\"\n            }), \" />\"]\n          })\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getElementById\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'root'\"\n        }), \"));\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"이제 React에 익숙해졌으니 창의력을 발휘해보세요! 무엇이든 시작해보고 어떤 놀라운 것들을 만들어낼 수 있는지 확인해보세요. 기억하세요, 모든 위대한 프로젝트는 간단한 아이디어로 시작됩니다. 여러분은 할 수 있어요!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}