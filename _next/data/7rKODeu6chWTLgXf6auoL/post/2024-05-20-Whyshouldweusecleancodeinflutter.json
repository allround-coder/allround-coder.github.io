{"pageProps":{"post":{"title":"Flutter에서 clean code를 작성하는 방법","description":"","date":"2024-05-20 23:18","slug":"2024-05-20-Whyshouldweusecleancodeinflutter","content":"\n\n![image](/assets/img/2024-05-20-Whyshouldweusecleancodeinflutter_0.png)\n\n플러터에서 깨끗한 코드를 사용하는 것은 유지보수성, 가독성, 확장성 및 디버깅의 용이성을 포함한 여러 가지 이유로 중요합니다. 아래에는 깨끗한 코드의 중요성을 설명하기 위한 몇 가지 구체적인 예와 함께 자세한 설명이 나와 있습니다.\n\n- 유지보수성\n\n깨끗한 코드는 이해하기 쉽고 수정하기 쉽습니다. 코드베이스가 커질수록 잘 구성되고 이해하기 쉬운 코드를 가지고 있으면 버그를 수정하고 새로운 기능을 추가하기가 더 쉬워집니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// .......................코드 작성이 잘못된 부분............................\n\nWidget build(BuildContext context) {\n  return Scaffold(\n    appBar: AppBar(\n      title: Text('내 앱'),\n    ),\n    body: Column(\n      children: [\n        Text('내 앱에 오신 것을 환영합니다', style: TextStyle(fontSize: 24)),\n        RaisedButton(\n          onPressed: () {\n            // 복잡한 로직\n          },\n          child: Text('눌러보세요'),\n        ),\n      ],\n    ),\n  );\n}\n\n// .......................깔끔한 코드...................................\n\nclass HomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: _buildAppBar(),\n      body: _buildBody(),\n    );\n  }\n\n  AppBar _buildAppBar() {\n    return AppBar(\n      title: Text('내 앱'),\n    );\n  }\n\n  Widget _buildBody() {\n    return Column(\n      children: [\n        _buildWelcomeText(),\n        _buildPressMeButton(),\n      ],\n    );\n  }\n\n  Widget _buildWelcomeText() {\n    return Text(\n      '내 앱에 오신 것을 환영합니다',\n      style: TextStyle(fontSize: 24),\n    );\n  }\n\n  Widget _buildPressMeButton() {\n    return RaisedButton(\n      onPressed: _handlePressMeButton,\n      child: Text('눌러보세요'),\n    );\n  }\n\n  void _handlePressMeButton() {\n    // 복잡한 로직\n  }\n}\n```\n\n깔끔한 코드 예제에서, build 메서드는 더 작고 더 집중된 메서드로 분해되어 유지보수가 더 쉽습니다.\n\n2. 가독성\n\n깔끔한 코드는 더 읽기 쉽고 이해하기 쉽습니다. 이는 코드가 작성되기보다는 더 자주 읽히기 때문에 중요합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// .......................작성된 코드가 좋지 않습니다............................\n\nvoid updateUserProfile(User user) {\n  if (user.name != null && user.email != null) {\n    // 프로필 업데이트\n  }\n}\n\n\n// ............................깨끗한 코드................................\n\nvoid updateUserProfile(User user) {\n  if (_isUserProfileValid(user)) {\n    _updateProfileInDatabase(user);\n  }\n}\n\nbool _isUserProfileValid(User user) {\n  return user.name != null && user.email != null;\n}\n\nvoid _updateProfileInDatabase(User user) {\n  // 프로필 업데이트\n}\n```\n\n깨끗한 코드 예제는 조건을 잘 명명된 메서드로 추상화하여 가독성을 향상시킵니다.\n\n3. 확장성\n\n프로젝트가 확장될수록, 깨끗한 코드는 코드베이스의 품질을 저하시키지 않고 새로운 기능을 추가하는 것을 더 쉽게 만듭니다.\n  \n\n<div class=\"content-ad\"></div>\n\n```js\n// ..........잘못 작성된 코드.........\n\nvoid performAction(String action) {\n  if (action == 'login') {\n    // 로그인 로직\n  } else if (action == 'logout') {\n    // 로그아웃 로직\n  } else if (action == 'signup') {\n    // 가입 로직\n  }\n}\n\n// ...........깔끔한 코드...............\n\nvoid performAction(String action) {\n  switch (action) {\n    case 'login':\n      _login();\n      break;\n    case 'logout':\n      _logout();\n      break;\n    case 'signup':\n      _signup();\n      break;\n    default:\n      _handleUnknownAction();\n  }\n}\n\nvoid _login() {\n  // 로그인 로직\n}\n\nvoid _logout() {\n  // 로그아웃 로직\n}\n\nvoid _signup() {\n  // 가입 로직\n}\n\nvoid _handleUnknownAction() {\n  // 알 수 없는 동작 처리\n}\n```\n\n깔끔한 코드 예시는 switch 문을 사용하여 동작을 각각의 메서드로 분리하여 새로운 동작을 추가하기 쉽게 만듭니다.\n\n4. 디버깅 용이성\n\n깔끔한 코드는 더 직관적으로 코드를 추적하고 실행 흐름을 이해하기 쉬워져 디버깅을 단순화합니다.\n\n<div class=\"content-ad\"></div>\n\n잘못 작성된 코드:\n\n```js\n// ...........잘못 작성된 코드..............\n\nvoid processOrder(Order order) {\n  if (order.isValid()) {\n    if (order.total > 100) {\n      applyDiscount(order);\n    }\n    // 주문 처리\n  }\n}\n\n\n// ...........깨끗한 코드..............\n\nvoid processOrder(Order order) {\n  if (!order.isValid()) {\n    return;\n  }\n  _applyDiscountIfEligible(order);\n  _processOrderDetails(order);\n}\n\nvoid _applyDiscountIfEligible(Order order) {\n  if (order.total > 100) {\n    applyDiscount(order);\n  }\n}\n\nvoid _processOrderDetails(Order order) {\n  // 주문 처리\n}\n```\n\n깨끗한 코드 예시에서는 로직이 작고 관리하기 쉬운 메소드로 분해되어 있어 이해하고 디버그하기가 더 쉽습니다.\n\n추가 예시: 변수\n\n<div class=\"content-ad\"></div>\n\n```js\n// ........잘못 작성된 코드......\n\nint a;\nString b;\n\n// ........깔끔한 코드..........\n\nint productCount;\nString activeUserName;\n```\n\n함수:\n\n```js\n// ........잘못 작성된 코드.......\n\nvoid doSomething();\nString getSomething();\n\n// ........깔끔한 코드..........\n\nvoid updateProductCount() {\n  // ...\n}\n\nString getUserName() {\n  // ...\n}\n```\n\n클래스:\n\n<div class=\"content-ad\"></div>\n\n\n// ......잘못 작성된 코드....\n\nclass MyClass {\n  // ...\n}\n\n// ........깔끔한 코드..........\n\nclass VideoList {\n  // ...\n}\n\nclass UserAccount {\n  // ...\n}\n\n\n## 결론\n\nFlutter에서 깔끔한 코드를 사용하면 코드베이스가 유지 가능하고 가독성이 높고 확장 가능하며 쉽게 디버깅할 수 있습니다. 깔끔한 코드 원칙을 준수하면 애플리케이션의 전반적인 품질을 향상시켜 미래에 코드를 작업할 때 자신과 다른 사람들이 더 쉽게 작업할 수 있게 됩니다.\n\n<img src=\"/assets/img/2024-05-20-Whyshouldweusecleancodeinflutter_1.png\" />\n\n\n<div class=\"content-ad\"></div>\n\n이 기사를 즐겁게 보셨기를 바라요! 제공된 정보를 감사하게 여기신다면, 'Buy Me A Coffee'로 저를 지원할 수 있어요! 여러분의 센스에 감사드릴 거예요!","ogImage":{"url":"/assets/img/2024-05-20-Whyshouldweusecleancodeinflutter_0.png"},"coverImage":"/assets/img/2024-05-20-Whyshouldweusecleancodeinflutter_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\n// ...\n// ...\n// ...\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ol: \"ol\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-Whyshouldweusecleancodeinflutter_0.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"플러터에서 깨끗한 코드를 사용하는 것은 유지보수성, 가독성, 확장성 및 디버깅의 용이성을 포함한 여러 가지 이유로 중요합니다. 아래에는 깨끗한 코드의 중요성을 설명하기 위한 몇 가지 구체적인 예와 함께 자세한 설명이 나와 있습니다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"유지보수성\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깨끗한 코드는 이해하기 쉽고 수정하기 쉽습니다. 코드베이스가 커질수록 잘 구성되고 이해하기 쉬운 코드를 가지고 있으면 버그를 수정하고 새로운 기능을 추가하기가 더 쉬워집니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// .......................코드 작성이 잘못된 부분............................\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Widget\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"build\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"BuildContext context\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Scaffold\"\n        }), \"(\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"appBar\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"AppBar\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"title\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'내 앱'\"\n        }), \"),\\n    ),\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"body\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Column\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"children\"\n        }), \": [\\n        \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'내 앱에 오신 것을 환영합니다'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"style\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"TextStyle\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"fontSize\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"24\"\n        }), \")),\\n        \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"RaisedButton\"\n        }), \"(\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"onPressed\"\n        }), \": () {\\n            \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 복잡한 로직\"\n        }), \"\\n          },\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"child\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'눌러보세요'\"\n        }), \"),\\n        ),\\n      ],\\n    ),\\n  );\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// .......................깔끔한 코드...................................\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"HomePage\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_ inherited__\",\n          children: \"StatelessWidget\"\n        }), \" {\\n  @override\\n  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Widget\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"build\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"BuildContext context\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Scaffold\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"appBar\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildAppBar\"\n        }), \"(),\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"body\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildBody\"\n        }), \"(),\\n    );\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"AppBar\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildAppBar\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"AppBar\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"title\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'내 앱'\"\n        }), \"),\\n    );\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Widget\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildBody\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Column\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"children\"\n        }), \": [\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildWelcomeText\"\n        }), \"(),\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildPressMeButton\"\n        }), \"(),\\n      ],\\n    );\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Widget\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildWelcomeText\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'내 앱에 오신 것을 환영합니다'\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"style\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"TextStyle\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"fontSize\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"24\"\n        }), \"),\\n    );\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Widget\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_buildPressMeButton\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"RaisedButton\"\n        }), \"(\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"onPressed\"\n        }), \": _handlePressMeButton,\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"child\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'눌러보세요'\"\n        }), \"),\\n    );\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_handlePressMeButton\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 복잡한 로직\"\n        }), \"\\n  }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깔끔한 코드 예제에서, build 메서드는 더 작고 더 집중된 메서드로 분해되어 유지보수가 더 쉽습니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"가독성\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깔끔한 코드는 더 읽기 쉽고 이해하기 쉽습니다. 이는 코드가 작성되기보다는 더 자주 읽히기 때문에 중요합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// .......................작성된 코드가 좋지 않습니다............................\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"updateUserProfile\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"User user\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (user.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"name\"\n        }), \" != \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \" && user.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"email\"\n        }), \" != \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 프로필 업데이트\"\n        }), \"\\n  }\\n}\\n\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ............................깨끗한 코드................................\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"updateUserProfile\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"User user\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_isUserProfileValid\"\n        }), \"(user)) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_updateProfileInDatabase\"\n        }), \"(user);\\n  }\\n}\\n\\nbool \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_isUserProfileValid\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"User user\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" user.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"name\"\n        }), \" != \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \" && user.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"email\"\n        }), \" != \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \";\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_updateProfileInDatabase\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"User user\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 프로필 업데이트\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깨끗한 코드 예제는 조건을 잘 명명된 메서드로 추상화하여 가독성을 향상시킵니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"확장성\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로젝트가 확장될수록, 깨끗한 코드는 코드베이스의 품질을 저하시키지 않고 새로운 기능을 추가하는 것을 더 쉽게 만듭니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ..........잘못 작성된 코드.........\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"performAction\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"String\"\n          }), \" action\"]\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (action == \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'login'\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 로그인 로직\"\n        }), \"\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (action == \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'logout'\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 로그아웃 로직\"\n        }), \"\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (action == \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'signup'\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 가입 로직\"\n        }), \"\\n  }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ...........깔끔한 코드...............\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"performAction\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"String\"\n          }), \" action\"]\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"switch\"\n        }), \" (action) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"case\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'login'\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_login\"\n        }), \"();\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"break\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"case\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'logout'\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_logout\"\n        }), \"();\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"break\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"case\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'signup'\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_signup\"\n        }), \"();\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"break\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"default\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_handleUnknownAction\"\n        }), \"();\\n  }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_login\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 로그인 로직\"\n        }), \"\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_logout\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 로그아웃 로직\"\n        }), \"\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_signup\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 가입 로직\"\n        }), \"\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_handleUnknownAction\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 알 수 없는 동작 처리\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깔끔한 코드 예시는 switch 문을 사용하여 동작을 각각의 메서드로 분리하여 새로운 동작을 추가하기 쉽게 만듭니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"4\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"디버깅 용이성\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깔끔한 코드는 더 직관적으로 코드를 추적하고 실행 흐름을 이해하기 쉬워져 디버깅을 단순화합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"잘못 작성된 코드:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ...........잘못 작성된 코드..............\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"processOrder\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"Order order\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (order.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isValid\"\n        }), \"()) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (order.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"total\"\n        }), \" > \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \") {\\n      \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"applyDiscount\"\n        }), \"(order);\\n    }\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 주문 처리\"\n        }), \"\\n  }\\n}\\n\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ...........깨끗한 코드..............\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"processOrder\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"Order order\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (!order.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isValid\"\n        }), \"()) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \";\\n  }\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_applyDiscountIfEligible\"\n        }), \"(order);\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_processOrderDetails\"\n        }), \"(order);\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_applyDiscountIfEligible\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"Order order\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (order.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"total\"\n        }), \" > \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"applyDiscount\"\n        }), \"(order);\\n  }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"_processOrderDetails\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"Order order\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 주문 처리\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"깨끗한 코드 예시에서는 로직이 작고 관리하기 쉬운 메소드로 분해되어 있어 이해하고 디버그하기가 더 쉽습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"추가 예시: 변수\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ........잘못 작성된 코드......\"\n        }), \"\\n\\nint a;\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \" b;\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ........깔끔한 코드..........\"\n        }), \"\\n\\nint productCount;\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \" activeUserName;\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"함수:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ........잘못 작성된 코드.......\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"doSomething\"\n        }), \"();\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getSomething\"\n        }), \"();\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ........깔끔한 코드..........\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"updateProductCount\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ...\"\n        }), \"\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getUserName\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// ...\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"클래스:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"// ......잘못 작성된 코드....\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"class MyClass \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"// ........깔끔한 코드..........\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"class VideoList \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"class UserAccount \"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Flutter에서 깔끔한 코드를 사용하면 코드베이스가 유지 가능하고 가독성이 높고 확장 가능하며 쉽게 디버깅할 수 있습니다. 깔끔한 코드 원칙을 준수하면 애플리케이션의 전반적인 품질을 향상시켜 미래에 코드를 작업할 때 자신과 다른 사람들이 더 쉽게 작업할 수 있게 됩니다.\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-Whyshouldweusecleancodeinflutter_1.png\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 기사를 즐겁게 보셨기를 바라요! 제공된 정보를 감사하게 여기신다면, 'Buy Me A Coffee'로 저를 지원할 수 있어요! 여러분의 센스에 감사드릴 거예요!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}