{"pageProps":{"post":{"title":"TypeScript, Nodejs, 그리고 PostgreSQL과 함께 Sequelize를 사용하는 방법","description":"","date":"2024-05-20 22:18","slug":"2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL","content":"\n\n시작 가이드: TypeScript로 Sequelize 구성하기 \n\n모델, 연결 및 데이터베이스 연결을 정의하여 Sequelize를 TypeScript와 함께 설정하는 방법에 대해 알아보겠습니다.\n\n# 소개\n\n이 글에서는 Sequelize를 설정하여 TypeScript Node.js 및 Express를 연동하여 PostgreSQL 데이터베이스에 연결하고, 그 후에 조회용 샘플 모델을 만들어 보겠습니다.\n\nTypeScript, Node.js, Express.js 및 PostgreSQL을 함께 사용하면 견고한 백엔드 개발을 위한 강력한 조합을 제공합니다. Node.js를 위한 인기 있는 ORM인 Sequelize와 TypeScript의 정적 유형 지정 그리고 PostgreSQL의 신뢰성을 활용하여 효율적인 데이터 관리와 확장 가능성을 확보할 수 있습니다. 이 통합은 데이터의 모델링, 쿼리, 그리고 조작을 원활하게 하며 개발 경험을 향상시키면서 코드 무결성과 데이터베이스 무결성을 유지하는 데 도움이 됩니다.\n\n<div class=\"content-ad\"></div>\n\n새로운 실시간 Node.js 앱이나 서비스를 시작할 때 가장 먼저 고려해야 할 것은 어디서 시작해야 하는지, 어떤 프레임워크나 ORM을 사용해야 하는지, 그리고 그것이 성능에 어떻게 영향을 미칠지 입니다. 또한, SQL 또는 NoSQL 데이터베이스를 선택하는 것에 따라 이 질문이 달라질 수 있습니다.\n\n# 사전 준비\n\n이 글에서는 TypeScript와 Express를 사용하여 이미 만들어 놓은 Node.js 보일러플레이트 코드를 사용할 것입니다.\n\n우리는 sequelize, pg, pg-hstore이 npm 모듈을 사용하여 어플리케이션을 설정할 것이고, Jest를 사용하여 유닛 테스트 케이스도 추가했습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// 애플리케이션 복제하기\ngit clone https://github.com/santoshshinde2012/node-boilerplate.git\n\n// 새 디렉토리로 변경\ncd node-boilerplate\n\n// 모든 모듈 설치\nnpm install\n\n// 애플리케이션 시작\nnpm start\n```\n\n# 단계 1: PostgreSQL 설정 및 데이터베이스 생성\n\n아래 스크립트로 폴더 docker/postgresql에 Dockerfile.postgis 파일을 생성합니다.\n\n```js\nFROM postgres:latest\n\n# PostGIS 확장 기능 설치\nRUN apt-get update \\\n    && apt-get install -y postgis postgresql-12-postgis-3 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# 초기 쿼리를 실행하기 위해 init.sql에 쿼리를 작성할 수 있습니다\nCOPY init.sql /docker-entrypoint-initdb.d/\n\n# PostGIS 확장 기능 활성화\nRUN echo \"CREATE EXTENSION IF NOT EXISTS postgis;\" >> /docker-entrypoint-initdb.d/init.sql\n```\n\n<div class=\"content-ad\"></div>\n\n도커 Compose 파일을 만들어주세요. docker/postgresql 폴더에 아래 스크립트를 작성해주세요.\n\n```js\n# PostgreSQL을 위한 docker-compose.yml\n\nversion: '3.8'\n\nservices:\n  db:\n    build:\n      context: .\n      dockerfile: Dockerfile.postgis  # 커스텀 Dockerfile 사용\n    restart: always\n    environment:\n      POSTGRES_USER: user1\n      POSTGRES_PASSWORD: user1@123\n      POSTGRES_DB: database\n    healthcheck:\n      # 이 명령어는 데이터베이스가 준비되어 있는지 소스 db 서버에서 확인합니다.\n      test: [ \"CMD-SHELL\", \"pg_isready\" ]\n      interval: 5s\n      timeout: 5s\n      retries: 5\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - postgres_data_v:/var/lib/postgresql/data\nvolumes:\n  postgres_data_v:\n```\n\npackage.json 안에 Docker Compose 파일을 실행시키는 명령어를 추가해주세요.\n\n```js\n\"db:up\": \"docker-compose -f docker/postgresql/docker-compose.yml up\",\n\"db:down\": \"docker-compose -f docker/postgresql/docker-compose.yml down\"\n```\n\n<div class=\"content-ad\"></div>\n\nPostgresql을 실행하고 다음 명령어를 사용하여 데이터베이스를 생성하세요: npm run db:up.\n\n![image](/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_0.png)\n\n# 단계 2: Sequelize의 설치 및 구성\n\nSequelize는 npm (또는 yarn)을 통해 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nnpm install --save sequelize\nnpm install --save pg pg-hstore # Postgres\n```\n\n작업을 마치면 코드를 배치할 폴더 구조를 확인해야 합니다. 코드가 깨끗하고 가독성 있게 유지되도록 하기 위해 코드베이스를 여러 폴더로 나누었습니다. 데이터베이스 관련 부분은 database 폴더 아래에 위치해야 합니다.\n\n<img src=\"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_1.png\" />\n\nsrc/database/config 폴더의 index.ts 파일에 데이터베이스 연결을 정의하고, .env npm 모듈을 사용하여 환경 변수를 가져옵니다. 환경에 따른 로직은 필요에 따라 수정할 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n```js\nimport path from 'path';\nimport dotenv from 'dotenv';\n\ndotenv.config({\n    path: path.join(__dirname, '../../.env'),\n});\n\n타입 DbConnection = {\n    호스트: 문자열;\n    포트: 숫자;\n    사용자: 문자열;\n    비밀번호: 문자열;\n    데이터베이스: 문자열;\n    dbLogging: 부울;\n};\n\nconst connection: DbConnection = {\n    호스트: process.env.DB_HOST,\n    포트: Number(process.env.DB_PORT),\n    사용자: process.env.DB_USER,\n    비밀번호: process.env.DB_PASSWORD,\n    데이터베이스: process.env.DB_NAME,\n    dbLogging:\n        process.env.NODE_ENV === 'development' || process.env.LOG === 'true',\n};\n\nexport default connection;\n```\n\nsrc/database 폴더에 index.ts 파일을 생성하여 sequelize 연결을 만듭니다.\n\n```js\nimport { Dialect, Sequelize } from 'sequelize';\nimport connection from './config';\n\nconst { database, user, password, host, dbLogging } = connection;\n\nconst sequelizeConnection = new Sequelize(database, user, password, {\n    host,\n    logging: dbLogging,\n    dialect: 'postgres' as Dialect,\n});\n\nexport default sequelizeConnection;\n```\n\nsrc/App.ts 또는 서버 응용 프로그램의 진입 파일에 assertDatabaseConnection 메서드를 만들어 데이터베이스 확인을하는 메서드를 호출하세요.\n\n\n<div class=\"content-ad\"></div>\n\n```js\n개인 async assertDatabaseConnection(): Promise<void> {\n    try {\n     await database.authenticate();\n     await database.sync();\n     logger.info('연결이 성공적으로 설정되었습니다.');\n    } catch (error) {\n logger.error('데이터베이스에 연결할 수 없습니다:', error);\n    }\n}\n```\n\n# 단계 3: Sequelize를 사용하여 테이블(모델) 생성\n\nsrc/database/models 폴더에 모델을 정의하세요; 여기서는 샘플 모델인 Enquiry.ts를 생성할 것입니다.\n\n```js\nimport { DataTypes, Model, Optional, UUIDV4 } from 'sequelize';\nimport sequelize from '../index';\n\ninterface EnquiryAttributes {\n id: string;\n name: string;\n subject: string;\n body: string;\n email: string;\n country: string;\n}\n\ninterface EnquiryCreationAttributes\n extends Optional<EnquiryAttributes, 'id'> {}\n\nclass Enquiry\n extends Model<EnquiryAttributes, EnquiryCreationAttributes>\n implements EnquiryAttributes\n{\n public id!: string;\n public name!: string;\n public country!: string;\n public subject!: string;\n public body!: string;\n public email!: string;\n\n public readonly createdAt!: Date;\n public readonly updatedAt!: Date;\n}\n\nEnquiry.init(\n {\n  id: {\n   type: DataTypes.UUID,\n   defaultValue: UUIDV4,\n   primaryKey: true,\n  },\n  name: {\n   type: DataTypes.STRING(100),\n   allowNull: false,\n  },\n  country: {\n   type: DataTypes.STRING(100),\n   allowNull: false,\n  },\n  subject: {\n   type: DataTypes.STRING(200),\n   allowNull: false,\n  },\n  email: {\n   type: DataTypes.STRING(100),\n   allowNull: false,\n  },\n  body: {\n   type: DataTypes.STRING(400),\n   allowNull: false,\n  }\n },\n {\n  sequelize,\n  modelName: 'Enquiry',\n  tableName: 'Enquiry',\n  timestamps: true,\n },\n);\n\nexport { Enquiry, EnquiryAttributes, EnquiryCreationAttributes };\n```\n\n<div class=\"content-ad\"></div>\n\n```js\nimport { 데이터 유형, 모델, 선택적, UUIDV4 } from 'sequelize';\nimport sequelize from '../index';\n\n인터페이스 조회 속성 {\n id: string;\n 이름: string;\n 주제: string;\n 본문: string;\n 이메일: string;\n 국가: string;\n}\n\n인터페이스 EnquiryCreationAttributes 에 이어, EnquiryAttributes의 선택적 해제 {}\n\n클래스 Enquiry은 Model<EnquiryAttributes, EnquiryCreationAttributes>를 확장하며 EnquiryAttributes를 구현합니다 {\n 공공 id!: string;\n 공공 이름!: string;\n 공공 국가!: string;\n 공공 주제!: string;\n 공공 몸통!: string;\n 공공 이메일!: string;\n\n 공공 readonly createdAt!: Date;\n 공공 readonly updatedAt!: Date;\n}\n\nEnquiry.init(\n {\n  아이디: {\n   유형: 데이터 유형.UUID,\n   기본값: UUIDV4,\n   기본 키: 참,\n  },\n  이름: {\n   유형: 데이터 유형.STRING(100),\n   허용하지 않음: 거짓,\n  },\n  국가: {\n   유형: 데이터 유형.STRING(100),\n   허용하지 않음: 거짓,\n  },\n  주제: {\n   유형: 데이터 유형.STRING(200),\n   허용하지 않음: 거짓,\n  },\n  이메일: {\n   유형: 데이터 유형.STRING(100),\n   허용하지 않음: 거짓,\n  },\n  몸통: {\n   유형: 데이터 유형.STRING(400),\n   허용하지 않음: 거짓,\n  }\n },\n {\n  시퀄라이즈,\n  모델 이름: '조회',\n  테이블 이름: '조회',\n  타임 스탬프: 참,\n },\n);\n\n수출 { 조회, EnquiryAttributes, EnquiryCreationAttributes };\n```\n\n<img src=\"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_2.png\" />\n\n# 단계 4: 구성 요소에서 서비스 및 컨트롤러 설정\n\n- 구성 요소 구성 요소는 두 부분으로 나뉩니다: 컨트롤러 및 서비스 서비스는 해당 데이터베이스 모델과 통신하는 데 책임이 있습니다.\n- 라우트 — 컨트롤러 및 해당 레스트 엔드포인트의 등록 방법을 등록합니다.\n- 공통 서비스 —이 서비스는 여러 데이터베이스 모델 간의 일반 작업 수행에 책임이 있습니다.\n- 이를 구성 요소 서비스에 주입하고 구성 요소 서비스에서 컨트롤러에서 해당 메서드에 액세스할 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n```js\n// src/components/enquiry/EnquiryService.ts 파일을 생성하여 sequelize를 사용하여 생성된 모델의 데이터베이스 작업을 처리합니다.\n\nimport {\n Enquiry,\n EnquiryAttributes,\n EnquiryCreationAttributes,\n} from '../../database/models/Enquiry';\nimport logger from '../../lib/logger';\nimport ApiError from '../../abstractions/ApiError';\nimport { StatusCodes } from 'http-status-codes';\n\nexport class EnquiryService {\n\n async getAll(): Promise<EnquiryAttributes[]> {\n  try {\n   const enquiries = await Enquiry.findAll();\n   return enquiries;\n  } catch (error) {\n   logger.error(error);\n   throw error;\n  }\n }\n\n async getById(id: string | number): Promise<EnquiryAttributes> {\n  try {\n   const enquiry = await Enquiry.findByPk(id);\n   if (!enquiry) {\n    throw new ApiError('Enquiry not found', StatusCodes.NOT_FOUND);\n   }\n   return enquiry;\n  } catch (error) {\n   logger.error(error);\n   throw error;\n  }\n }\n\n async update(\n  id: string | number,\n  payload: Partial<EnquiryCreationAttributes>,\n ): Promise<EnquiryAttributes> {\n  try {\n   const enquiry = await Enquiry.findByPk(id);\n   if (!enquiry) {\n    throw new ApiError(\n     'Enquiry not found',\n     StatusCodes.NOT_FOUND,\n    );\n   }\n   const updatedEnquiry = await enquiry.update(payload);\n   return updatedEnquiry;\n  } catch (error) {\n   logger.error(error);\n   throw error;\n  }\n }\n\n async create(\n  payload: EnquiryCreationAttributes,\n ): Promise<EnquiryAttributes> {\n  try {\n   const enquiry = await Enquiry.create(payload);\n   return enquiry;\n  } catch (error) {\n   logger.error(error);\n   throw error;\n  }\n }\n\n async delete(id: string | number): Promise<boolean> {\n  try {\n   const deletedEnquiryCount = await Enquiry.destroy({\n    where: { id },\n   });\n\n   return !!deletedEnquiryCount;\n  } catch (error) {\n   logger.error(error);\n   throw error;\n  }\n }\n}\n```\n\n```js\n// src/components/enquiry/EnquiryController.ts 파일을 생성하여 REST API의 컨트롤러 부분을 처리합니다.\n\nimport { NextFunction, Request, Response, Router } from 'express';\nimport { ReasonPhrases, StatusCodes } from 'http-status-codes';\nimport BaseApi from '../BaseApi';\nimport { EnquiryService } from './EnquiryService';\nimport { EnquiryAttributes } from '../../database/models/Enquiry';\nimport ApiError from '../../abstractions/ApiError';\n\n/**\n * Enquiry controller\n */\nexport default class EnquiryController extends BaseApi {\n private enquiry: EnquiryService;\n public basePath: string = 'enquiries';\n\n constructor() {\n  super();\n  this.enquiry = new EnquiryService();\n }\n\n /**\n  *\n  */\n public routes(): RouteDefinition[] {\n  return [\n   { path: '/', method: 'get', handler: this.getEnquiries.bind(this) },\n   { path: '/:id', method: 'get', handler: this.getEnquiry.bind(this) },\n   { path: '/', method: 'post', handler: this.createEnquiry.bind(this) },\n   { path: '/:id', method: 'put', handler: this.updateEnquiry.bind(this) },\n   { path: '/:id', method: 'delete', handler: this.delete.bind(this) }\n  ];\n }\n\n /**\n  *\n  * @param req\n  * @param res\n  * @param next\n  */\n public async getEnquiries(\n  req: Request,\n  res: Response,\n  next: NextFunction,\n ): Promise<void> {\n  try {\n   const enquiries: EnquiryAttributes[] =\n    await this.enquiry.getAll();\n   res.locals.data = enquiries;\n   // call base class method\n   this.send(res);\n  } catch (err) {\n   next(err);\n  }\n }\n\n // 이하 생략\n}\n```\n\n<div class=\"content-ad\"></div>\n\n# 단계 5: 구성 요소를 위한 REST API 생성\n\n문의: 문의는 속성 집합을 가진 주요 엔터티입니다.\n\n- GET /v1/enquiries 모든 문의 목록을 가져옵니다.\n- POST /v1/enquiries 새로운 문의를 생성합니다.\n- GET /v1/enquiries/'id' 특정 문의의 세부 정보를 가져옵니다.\n- PUT /v1/enquiries/'id' 특정 문의의 세부 정보를 업데이트합니다.\n- DELETE /v1/enquiries/'id' 특정 문의를 삭제합니다.\n\n우리는 이전에 정의한 경로를 등록해야 합니다. 이를 위해 src/routes.ts에 항목을 만들어야 합니다.\n\n<div class=\"content-ad\"></div>\n\n아래 링크에서 전체 코드베이스를 찾을 수 있습니다. 초보자를 염두에 두고 설계된 이 저장소는 백엔드 프로젝트를 시작하는 데 튼튼한 출발점을 제공합니다. 단위 테스트 케이스가 포함된 잘 정리된 코드베이스로 깊게 파고들며 학습하고 문제 해결을 쉽게 할 수 있습니다. 게다가 GitHub Actions 워크플로가 통합되어 있어 테스트와 배포를 자동화할 수 있습니다. 학습을 시작하거나 첫 번째 실제 애플리케이션을 구축하려는 경우에도 유용합니다.\n\n읽어 주셔서 감사합니다. 이 블로그가 학습에 가치가 있다고 생각되면 의견을 공유하고 클랩(clap)을 눌러주세요.\n\n<div class=\"content-ad\"></div>\n\n# 친절한 언어로 🚀\n\nIn Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:\n\n- 작가를 claps하고 팔로우 해주세요 👏️\n- 팔로우하기: X | LinkedIn | YouTube | Discord | 뉴스레터\n- 다른 플랫폼 방문하기: Stackademic | CoFeed | Venture | Cubed\n- PlainEnglish.io에서 더 많은 콘텐츠를 만나보세요","ogImage":{"url":"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_0.png"},"coverImage":"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_0.png","tag":["Tech"],"readingTime":12},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    div: \"div\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"시작 가이드: TypeScript로 Sequelize 구성하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"모델, 연결 및 데이터베이스 연결을 정의하여 Sequelize를 TypeScript와 함께 설정하는 방법에 대해 알아보겠습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"소개\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 글에서는 Sequelize를 설정하여 TypeScript Node.js 및 Express를 연동하여 PostgreSQL 데이터베이스에 연결하고, 그 후에 조회용 샘플 모델을 만들어 보겠습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TypeScript, Node.js, Express.js 및 PostgreSQL을 함께 사용하면 견고한 백엔드 개발을 위한 강력한 조합을 제공합니다. Node.js를 위한 인기 있는 ORM인 Sequelize와 TypeScript의 정적 유형 지정 그리고 PostgreSQL의 신뢰성을 활용하여 효율적인 데이터 관리와 확장 가능성을 확보할 수 있습니다. 이 통합은 데이터의 모델링, 쿼리, 그리고 조작을 원활하게 하며 개발 경험을 향상시키면서 코드 무결성과 데이터베이스 무결성을 유지하는 데 도움이 됩니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"새로운 실시간 Node.js 앱이나 서비스를 시작할 때 가장 먼저 고려해야 할 것은 어디서 시작해야 하는지, 어떤 프레임워크나 ORM을 사용해야 하는지, 그리고 그것이 성능에 어떻게 영향을 미칠지 입니다. 또한, SQL 또는 NoSQL 데이터베이스를 선택하는 것에 따라 이 질문이 달라질 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"사전 준비\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 글에서는 TypeScript와 Express를 사용하여 이미 만들어 놓은 Node.js 보일러플레이트 코드를 사용할 것입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"우리는 sequelize, pg, pg-hstore이 npm 모듈을 사용하여 어플리케이션을 설정할 것이고, Jest를 사용하여 유닛 테스트 케이스도 추가했습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 애플리케이션 복제하기\"\n        }), \"\\ngit clone \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"https\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//github.com/santoshshinde2012/node-boilerplate.git\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 새 디렉토리로 변경\"\n        }), \"\\ncd node-boilerplate\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 모든 모듈 설치\"\n        }), \"\\nnpm install\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 애플리케이션 시작\"\n        }), \"\\nnpm start\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 1: PostgreSQL 설정 및 데이터베이스 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 스크립트로 폴더 docker/postgresql에 Dockerfile.postgis 파일을 생성합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"FROM\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"postgres\"\n        }), \":latest\\n\\n# \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"PostGIS\"\n        }), \" 확장 기능 설치\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"RUN\"\n        }), \" apt-get update \\\\\\n    && apt-get install -y postgis postgresql-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"12\"\n        }), \"-postgis-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \" \\\\\\n    && apt-get clean \\\\\\n    && rm -rf /\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \"/lib/apt/lists\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*\\n\\n# 초기 쿼리를 실행하기 위해 init.sql에 쿼리를 작성할 수 있습니다\\nCOPY init.sql /docker-entrypoint-initdb.d/\\n\\n# PostGIS 확장 기능 활성화\\nRUN echo \\\"CREATE EXTENSION IF NOT EXISTS postgis;\\\" >> /docker-entrypoint-initdb.d/init.sql\\n\"\n        })]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"도커 Compose 파일을 만들어주세요. docker/postgresql 폴더에 아래 스크립트를 작성해주세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"# \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"PostgreSQL\"\n        }), \"을 위한 docker-compose.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"yml\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"version\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'3.8'\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"services\"\n        }), \":\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"db\"\n        }), \":\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"build\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"context\"\n        }), \": .\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dockerfile\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Dockerfile\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"postgis\"\n        }), \"  # 커스텀 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Dockerfile\"\n        }), \" 사용\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"restart\"\n        }), \": always\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"environment\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"POSTGRES_USER\"\n        }), \": user1\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"POSTGRES_PASSWORD\"\n        }), \": user1@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"123\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"POSTGRES_DB\"\n        }), \": database\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"healthcheck\"\n        }), \":\\n      # 이 명령어는 데이터베이스가 준비되어 있는지 소스 db 서버에서 확인합니다.\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"test\"\n        }), \": [ \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"CMD-SHELL\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"pg_isready\\\"\"\n        }), \" ]\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"interval\"\n        }), \": 5s\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"timeout\"\n        }), \": 5s\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"retries\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"ports\"\n        }), \":\\n      - \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"5432:5432\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"volumes\"\n        }), \":\\n      - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"postgres_data_v\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/var/\"\n        }), \"lib/postgresql/data\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"volumes\"\n        }), \":\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"postgres_data_v\"\n        }), \":\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"package.json 안에 Docker Compose 파일을 실행시키는 명령어를 추가해주세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"db:up\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"docker-compose -f docker/postgresql/docker-compose.yml up\\\"\"\n        }), \",\\n\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"db:down\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"docker-compose -f docker/postgresql/docker-compose.yml down\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Postgresql을 실행하고 다음 명령어를 사용하여 데이터베이스를 생성하세요: npm run db\", _jsx(_components.div, {}), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_0.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 2: Sequelize의 설치 및 구성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sequelize는 npm (또는 yarn)을 통해 사용할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"npm install --save sequelize\\nnpm install --save pg pg-hstore # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Postgres\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"작업을 마치면 코드를 배치할 폴더 구조를 확인해야 합니다. 코드가 깨끗하고 가독성 있게 유지되도록 하기 위해 코드베이스를 여러 폴더로 나누었습니다. 데이터베이스 관련 부분은 database 폴더 아래에 위치해야 합니다.\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_1.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"src/database/config 폴더의 index.ts 파일에 데이터베이스 연결을 정의하고, .env npm 모듈을 사용하여 환경 변수를 가져옵니다. 환경에 따른 로직은 필요에 따라 수정할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" path \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'path'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" dotenv \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'dotenv'\"\n        }), \";\\n\\ndotenv.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"config\"\n        }), \"({\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"path\"\n        }), \": path.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"join\"\n        }), \"(__dirname, \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../../.env'\"\n        }), \"),\\n});\\n\\n타입 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DbConnection\"\n        }), \" = {\\n    호스트: 문자열;\\n    포트: 숫자;\\n    사용자: 문자열;\\n    비밀번호: 문자열;\\n    데이터베이스: 문자열;\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dbLogging\"\n        }), \": 부울;\\n};\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"connection\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DbConnection\"\n        }), \" = {\\n    호스트: process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"DB_HOST\"\n        }), \",\\n    포트: \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Number\"\n        }), \"(process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"DB_PORT\"\n        }), \"),\\n    사용자: process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"DB_USER\"\n        }), \",\\n    비밀번호: process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"DB_PASSWORD\"\n        }), \",\\n    데이터베이스: process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"DB_NAME\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dbLogging\"\n        }), \":\\n        process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"NODE_ENV\"\n        }), \" === \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'development'\"\n        }), \" || process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"env\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"LOG\"\n        }), \" === \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'true'\"\n        }), \",\\n};\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" connection;\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"src/database 폴더에 index.ts 파일을 생성하여 sequelize 연결을 만듭니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Dialect\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Sequelize\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'sequelize'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" connection \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./config'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" { database, user, password, host, dbLogging } = connection;\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" sequelizeConnection = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Sequelize\"\n        }), \"(database, user, password, {\\n    host,\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"logging\"\n        }), \": dbLogging,\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dialect\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'postgres'\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Dialect\"\n        }), \",\\n});\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" sequelizeConnection;\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"src/App.ts 또는 서버 응용 프로그램의 진입 파일에 assertDatabaseConnection 메서드를 만들어 데이터베이스 확인을하는 메서드를 호출하세요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"개인 \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"assertDatabaseConnection\"\n        }), \"(): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \"> {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n     \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" database.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"authenticate\"\n        }), \"();\\n     \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" database.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"sync\"\n        }), \"();\\n     logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"info\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'연결이 성공적으로 설정되었습니다.'\"\n        }), \");\\n    } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'데이터베이스에 연결할 수 없습니다:'\"\n        }), \", error);\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 3: Sequelize를 사용하여 테이블(모델) 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"src/database/models 폴더에 모델을 정의하세요; 여기서는 샘플 모델인 Enquiry.ts를 생성할 것입니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Model\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Optional\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UUIDV4\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'sequelize'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" sequelize \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../index'\"\n        }), \";\\n\\ninterface \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": string;\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": string;\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"subject\"\n        }), \": string;\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"body\"\n        }), \": string;\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": string;\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"country\"\n        }), \": string;\\n}\\n\\ninterface \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \"\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Optional\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'id'\"\n        }), \"> {}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \"\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_ inherited__\",\n          children: \"Model\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \">\\n implements \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"\\n{\\n public id!: string;\\n public name!: string;\\n public country!: string;\\n public subject!: string;\\n public body!: string;\\n public email!: string;\\n\\n public readonly createdAt!: \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \";\\n public readonly updatedAt!: \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \";\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"(\\n {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": {\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"UUID\"\n        }), \",\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"defaultValue\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UUIDV4\"\n        }), \",\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"primaryKey\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \",\\n  },\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": {\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \"),\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowNull\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n  },\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"country\"\n        }), \": {\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \"),\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowNull\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n  },\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"subject\"\n        }), \": {\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"200\"\n        }), \"),\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowNull\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n  },\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": {\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \"),\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowNull\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n  },\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"body\"\n        }), \": {\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DataTypes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"400\"\n        }), \"),\\n   \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allowNull\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n  }\\n },\\n {\\n  sequelize,\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"modelName\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'Enquiry'\"\n        }), \",\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"tableName\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'Enquiry'\"\n        }), \",\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"timestamps\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \",\\n },\\n);\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \" };\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { 데이터 유형, 모델, 선택적, \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UUIDV4\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'sequelize'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" sequelize \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../index'\"\n        }), \";\\n\\n인터페이스 조회 속성 {\\n \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": string;\\n 이름: string;\\n 주제: string;\\n 본문: string;\\n 이메일: string;\\n 국가: string;\\n}\\n\\n인터페이스 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \" 에 이어, \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"의 선택적 해제 {}\\n\\n클래스 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \"은 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Model\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \">를 확장하며 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"를 구현합니다 {\\n 공공 id!: string;\\n 공공 이름!: string;\\n 공공 국가!: string;\\n 공공 주제!: string;\\n 공공 몸통!: string;\\n 공공 이메일!: string;\\n\\n 공공 readonly createdAt!: \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \";\\n 공공 readonly updatedAt!: \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \";\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"(\\n {\\n  아이디: {\\n   유형: 데이터 유형.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"UUID\"\n        }), \",\\n   기본값: \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UUIDV4\"\n        }), \",\\n   기본 키: 참,\\n  },\\n  이름: {\\n   유형: 데이터 유형.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \"),\\n   허용하지 않음: 거짓,\\n  },\\n  국가: {\\n   유형: 데이터 유형.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \"),\\n   허용하지 않음: 거짓,\\n  },\\n  주제: {\\n   유형: 데이터 유형.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"200\"\n        }), \"),\\n   허용하지 않음: 거짓,\\n  },\\n  이메일: {\\n   유형: 데이터 유형.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \"),\\n   허용하지 않음: 거짓,\\n  },\\n  몸통: {\\n   유형: 데이터 유형.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"STRING\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"400\"\n        }), \"),\\n   허용하지 않음: 거짓,\\n  }\\n },\\n {\\n  시퀄라이즈,\\n  모델 이름: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'조회'\"\n        }), \",\\n  테이블 이름: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'조회'\"\n        }), \",\\n  타임 스탬프: 참,\\n },\\n);\\n\\n수출 { 조회, \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \" };\\n\"]\n      })\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-HowtoUseSequelizewithTypeScriptNodejsandPostgreSQL_2.png\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 4: 구성 요소에서 서비스 및 컨트롤러 설정\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"구성 요소 구성 요소는 두 부분으로 나뉩니다: 컨트롤러 및 서비스 서비스는 해당 데이터베이스 모델과 통신하는 데 책임이 있습니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"라우트 — 컨트롤러 및 해당 레스트 엔드포인트의 등록 방법을 등록합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"공통 서비스 —이 서비스는 여러 데이터베이스 모델 간의 일반 작업 수행에 책임이 있습니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"이를 구성 요소 서비스에 주입하고 구성 요소 서비스에서 컨트롤러에서 해당 메서드에 액세스할 수 있습니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// src/components/enquiry/EnquiryService.ts 파일을 생성하여 sequelize를 사용하여 생성된 모델의 데이터베이스 작업을 처리합니다.\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" {\\n \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \",\\n \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \",\\n \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \",\\n} \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../../database/models/Enquiry'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" logger \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../../lib/logger'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ApiError\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../../abstractions/ApiError'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"StatusCodes\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'http-status-codes'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryService\"\n        }), \" {\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getAll\"\n        }), \"(): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"[]> {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" enquiries = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"findAll\"\n        }), \"();\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" enquiries;\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n   logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(error);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" error;\\n  }\\n }\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getById\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": string | number): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"> {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" enquiry = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"findByPk\"\n        }), \"(id);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (!enquiry) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ApiError\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'Enquiry not found'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"StatusCodes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"NOT_FOUND\"\n        }), \");\\n   }\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" enquiry;\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n   logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(error);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" error;\\n  }\\n }\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"update\"\n        }), \"(\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": string | number,\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"payload\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Partial\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \">,\\n ): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"> {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" enquiry = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"findByPk\"\n        }), \"(id);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (!enquiry) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ApiError\"\n        }), \"(\\n     \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'Enquiry not found'\"\n        }), \",\\n     \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"StatusCodes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"NOT_FOUND\"\n        }), \",\\n    );\\n   }\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" updatedEnquiry = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" enquiry.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"update\"\n        }), \"(payload);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" updatedEnquiry;\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n   logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(error);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" error;\\n  }\\n }\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"payload\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryCreationAttributes\"\n        }), \",\\n ): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"> {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" enquiry = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"create\"\n        }), \"(payload);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" enquiry;\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n   logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(error);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" error;\\n  }\\n }\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"delete\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": string | number): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<boolean> {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" deletedEnquiryCount = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"destroy\"\n        }), \"({\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"where\"\n        }), \": { id },\\n   });\\n\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" !!deletedEnquiryCount;\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n   logger.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(error);\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"throw\"\n        }), \" error;\\n  }\\n }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// src/components/enquiry/EnquiryController.ts 파일을 생성하여 REST API의 컨트롤러 부분을 처리합니다.\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NextFunction\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Request\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Response\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Router\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'express'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReasonPhrases\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"StatusCodes\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'http-status-codes'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"BaseApi\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../BaseApi'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryService\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./EnquiryService'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../../database/models/Enquiry'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ApiError\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../../abstractions/ApiError'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/**\\n * Enquiry controller\\n */\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryController\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_ inherited__\",\n          children: \"BaseApi\"\n        }), \" {\\n private \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"enquiry\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryService\"\n        }), \";\\n public \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"basePath\"\n        }), \": string = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'enquiries'\"\n        }), \";\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"constructor\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"super\"\n        }), \"();\\n  \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"enquiry\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryService\"\n        }), \"();\\n }\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/**\\n  *\\n  */\"\n        }), \"\\n public \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"routes\"\n        }), \"(): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"RouteDefinition\"\n        }), \"[] {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" [\\n   { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"path\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'get'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"handler\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"getEnquiries\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"bind\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \") },\\n   { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"path\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/:id'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'get'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"handler\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"getEnquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"bind\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \") },\\n   { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"path\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'post'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"handler\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"createEnquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"bind\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \") },\\n   { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"path\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/:id'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'put'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"handler\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"updateEnquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"bind\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \") },\\n   { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"path\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/:id'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'delete'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"handler\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"delete\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"bind\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \") }\\n  ];\\n }\\n\\n \", _jsxs(_components.span, {\n          className: \"hljs-comment\",\n          children: [\"/**\\n  *\\n  * \", _jsx(_components.span, {\n            className: \"hljs-doctag\",\n            children: \"@param\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"req\"\n          }), \"\\n  * \", _jsx(_components.span, {\n            className: \"hljs-doctag\",\n            children: \"@param\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"res\"\n          }), \"\\n  * \", _jsx(_components.span, {\n            className: \"hljs-doctag\",\n            children: \"@param\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"next\"\n          }), \"\\n  */\"]\n        }), \"\\n public \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getEnquiries\"\n        }), \"(\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"req\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Request\"\n        }), \",\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"res\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Response\"\n        }), \",\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"next\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NextFunction\"\n        }), \",\\n ): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \"> {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n   \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"enquiries\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"EnquiryAttributes\"\n        }), \"[] =\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"enquiry\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getAll\"\n        }), \"();\\n   res.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"locals\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"data\"\n        }), \" = enquiries;\\n   \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// call base class method\"\n        }), \"\\n   \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"send\"\n        }), \"(res);\\n  } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (err) {\\n   \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"next\"\n        }), \"(err);\\n  }\\n }\\n\\n \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 이하 생략\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 5: 구성 요소를 위한 REST API 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"문의: 문의는 속성 집합을 가진 주요 엔터티입니다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"GET /v1/enquiries 모든 문의 목록을 가져옵니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"POST /v1/enquiries 새로운 문의를 생성합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"GET /v1/enquiries/'id' 특정 문의의 세부 정보를 가져옵니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"PUT /v1/enquiries/'id' 특정 문의의 세부 정보를 업데이트합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"DELETE /v1/enquiries/'id' 특정 문의를 삭제합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"우리는 이전에 정의한 경로를 등록해야 합니다. 이를 위해 src/routes.ts에 항목을 만들어야 합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 링크에서 전체 코드베이스를 찾을 수 있습니다. 초보자를 염두에 두고 설계된 이 저장소는 백엔드 프로젝트를 시작하는 데 튼튼한 출발점을 제공합니다. 단위 테스트 케이스가 포함된 잘 정리된 코드베이스로 깊게 파고들며 학습하고 문제 해결을 쉽게 할 수 있습니다. 게다가 GitHub Actions 워크플로가 통합되어 있어 테스트와 배포를 자동화할 수 있습니다. 학습을 시작하거나 첫 번째 실제 애플리케이션을 구축하려는 경우에도 유용합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"읽어 주셔서 감사합니다. 이 블로그가 학습에 가치가 있다고 생각되면 의견을 공유하고 클랩(clap)을 눌러주세요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"친절한 언어로 🚀\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"작가를 claps하고 팔로우 해주세요 👏️\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"팔로우하기: X | LinkedIn | YouTube | Discord | 뉴스레터\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"다른 플랫폼 방문하기: Stackademic | CoFeed | Venture | Cubed\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"PlainEnglish.io에서 더 많은 콘텐츠를 만나보세요\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}