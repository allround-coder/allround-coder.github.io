{"pageProps":{"post":{"title":"NinjaCart SDE 2 프론트엔드 인터뷰 경험","description":"","date":"2024-05-18 21:40","slug":"2024-05-18-NinjaCartSDE2frontendInterviewExp","content":"\n\n친구로부터 닌자카트 인재영입 담당자의 전화번호를 받았어요\n\n# 면접 1 — 기본 JS 이해\n\n1번 질문 — 디바운싱과 쓰로틀링에 관련된 질문입니다. 이 두 기술의 차이 및 실제 적용법을 말해주세요.\n\n2번 질문 — 프로미스와 setTimeout을 활용한 출력 관련 질문입니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nconsole.log(1);\n\nsetTimeout(function () {\n    console.log(2);\n}, 0);\n\nPromise.resolve()\n    .then(function () {\n        console.log(3);\n    })\n    .then(function () {\n        console.log(4);\n    });\n```\n\n3번 문제 — 클로저 및 setTimeout을 기반으로 한 출력 문제\n\n```js\nfor (var index = 1; index <= 3; index++) {\n    setTimeout(function () {\n        console.log('after ' + index + ' second(s):' + index);\n    }, index * 1000);\n}\n```\n\n4번 문제 — 중첩된 배열을 평평하게 만드는 함수를 작성하십시오.\n\n<div class=\"content-ad\"></div>\n\n5번 질문 — useEffect와 useMemo를 기반으로 함\n\n# 2차 인터뷰 — 머신 코딩 및 문제 해결\n\n1번 질문 — 사용자 정의 React 탭 컴포넌트 만들기\n해결책\n\n2번 질문 — 실패하면 프라미스를 다시 시도하는 함수 만들기 (질문 링크)\n\n<div class=\"content-ad\"></div>\n\n# 3차 면접 — 매니저 면접\n\n매니저는 하르야나 출신이셔서 저희는 그냥 평범한 대화를 나눴어요 (아버지의 친구와 얘기하는 느낌이었어요 😂)","ogImage":{"url":"/assets/img/2024-05-18-NinjaCartSDE2frontendInterviewExp_0.png"},"coverImage":"/assets/img/2024-05-18-NinjaCartSDE2frontendInterviewExp_0.png","tag":["Tech"],"readingTime":1},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"친구로부터 닌자카트 인재영입 담당자의 전화번호를 받았어요\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"면접 1 — 기본 JS 이해\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1번 질문 — 디바운싱과 쓰로틀링에 관련된 질문입니다. 이 두 기술의 차이 및 실제 적용법을 말해주세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"2번 질문 — 프로미스와 setTimeout을 활용한 출력 관련 질문입니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"setTimeout\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \");\\n}, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"resolve\"\n        }), \"()\\n    .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \");\\n    })\\n    .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \");\\n    });\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"3번 문제 — 클로저 및 setTimeout을 기반으로 한 출력 문제\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"for\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" index = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"; index <= \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"; index++) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"setTimeout\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'after '\"\n        }), \" + index + \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"' second(s):'\"\n        }), \" + index);\\n    }, index * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1000\"\n        }), \");\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"4번 문제 — 중첩된 배열을 평평하게 만드는 함수를 작성하십시오.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"5번 질문 — useEffect와 useMemo를 기반으로 함\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"2차 인터뷰 — 머신 코딩 및 문제 해결\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1번 질문 — 사용자 정의 React 탭 컴포넌트 만들기\\n해결책\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"2번 질문 — 실패하면 프라미스를 다시 시도하는 함수 만들기 (질문 링크)\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"3차 면접 — 매니저 면접\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"매니저는 하르야나 출신이셔서 저희는 그냥 평범한 대화를 나눴어요 (아버지의 친구와 얘기하는 느낌이었어요 😂)\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}