{"pageProps":{"post":{"title":"2024년에 React, Vite, Electron, 그리고 FastAPI로 Full-Stack 애플리케이션 만들기","description":"","date":"2024-05-12 22:52","slug":"2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024","content":"\n\n![이미지](/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_0.png)\n\n이 포괄적인 가이드에서는 React, Vite, Electron 및 FastAPI를 활용하여 간단한 풀스택 애플리케이션을 설정하는 방법을 안내해 드릴 거에요. 이 튜토리얼을 완료하면 단일 명령어로 시작되는 기능적인 애플리케이션을 보유하게 되며 로컬 개발 및 테스트에 적합할 거에요.\n\n# 개요\n\n이 애플리케이션 아키텍처는 아래와 같이 통합될 것입니다:\n\n\n\n- ReactJS: 사용자 인터페이스를 구축하기 위한 강력한 라이브러리.\n- Vite: 웹 프로젝트용 현대적이고 빠른 빌드 도구.\n- Electron: 웹 기술로 크로스 플랫폼 데스크톱 앱을 빌드하는 프레임워크.\n- FastAPI: Python으로 API를 빌드하기 위한 효율적이고 고성능 프레임워크.\n\n# 시스템 디자인 개요\n\n아래 다이어그램은 시스템 아키텍처를 설명합니다:\n\n![Architecture Diagram](/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_1.png)\n\n\n\n다음은 각 구성 요소 간 상호 작용을 보여주는 다이어그램입니다:\n\n- Electron Main Process: 라이프사이클 이벤트를 관리하고 브라우저 창을 생성합니다.\n- Electron Renderer Process: 브라우저 창 내에서 웹 프런트엔드를 실행합니다.\n- React Application: Vite를 통해 제공되는 UI를 제공합니다.\n- FastAPI Server: 백엔드 로직 및 데이터 관리를 처리합니다.\n\n# 애플리케이션 구조\n\n다음은 우리의 간단한 애플리케이션의 구조입니다:\n\n\n\n```js\nmy-project/\n│\n├── backend/\n│   ├── main.py            # FastAPI 애플리케이션\n│   └── requirements.txt   # Python 종속성\n│\n├── frontend/              # Vite 프로젝트 루트\n│   ├── main.jsx           # React 애플리케이션 진입점\n│   ├── App.jsx            # React 컴포넌트\n│   ├── App.module.css     # 스타일\n│   └── vite.config.js     # Vite 구성 설정\n│   └── package.json       # 프론트엔드 종속성을 위한 NPM 패키지 파일\n│\n├── electron/\n│   └── main.cjs           # Electron 메인 스크립트\n│   └── preload.cjs           # Electron 메인 스크립트\n│\n├── package.json           # Electron을 위한 루트 NPM 패키지 파일\n```\n\n# 환경 설정\n\n## 1. 가상 환경\n\n프로젝트 디렉토리에서 파이썬 가상 환경을 만들면 전역 파이썬 환경과 별도로 파이썬 종속성을 관리할 수 있습니다.\n\n\n\nWindows:\n\n\n```js\npython -m venv venv\n.\\venv\\Scripts\\activate\n```\n\nmacOS/Linux:\n\n```js\npython3 -m venv venv\nsource venv/bin/activate\n```\n\n\n\n# 2. 종속성 설치\n\n백엔드 디렉토리에서 requirements.txt 파일을 추가하세요:\n\n```js\nfastapi==0.68.1\nuvicorn==0.15.0\n```\n\nPython 종속성을 설치하세요:\n\n\n\n```js\npip install -r backend/requirements.txt\n```\n\n## 3. 프론트엔드 및 일렉트론 설정\n\nVite를 사용하여 프론트엔드를 초기화하고 일렉트론을 구성합니다.\n\nVite 프로젝트를 초기화합니다 (프론트엔드 디렉토리 내부):\n\n\n\n```js\nnpm create vite@latest --template frontend\n```\n\nNode 의존성 패키지 설치:\n\n```js\nnpm install\n```\n\n# 4. 백엔드 서버\n\n\n\nfrontend/App.jsx:\n\n```jsx\nimport React from 'react';\n\nfunction App() {\n    return (\n        <div>\n            <h1>Welcome to the React Front-end!</h1>\n            <p>Your data:</p>\n            <table>\n                <tr>\n                    <th>Message</th>\n                </tr>\n                <tr>\n                    <td>Hello from FastAPI</td>\n                </tr>\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n```  \n\n\n\n```js\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./App.module.css\"; // CSS 모듈 가져오기\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/data\");\n        const jsonData = await response.json();\n        setData(jsonData.message);\n      } catch (error) {\n        console.error(\"데이터를 불러오는 도중 오류가 발생했습니다:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <div>{data || \"로딩 중...\"}</div>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n스타일 추가:\nfrontend/App.module.css:\n\n```css\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n  }\n  \n  .content {\n    text-align: center;\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n```\n\nfrontend/main.jsx:```\n\n\n\n\n```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App.jsx\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n# 6. 일렉트론 구성\n\nelectron/main.cjs:\n\n```js\nconst { app, BrowserWindow } = require('electron');\nconst path = require('path');\n\nfunction createWindow() {\n    const mainWindow = new BrowserWindow({\n        width: 800,\n        height: 600,\n        webPreferences: {\n            preload: path.join(__dirname, 'preload.cjs'),\n            contextIsolation: true, // 보안을 위해 중요함\n            enableRemoteModule: false, // 보안 상 이유로 원격 모듈 비활성화\n            nodeIntegration: false // 보안 상 이유로 nodeIntegration 비활성화\n        }\n    });\n\n    // 로컬 웹 서버 URL 로드\n    mainWindow.loadURL('http://localhost:5173');\n\n}\n\napp.whenReady().then(createWindow);\n\napp.on('window-all-closed', () => {\n    if (process.platform !== 'darwin') {\n        app.quit();\n    }\n});\n```\n\n\n\nelectron/preload.cjs:\n\n```js\nconst { contextBridge, ipcRenderer } = require('electron');\n\n// 렌더러 프로세스에 노출할 안전한 API\ncontextBridge.exposeInMainWorld('api', {\n    send: (channel, data) => {\n        // 렌더러에서 메인 프로세스로 데이터를 보내기 위한 채널 화이트리스트\n        const validChannels = ['toMain'];\n        if (validChannels.includes(channel)) {\n            ipcRenderer.send(channel, data);\n        }\n    },\n    receive: (channel, func) => {\n        // 메인에서 렌더러 프로세스로 데이터를 수신하기 위한 채널 화이트리스트\n        const validChannels = ['fromMain'];\n        if (validChannels.includes(channel)) {\n            // 새 리스너를 추가하기 전에 채널에서 모든 리스너를 제거\n            // 이렇게 하면 여러 리스너가 등록되는 것을 방지\n            ipcRenderer.removeAllListeners(channel);\n            ipcRenderer.on(channel, (event, ...args) => func(...args));\n        }\n    }\n});\n```\n\n# 7. 통합 시작 명령\n\npackage.json을 업데이트하여 모든 서비스를 하나의 명령어로 시작하세요.\n\n\n\n```json\n{\n  \"name\": \"frontend\",\n  \"private\": true,\n  \"version\": \"0.0.1\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"concurrently \\\"npm run start-backend\\\" \\\"npm run start-frontend\\\" \\\"npm run start-electron\\\"\",\n    \"start-backend\": \"cd backend && uvicorn main:app --reload --host localhost --port 8000\",\n    \"start-frontend\": \"cd frontend && vite\",\n    \"start-electron\": \"electron electron/main.cjs\"\n  },\n  \"devDependencies\": {\n    \"vite\": \"^5.2.0\",\n    \"concurrently\": \"^7.0.0\"\n  }\n}\n```\n\n# 응용 프로그램 실행 방법\n\n응용프로그램을 실행하려면:\n\n```js\nnpm start\n```\n\n\n\n아래 명령어로 백엔드, 프론트엔드 및 일렉트론을 동시에 시작하여 즉시 애플리케이션을 확인할 수 있습니다.\n\n성공적인 터미널 출력은 다음과 같아야 합니다:\n\n![이미지](/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_2.png)\n\n# 결과\n\n\n\nBrowser:\n\n![Browser screenshot](/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_3.png)\n\nMacOS:\n\n![MacOS screenshot](/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_4.png)\n\n\n\nWindows:\n\n![Windows](/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_5.png)\n\n## 결론\n\n이 안내서는 최신 기술을 활용하여 개발 및 확장 가능한 제품 배포 모델에 이상적인 완전한 스택 애플리케이션을 구축하기 위한 간단한 로드맵을 제시합니다. 이 프레임워크는 소프트웨어 아키텍처의 최상의 실천 방법을 준수하며, 요소의 느슨한 결합과 손쉬운 유지 관리를 촉진합니다.\n\n\n\n여기서 전체 코드에 액세스하세요\n\n질문이 있으시면 언제든지 물어보세요.","ogImage":{"url":"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_0.png"},"coverImage":"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_0.png","tag":["Tech"],"readingTime":7},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_0.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 포괄적인 가이드에서는 React, Vite, Electron 및 FastAPI를 활용하여 간단한 풀스택 애플리케이션을 설정하는 방법을 안내해 드릴 거에요. 이 튜토리얼을 완료하면 단일 명령어로 시작되는 기능적인 애플리케이션을 보유하게 되며 로컬 개발 및 테스트에 적합할 거에요.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"개요\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 애플리케이션 아키텍처는 아래와 같이 통합될 것입니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ReactJS: 사용자 인터페이스를 구축하기 위한 강력한 라이브러리.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Vite: 웹 프로젝트용 현대적이고 빠른 빌드 도구.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Electron: 웹 기술로 크로스 플랫폼 데스크톱 앱을 빌드하는 프레임워크.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"FastAPI: Python으로 API를 빌드하기 위한 효율적이고 고성능 프레임워크.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"시스템 디자인 개요\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 다이어그램은 시스템 아키텍처를 설명합니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_1.png\",\n        alt: \"Architecture Diagram\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음은 각 구성 요소 간 상호 작용을 보여주는 다이어그램입니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Electron Main Process: 라이프사이클 이벤트를 관리하고 브라우저 창을 생성합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Electron Renderer Process: 브라우저 창 내에서 웹 프런트엔드를 실행합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"React Application: Vite를 통해 제공되는 UI를 제공합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"FastAPI Server: 백엔드 로직 및 데이터 관리를 처리합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"애플리케이션 구조\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음은 우리의 간단한 애플리케이션의 구조입니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"my-project/\\n│\\n├── backend/\\n│   ├── main.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"py\"\n        }), \"            # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FastAPI\"\n        }), \" 애플리케이션\\n│   └── requirements.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"txt\"\n        }), \"   # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Python\"\n        }), \" 종속성\\n│\\n├── frontend/              # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Vite\"\n        }), \" 프로젝트 루트\\n│   ├── main.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"jsx\"\n        }), \"           # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \" 애플리케이션 진입점\\n│   ├── \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"jsx\"\n        }), \"            # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \" 컴포넌트\\n│   ├── \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"module\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"css\"\n        }), \"     # 스타일\\n│   └── vite.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"config\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"js\"\n        }), \"     # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Vite\"\n        }), \" 구성 설정\\n│   └── package.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"json\"\n        }), \"       # 프론트엔드 종속성을 위한 \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"NPM\"\n        }), \" 패키지 파일\\n│\\n├── electron/\\n│   └── main.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cjs\"\n        }), \"           # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Electron\"\n        }), \" 메인 스크립트\\n│   └── preload.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cjs\"\n        }), \"           # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Electron\"\n        }), \" 메인 스크립트\\n│\\n├── package.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"json\"\n        }), \"           # \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Electron\"\n        }), \"을 위한 루트 \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"NPM\"\n        }), \" 패키지 파일\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"환경 설정\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"1. 가상 환경\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"프로젝트 디렉토리에서 파이썬 가상 환경을 만들면 전역 파이썬 환경과 별도로 파이썬 종속성을 관리할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Windows:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"python -m venv venv\\n.\\\\venv\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Scripts\"\n        }), \"\\\\activate\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"macOS/Linux:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"python3 -m venv venv\\nsource venv/bin/activate\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"2. 종속성 설치\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"백엔드 디렉토리에서 requirements.txt 파일을 추가하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"fastapi==\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.68\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".1\"\n        }), \"\\nuvicorn==\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.15\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Python 종속성을 설치하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"pip install -r backend/requirements.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"txt\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"3. 프론트엔드 및 일렉트론 설정\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vite를 사용하여 프론트엔드를 초기화하고 일렉트론을 구성합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vite 프로젝트를 초기화합니다 (프론트엔드 디렉토리 내부):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm create vite@latest --template frontend\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Node 의존성 패키지 설치:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"4. 백엔드 서버\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"frontend/App.jsx:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-jsx\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"App\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n        \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"Welcome to the React Front-end!\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"Your data:\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"table\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \">\"]\n          }), \"Message\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"Hello from FastAPI\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"table\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n    );\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { useEffect, useState } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" styles \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"./App.module.css\\\"\"\n        }), \"; \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// CSS 모듈 가져오기\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"App\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [data, setData] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useEffect\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fetchData\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" response = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fetch\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"http://localhost:8000/data\\\"\"\n        }), \");\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" jsonData = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" response.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"json\"\n        }), \"();\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setData\"\n        }), \"(jsonData.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"message\"\n        }), \");\\n      } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (error) {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"데이터를 불러오는 도중 오류가 발생했습니다:\\\"\"\n        }), \", error);\\n      }\\n    };\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fetchData\"\n        }), \"();\\n  }, []);\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"{data || \\\"로딩 중...\\\"}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"스타일 추가:\\nfrontend/App.module.css:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".container\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"display\"\n        }), \": flex;\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"justify-content\"\n        }), \": center;\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"align-items\"\n        }), \": center;\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"height\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100vh\"\n        }), \";\\n  }\\n  \\n  \", _jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".content\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"text-align\"\n        }), \": center;\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"font-family\"\n        }), \": Arial, sans-serif;\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"background-color\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"#f0f0f0\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"padding\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20px\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"border-radius\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8px\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-attribute\",\n          children: \"box-shadow\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4px\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8px\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"rgba\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.1\"\n        }), \");\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"frontend/main.jsx:```\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactDOM\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react-dom/client\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"./App.jsx\\\"\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactDOM\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createRoot\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getElementById\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"root\\\"\"\n        }), \")).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"render\"\n        }), \"(\\n  \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"React.StrictMode\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"App\"\n            }), \" />\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"React.StrictMode\"\n            }), \">\"]\n          })]\n        }), \"\\n);\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"6. 일렉트론 구성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"electron/main.cjs:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" { app, \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"BrowserWindow\"\n        }), \" } = \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"require\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'electron'\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" path = \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"require\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'path'\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createWindow\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" mainWindow = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"BrowserWindow\"\n        }), \"({\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"width\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"800\"\n        }), \",\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"height\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"600\"\n        }), \",\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"webPreferences\"\n        }), \": {\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"preload\"\n        }), \": path.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"join\"\n        }), \"(__dirname, \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'preload.cjs'\"\n        }), \"),\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"contextIsolation\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 보안을 위해 중요함\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"enableRemoteModule\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 보안 상 이유로 원격 모듈 비활성화\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"nodeIntegration\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 보안 상 이유로 nodeIntegration 비활성화\"\n        }), \"\\n        }\\n    });\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 로컬 웹 서버 URL 로드\"\n        }), \"\\n    mainWindow.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"loadURL\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'http://localhost:5173'\"\n        }), \");\\n\\n}\\n\\napp.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"whenReady\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(createWindow);\\n\\napp.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"on\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'window-all-closed'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (process.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"platform\"\n        }), \" !== \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'darwin'\"\n        }), \") {\\n        app.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"quit\"\n        }), \"();\\n    }\\n});\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"electron/preload.cjs:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" { contextBridge, ipcRenderer } = \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"require\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'electron'\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 렌더러 프로세스에 노출할 안전한 API\"\n        }), \"\\ncontextBridge.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"exposeInMainWorld\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'api'\"\n        }), \", {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"send\"\n        }), \": \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"channel, data\"\n          }), \") =>\"]\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 렌더러에서 메인 프로세스로 데이터를 보내기 위한 채널 화이트리스트\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" validChannels = [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'toMain'\"\n        }), \"];\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (validChannels.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"includes\"\n        }), \"(channel)) {\\n            ipcRenderer.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"send\"\n        }), \"(channel, data);\\n        }\\n    },\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"receive\"\n        }), \": \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"channel, func\"\n          }), \") =>\"]\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 메인에서 렌더러 프로세스로 데이터를 수신하기 위한 채널 화이트리스트\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" validChannels = [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'fromMain'\"\n        }), \"];\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (validChannels.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"includes\"\n        }), \"(channel)) {\\n            \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 새 리스너를 추가하기 전에 채널에서 모든 리스너를 제거\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 이렇게 하면 여러 리스너가 등록되는 것을 방지\"\n        }), \"\\n            ipcRenderer.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeAllListeners\"\n        }), \"(channel);\\n            ipcRenderer.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"on\"\n        }), \"(channel, \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"event, ...args\"\n          }), \") =>\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"func\"\n        }), \"(...args));\\n        }\\n    }\\n});\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"7. 통합 시작 명령\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"package.json을 업데이트하여 모든 서비스를 하나의 명령어로 시작하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"frontend\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"private\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"true\"\n          })\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"version\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0.0.1\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"type\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"module\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"scripts\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"start\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"concurrently \\\\\\\"npm run start-backend\\\\\\\" \\\\\\\"npm run start-frontend\\\\\\\" \\\\\\\"npm run start-electron\\\\\\\"\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"start-backend\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"cd backend && uvicorn main:app --reload --host localhost --port 8000\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"start-frontend\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"cd frontend && vite\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"start-electron\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"electron electron/main.cjs\\\"\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"devDependencies\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"vite\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^5.2.0\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"concurrently\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^7.0.0\\\"\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"응용 프로그램 실행 방법\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"응용프로그램을 실행하려면:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm start\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 명령어로 백엔드, 프론트엔드 및 일렉트론을 동시에 시작하여 즉시 애플리케이션을 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"성공적인 터미널 출력은 다음과 같아야 합니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_2.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"결과\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Browser:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_3.png\",\n        alt: \"Browser screenshot\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MacOS:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_4.png\",\n        alt: \"MacOS screenshot\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Windows:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingaFull-StackApplicationwithReactViteElectronandFastAPIin2024_5.png\",\n        alt: \"Windows\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 안내서는 최신 기술을 활용하여 개발 및 확장 가능한 제품 배포 모델에 이상적인 완전한 스택 애플리케이션을 구축하기 위한 간단한 로드맵을 제시합니다. 이 프레임워크는 소프트웨어 아키텍처의 최상의 실천 방법을 준수하며, 요소의 느슨한 결합과 손쉬운 유지 관리를 촉진합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"여기서 전체 코드에 액세스하세요\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"질문이 있으시면 언제든지 물어보세요.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}