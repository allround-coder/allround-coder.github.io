{"pageProps":{"post":{"title":"Vercel에 Nodejs 백엔드를 배포하는 방법 단계별 가이드","description":"","date":"2024-06-20 04:36","slug":"2024-06-20-HowtoDeployYourNodejsBackendonVercelAStep-by-StepGuide","content":"\n\n<img src=\"/assets/img/2024-06-20-HowtoDeployYourNodejsBackendonVercelAStep-by-StepGuide_0.png\" />\n\nVercel에 Node.js 백엔드를 배포하는 것은 업무를 간편화하면서 애플리케이션을 웹상에서 작동시킬 수 있는 프로세스입니다. 이 수정된 가이드에서는 가장 최신 방법을 사용하여 백엔드를 배포하는 방법을 안내해 드리겠습니다. 시작해 봅시다.\n\n# 1. Vercel 계정 생성\n\n먼저, vercel.com에서 Vercel 계정을 만들어주세요. GitHub, GitLab 또는 Bitbucket 중 선호하는 인증 방법을 선택할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 2. 간단한 Express API 만들기\n\n로컬 머신에 Node.js와 NPM이 설치되어 있는지 확인해주세요. 만약 없다면, https://nodejs.org/ 에서 다운로드할 수 있습니다.\n\n먼저, 새로운 프로젝트용 디렉토리를 만들고 해당 디렉토리로 이동한 후, 새로운 Node.js 프로젝트를 초기화하세요:\n\n```js\nmkdir my-express-api\ncd my-express-api\nnpm init -y\n```\n\n<div class=\"content-ad\"></div>\n\nExpress를 설치하고 index.js 파일을 만드세요:\n\n```js\nnpm install express touch index.js\n```\n\n선호하는 코드 편집기에서 index.js를 열고 기본 Express API를 만들기 위한 다음 코드를 추가하세요:\n\n```js\nconst express = require(\"express\");\nconst app = express();\napp.get(\"/\", (req, res) => {\n  res.send(\"Express on Vercel\");\n});\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`서버가 포트 ${PORT}에서 실행 중입니다`);\n});\n```\n\n<div class=\"content-ad\"></div>\n\n# 3. Express API 내보내기\n\n원하는 위치에 있는 index.js 파일을 수정하여 Express 앱을 내보냅니다:\n\n```js\n// ... (이전 코드) module.exports = app; // Express 앱 내보내기\n```\n\n프로젝트 디렉토리에 vercel.json 파일을 생성하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\ntouch vercel.json\n```\n\nvercel.json 파일 내용:\n\n```js\n{\n  \"version\": 2,\n  \"builds\": [\n    {\n      \"src\": \"index.js\",\n      \"use\": \"@vercel/node\"\n    }\n  ],\n  \"routes\": [\n    {\n      \"src\": \"/(.*)\",\n      \"dest\": \"index.js\"\n    }\n  ]\n}\n```\n\n# 5. Express API 배포하기\n\n<div class=\"content-ad\"></div>\n\n깃 레포지토리를 초기화하고 코드를 커밋한 후에 해당 코드를 소스 레포지토리에 푸시하세요. 이 레포지토리는 GitHub, GitLab 또는 다른 플랫폼에 있을 수 있습니다.\n\n배포가 완료되면 제공된 Vercel URL에서 API에 액세스하여 서비스가 제대로 작동하는지 확인해보세요. 예를 들면 your-app-name.vercel.app와 같이 접속할 수 있습니다.\n\n축하합니다! 이제 Node.js 백엔드가 서버리스 함수로 성공적으로 Vercel에 배포되었습니다. 프로젝트 구조와 요구사항에 맞게 가이드를 수정하여 원활한 배포 경험을 만들어보세요.\n\n원문은 https://kkupgrader.eu.org에서 확인할 수 있습니다.","ogImage":{"url":"/assets/img/2024-06-20-HowtoDeployYourNodejsBackendonVercelAStep-by-StepGuide_0.png"},"coverImage":"/assets/img/2024-06-20-HowtoDeployYourNodejsBackendonVercelAStep-by-StepGuide_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-06-20-HowtoDeployYourNodejsBackendonVercelAStep-by-StepGuide_0.png\">\n<p>Vercel에 Node.js 백엔드를 배포하는 것은 업무를 간편화하면서 애플리케이션을 웹상에서 작동시킬 수 있는 프로세스입니다. 이 수정된 가이드에서는 가장 최신 방법을 사용하여 백엔드를 배포하는 방법을 안내해 드리겠습니다. 시작해 봅시다.</p>\n<h1>1. Vercel 계정 생성</h1>\n<p>먼저, vercel.com에서 Vercel 계정을 만들어주세요. GitHub, GitLab 또는 Bitbucket 중 선호하는 인증 방법을 선택할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<h1>2. 간단한 Express API 만들기</h1>\n<p>로컬 머신에 Node.js와 NPM이 설치되어 있는지 확인해주세요. 만약 없다면, <a href=\"https://nodejs.org/\" rel=\"nofollow\" target=\"_blank\">https://nodejs.org/</a> 에서 다운로드할 수 있습니다.</p>\n<p>먼저, 새로운 프로젝트용 디렉토리를 만들고 해당 디렉토리로 이동한 후, 새로운 Node.js 프로젝트를 초기화하세요:</p>\n<pre><code class=\"hljs language-js\">mkdir my-express-api\ncd my-express-api\nnpm init -y\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>Express를 설치하고 index.js 파일을 만드세요:</p>\n<pre><code class=\"hljs language-js\">npm install express touch index.<span class=\"hljs-property\">js</span>\n</code></pre>\n<p>선호하는 코드 편집기에서 index.js를 열고 기본 Express API를 만들기 위한 다음 코드를 추가하세요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"express\"</span>);\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">express</span>();\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =></span> {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">\"Express on Vercel\"</span>);\n});\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">PORT</span> = process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PORT</span> || <span class=\"hljs-number\">5000</span>;\napp.<span class=\"hljs-title function_\">listen</span>(<span class=\"hljs-variable constant_\">PORT</span>, <span class=\"hljs-function\">() =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`서버가 포트 <span class=\"hljs-subst\">${PORT}</span>에서 실행 중입니다`</span>);\n});\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>3. Express API 내보내기</h1>\n<p>원하는 위치에 있는 index.js 파일을 수정하여 Express 앱을 내보냅니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// ... (이전 코드) module.exports = app; // Express 앱 내보내기</span>\n</code></pre>\n<p>프로젝트 디렉토리에 vercel.json 파일을 생성하세요.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\">touch vercel.<span class=\"hljs-property\">json</span>\n</code></pre>\n<p>vercel.json 파일 내용:</p>\n<pre><code class=\"hljs language-js\">{\n  <span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-string\">\"builds\"</span>: [\n    {\n      <span class=\"hljs-string\">\"src\"</span>: <span class=\"hljs-string\">\"index.js\"</span>,\n      <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"@vercel/node\"</span>\n    }\n  ],\n  <span class=\"hljs-string\">\"routes\"</span>: [\n    {\n      <span class=\"hljs-string\">\"src\"</span>: <span class=\"hljs-string\">\"/(.*)\"</span>,\n      <span class=\"hljs-string\">\"dest\"</span>: <span class=\"hljs-string\">\"index.js\"</span>\n    }\n  ]\n}\n</code></pre>\n<h1>5. Express API 배포하기</h1>\n<div class=\"content-ad\"></div>\n<p>깃 레포지토리를 초기화하고 코드를 커밋한 후에 해당 코드를 소스 레포지토리에 푸시하세요. 이 레포지토리는 GitHub, GitLab 또는 다른 플랫폼에 있을 수 있습니다.</p>\n<p>배포가 완료되면 제공된 Vercel URL에서 API에 액세스하여 서비스가 제대로 작동하는지 확인해보세요. 예를 들면 your-app-name.vercel.app와 같이 접속할 수 있습니다.</p>\n<p>축하합니다! 이제 Node.js 백엔드가 서버리스 함수로 성공적으로 Vercel에 배포되었습니다. 프로젝트 구조와 요구사항에 맞게 가이드를 수정하여 원활한 배포 경험을 만들어보세요.</p>\n<p>원문은 <a href=\"https://kkupgrader.eu.org%EC%97%90%EC%84%9C\" rel=\"nofollow\" target=\"_blank\">https://kkupgrader.eu.org에서</a> 확인할 수 있습니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}