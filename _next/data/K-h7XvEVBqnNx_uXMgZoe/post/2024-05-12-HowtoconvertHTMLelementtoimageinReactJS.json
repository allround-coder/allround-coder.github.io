{"pageProps":{"post":{"title":"React JS에서 HTML 요소를 이미지로 변환하는 방법","description":"","date":"2024-05-12 22:26","slug":"2024-05-12-HowtoconvertHTMLelementtoimageinReactJS","content":"\n\n\n<img src=\"/assets/img/2024-05-12-HowtoconvertHTMLelementtoimageinReactJS_0.png\" />\n\nHTML을 이미지로 변환하는 것은 웹 응용 프로그램에서 유용한 기능일 수 있습니다. React에서 이 작업을 수행하는 여러 가지 방법이 있지만, 가장 일반적인 방법 중 하나는 서드파티 라이브러리를 사용하는 것입니다. 이 글에서는 React에서 html-to-image 모듈을 사용하여 HTML을 이미지로 변환하는 방법을 살펴보겠습니다.\n\n# 요구 사항\n\n- html-to-image\n\n\n\n<b>단계 1: html-to-image 설치하기</b>\n\nhtml-to-image 모듈을 사용하려면 먼저 설치해야 합니다. React 프로젝트에서 다음 명령을 실행하여 이 작업을 수행할 수 있습니다.\n\n```js\nnpm install html-to-image\n```\n\n<b>단계 2: 라이브러리 가져오기</b>\n\n\n\n라이브러리를 설치한 후에는 React 컴포넌트로 가져와야 합니다. 파일 상단에 다음과 같은 import 문을 포함하여 이 작업을 할 수 있습니다.\n\n```js\nimport { toPng } from 'html-to-image';\n```\n\n3단계: HTML 요소에 대한 참조 추가\n\n변환하려는 HTML을 이미지로 지정하기 위해 HTML 요소를 명시해야 합니다. useRef 훅을 사용하여 이 작업을 할 수 있습니다. 다음과 같은 코드를 추가하여 HTML 요소에 대한 참조를 만들어야 합니다.\n\n\n\n```js\nconst elementRef = useRef(null);\n```\n\n그런 다음 변환하려는 HTML 요소에 ref 속성을 추가해야 합니다. 예를 들어:\n\n```js\n<table\n        ref={elementRef}\n        style={{\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          borderCollapse: \"collapse\",\n          width: \"50%\",\n          margin: \"0 auto\",\n        }}\n      >\n        <tr>\n          <th\n            style={{\n              backgroundColor: \"#04AA6D\",\n              padding: \"12px 8px\",\n              textAlign: \"left\",\n              border: \"1px solid #ddd\",\n            }}\n          >\n            회사\n          </th>\n          <th\n            style={{\n              backgroundColor: \"#04AA6D\",\n              padding: \"12px 8px\",\n              textAlign: \"left\",\n              border: \"1px solid #ddd\",\n            }}\n          >\n            연락처\n          </th>\n          <th\n            style={{\n              backgroundColor: \"#04AA6D\",\n              padding: \"12px 8px\",\n              textAlign: \"left\",\n              border: \"1px solid #ddd\",\n            }}\n          >\n            국가\n          </th>\n        </tr>\n        <tr>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            Alfreds Futterkiste\n          </td>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            Maria Anders\n          </td>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            독일\n          </td>\n        </tr>\n        <tr>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            Berglunds snabbköp\n          </td>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            Christina Berglund\n          </td>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            스웨덴\n          </td>\n        </tr>\n        <tr>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            Centro comercial Moctezuma\n          </td>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            Francisco Chang\n          </td>\n          <td\n            style={{\n              padding: \"8px\",\n              border: \"1px solid #ddd\",\n              textAlign: \"left\",\n            }}\n          >\n            멕시코\n          </td>\n        </tr>\n      </table>\n```\n\n참고: 스타일이 포함된 이미지를 다운로드하려면 HTML에 인라인 스타일을 포함해야 합니다.\n```\n\n\n\n단계 4: HTML을 이미지로 변환하기\n\n이제 우리는 HTML 요소에 참조를 추가했으니, htmlToImage 라이브러리를 사용하여 이미지로 변환할 수 있습니다. 다음 코드를 추가하여 이 작업을 수행할 수 있습니다:\n\n```js\nconst htmlToImageConvert = () => {\n  toPng(elementRef.current, { cacheBust: false })\n    .then((dataUrl) => {\n      const link = document.createElement(\"a\");\n      link.download = \"my-image-name.png\";\n      link.href = dataUrl;\n      link.click();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n```\n\nhtmlToImageConvert 함수는 HTML을 이미지로 변환하고 싶을 때 트리거됩니다. 이 함수는 html-to-image 패키지의 toPng 메서드를 사용하여 HTML 요소를 PNG 이미지로 변환합니다.\n\n\n\n5단계: 변환을 시작할 버튼 추가하기\n\n마지막으로, 변환을 시작할 버튼을 React 컴포넌트에 추가해야 합니다. 다음 코드를 추가하여 이 작업을 수행할 수 있습니다.\n\n```js\n<button onClick={htmlToImageConvert}>이미지 다운로드</button>\n```\n\n문의 사항이 있으시면 LinkedIn을 통해 연락해 주세요.\n\n\n\n아래에서 GitHub 저장소 샘플과 codesandbox 데모를 찾아볼 수 있어요.","ogImage":{"url":"/assets/img/2024-05-12-HowtoconvertHTMLelementtoimageinReactJS_0.png"},"coverImage":"/assets/img/2024-05-12-HowtoconvertHTMLelementtoimageinReactJS_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"img\", {\n      src: \"/assets/img/2024-05-12-HowtoconvertHTMLelementtoimageinReactJS_0.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"HTML을 이미지로 변환하는 것은 웹 응용 프로그램에서 유용한 기능일 수 있습니다. React에서 이 작업을 수행하는 여러 가지 방법이 있지만, 가장 일반적인 방법 중 하나는 서드파티 라이브러리를 사용하는 것입니다. 이 글에서는 React에서 html-to-image 모듈을 사용하여 HTML을 이미지로 변환하는 방법을 살펴보겠습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"요구 사항\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"html-to-image\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"b\", {\n      children: \"단계 1: html-to-image 설치하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"html-to-image 모듈을 사용하려면 먼저 설치해야 합니다. React 프로젝트에서 다음 명령을 실행하여 이 작업을 수행할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install html-to-image\\n\"\n      })\n    }), \"\\n\", _jsx(\"b\", {\n      children: \"단계 2: 라이브러리 가져오기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"라이브러리를 설치한 후에는 React 컴포넌트로 가져와야 합니다. 파일 상단에 다음과 같은 import 문을 포함하여 이 작업을 할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { toPng } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'html-to-image'\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"3단계: HTML 요소에 대한 참조 추가\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"변환하려는 HTML을 이미지로 지정하기 위해 HTML 요소를 명시해야 합니다. useRef 훅을 사용하여 이 작업을 할 수 있습니다. 다음과 같은 코드를 추가하여 HTML 요소에 대한 참조를 만들어야 합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" elementRef = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useRef\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \");\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그런 다음 변환하려는 HTML 요소에 ref 속성을 추가해야 합니다. 예를 들어:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<table\\n        ref={elementRef}\\n        style={{\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"fontFamily\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Arial, Helvetica, sans-serif\\\"\"\n        }), \",\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"borderCollapse\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"collapse\\\"\"\n        }), \",\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"width\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"50%\\\"\"\n        }), \",\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"margin\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0 auto\\\"\"\n        }), \",\\n        }}\\n      >\\n        \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"backgroundColor:\"\n            }), \" \\\"#\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"04AA6D\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"12px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            회사\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"backgroundColor:\"\n            }), \" \\\"#\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"04AA6D\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"12px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            연락처\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"backgroundColor:\"\n            }), \" \\\"#\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"04AA6D\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"12px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            국가\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"th\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          })]\n        }), \"\\n        \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            Alfreds Futterkiste\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            Maria Anders\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            독일\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          })]\n        }), \"\\n        \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            Berglunds snabbköp\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            Christina Berglund\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            스웨덴\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          })]\n        }), \"\\n        \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            Centro comercial Moctezuma\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            Francisco Chang\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \"\\n            \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{{\"\n            }), \"\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"padding:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"8px\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"border:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1px\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"solid\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"ddd\"\n            }), \"\\\",\\n              \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"textAlign:\"\n            }), \" \\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"left\"\n            }), \"\\\",\\n            }}\\n          >\"]\n          }), \"\\n            멕시코\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"td\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"tr\"\n            }), \">\"]\n          })]\n        }), \"\\n      </table>\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"참고: 스타일이 포함된 이미지를 다운로드하려면 HTML에 인라인 스타일을 포함해야 합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"\\n\\n\\n단계 4: HTML을 이미지로 변환하기\\n\\n이제 우리는 HTML 요소에 참조를 추가했으니, htmlToImage 라이브러리를 사용하여 이미지로 변환할 수 있습니다. 다음 코드를 추가하여 이 작업을 수행할 수 있습니다:\\n\\n```js\\nconst htmlToImageConvert = () => {\\n  toPng(elementRef.current, { cacheBust: false })\\n    .then((dataUrl) => {\\n      const link = document.createElement(\\\"a\\\");\\n      link.download = \\\"my-image-name.png\\\";\\n      link.href = dataUrl;\\n      link.click();\\n    })\\n    .catch((err) => {\\n      console.log(err);\\n    });\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"htmlToImageConvert 함수는 HTML을 이미지로 변환하고 싶을 때 트리거됩니다. 이 함수는 html-to-image 패키지의 toPng 메서드를 사용하여 HTML 요소를 PNG 이미지로 변환합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"5단계: 변환을 시작할 버튼 추가하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마지막으로, 변환을 시작할 버튼을 React 컴포넌트에 추가해야 합니다. 다음 코드를 추가하여 이 작업을 수행할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"<button onClick={htmlToImageConvert}>이미지 다운로드</button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"문의 사항이 있으시면 LinkedIn을 통해 연락해 주세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래에서 GitHub 저장소 샘플과 codesandbox 데모를 찾아볼 수 있어요.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}