{"pageProps":{"post":{"title":"라라벨 8로 사용자 로그인 및 등록 화면 생성","description":"","date":"2024-05-14 15:19","slug":"2024-05-14-CreationofuserloginandregistrationscreenswithLaravel8","content":"\n\nLaravel 8 로그인 및 회원가입 튜토리얼; 이 튜토리얼에서는 라라벨 애플리케이션에서 사용자 지정 인증 로그인 및 회원가입을 생성하는 방법에 대해 설명합니다.\n\n단계 1: 라라벨 애플리케이션 만들기\n단계 2: 데이터베이스 연결\n단계 3: 권한 부여 컨트롤러 설정\n단계 4: 권한 부여 라우트 생성\n단계 5: 권한 부여 블레이드 뷰 파일 생성\n단계 6: 라라벨 개발 서버 실행\n\n단계 1: 라라벨 애플리케이션 만들기\n\n시스템에 이미 Composer를 구성했다고 가정하고, 다음 명령을 실행하여 새 라라벨 애플리케이션을 설치합니다. 그렇지 않은 경우에는 다음 링크에서 다운로드할 수 있습니다.\n\n\n\n```js\ncomposer create-project - prefer-dist laravel/laravel_demo_app\n```\n\n그런 다음, 애플리케이션 폴더로 이동하세요:\n\n```js\ncd laravel_demo_app\n```\n\n단계 2: 데이터베이스에 연결하기\n\n\n\n이제 Laravel 애플리케이션을 데이터베이스에 연결하기 위해 .env 구성 파일에 데이터베이스 이름, 사용자 이름 및 비밀번호를 추가해야 합니다:\n\n```js\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=데이터베이스_이름\nDB_USERNAME=데이터베이스_사용자_이름\nDB_PASSWORD=데이터베이스_비밀번호\n```\n\nLaravel 애플리케이션에는 기본 User 모델과 마이그레이션 파일이 함께 제공됩니다. 데이터베이스에 새 테이블을 만들기 위해 다음 명령을 실행해야 합니다. 따라서 터미널로 이동하여 다음 명령을 실행하세요.\n\n```js\nphp artisan migrate\n```\n\n\n\n3단계: 인가 컨트롤러 설정하기\n\n다음으로, 제안된 명령을 명령 프롬프트에 작성하고 새로운 컨트롤러 파일인 CustomAuthController를 생성하는 명령을 실행하세요.\n\n```js\nphp artisan make:controller CustomAuthController\n```\n\n그런 다음 파일을 열어주세요.\n\n\n\n```plaintext\n`app\\Http\\Controllers\\CustomAuthController.php` 에 위 코드를 주의 깊게 넣어주세요.\n\n```php\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Hash;\nuse Session;\nuse App\\Models\\User;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass CustomAuthController extends Controller\n{\n\n    public function index()\n    {\n        return view('auth.login');\n    }\n\n    public function customLogin(Request $request)\n    {\n       $validator =  $request->validate([\n            'email' => 'required',\n            'password' => 'required',\n        ]);\n   \n    \n        $credentials = $request->only('email', 'password');\n        if (Auth::attempt($credentials)) {\n            return redirect()->intended('dashboard')\n                        ->withSuccess('Signed in');\n        }\n        $validator['emailPassword'] = '이메일 주소 또는 비밀번호가 올바르지 않습니다.';\n        return redirect(\"login\")->withErrors($validator);\n    }\n\n\n\n    public function registration()\n    {\n        return view('auth.registration');\n    }\n\n    public function customRegistration(Request $request)\n    {  \n        $request->validate([\n            'name' => 'required',\n            'email' => 'required|email|unique:users',\n            'password' => 'required|min:6',\n        ]);\n           \n        $data = $request->all();\n        $check = $this->create($data);\n         \n        return redirect(\"dashboard\")->withSuccess('가입이 완료되었습니다');\n    }\n\n\n    public function create(array $data)\n    {\n      return User::create([\n        'name' => $data['name'],\n        'email' => $data['email'],\n        'password' => Hash::make($data['password'])\n      ]);\n    }\n\n    public function dashboard()\n    {\n        if(Auth::check()){\n            return view('dashboard');\n        }\n  \n        return redirect(\"login\")->withSuccess('접근 권한이 없습니다');\n    }\n\n    public function signOut() {\n        Session::flush();\n        Auth::logout();\n  \n        return Redirect('login');\n    }\n}\n```\n\nStep 4: 권한 부여 라우트 생성\n\n\n\n\n이 단계에서는 라라벨 애플리케이션에서 사용자 정의 인증을 처리하기 위해 POST 및 GET 방식으로 경로를 생성하는 방법을 설명합니다. route/web.php 파일을 열고 다음 코드를 추가하세요.\n\n```js\n<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\CustomAuthController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n*/\n\nRoute::get('dashboard', [CustomAuthController::class, 'dashboard']); \nRoute::get('login', [CustomAuthController::class, 'index'])->name('login');\nRoute::post('custom-login', [CustomAuthController::class, 'customLogin'])->name('login.custom'); \nRoute::get('registration', [CustomAuthController::class, 'registration'])->name('register-user');\nRoute::post('custom-registration', [CustomAuthController::class, 'customRegistration'])->name('register.custom'); \nRoute::get('signout', [CustomAuthController::class, 'signOut'])->name('signout');\n```\n\n단계 5: Auth Blade View 파일 생성\n\nResources/views/ 폴더 내에서 auth 폴더를 생성하고 그 안에 new login.blade.php 파일을 만들어 이 파일에 다음 코드를 넣어주세요.\n\n\n\n```js\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<main class=\"login-form\">\n    <div class=\"cotainer\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-4\">\n                <div class=\"card\">\n                    <h3 class=\"card-header text-center\">로그인</h3>\n                    <div class=\"card-body\">\n                        <form method=\"POST\" action=\"{ route('login.custom') }\">\n                            @csrf\n                            <div class=\"form-group mb-3\">\n                                <input type=\"text\" placeholder=\"이메일\" id=\"email\" class=\"form-control\" name=\"email\" required autofocus>\n                            </div>\n\n                            <div class=\"form-group mb-3\">\n                                <input type=\"password\" placeholder=\"비밀번호\" id=\"password\" class=\"form-control\" name=\"password\" required>\n                                @if ($errors->has('emailPassword'))\n                                <span class=\"text-danger\">{ $errors->first('emailPassword') }</span>\n                                @endif\n                            </div>\n\n                            <div class=\"form-group mb-3\">\n                                <div class=\"checkbox\">\n                                    <label>\n                                        <input type=\"checkbox\" name=\"remember\"> 기억하기\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div class=\"d-grid mx-auto\">\n                                <button type=\"submit\" class=\"btn btn-dark btn-block\">로그인</button>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</main>\n```\n\nResources/views/auth 폴더로 이동하여 비슷하게 registration.blade.php 파일을 만들고, 이 파일에 다음 코드를 추가해주세요:\n\n```js\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n<main class=\"signup-form\">\n    <div class=\"cotainer\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-4\">\n                <div class=\"card\">\n                    <h3 class=\"card-header text-center\">사용자 등록</h3>\n                    <div class=\"card-body\">\n\n                        <form action=\"{ route('register.custom') }\" method=\"POST\">\n                            @csrf\n                            <div class=\"form-group mb-3\">\n                                <input type=\"text\" placeholder=\"이름\" id=\"name\" class=\"form-control\" name=\"name\"\n                                    required autofocus>\n                                @if ($errors->has('name'))\n                                <span class=\"text-danger\">{ $errors->first('name') }</span>\n                                @endif\n                            </div>\n\n                            <div class=\"form-group mb-3\">\n                                <input type=\"text\" placeholder=\"이메일\" id=\"email_address\" class=\"form-control\"\n                                    name=\"email\" required autofocus>\n                                @if ($errors->has('email'))\n                                <span class=\"text-danger\">{ $errors->first('email') }</span>\n                                @endif\n                            </div>\n\n                            <div class=\"form-group mb-3\">\n                                <input type=\"password\" placeholder=\"비밀번호\" id=\"password\" class=\"form-control\"\n                                    name=\"password\" required>\n                                @if ($errors->has('password'))\n                                <span class=\"text-danger\">{ $errors->first('password') }</span>\n                                @endif\n                            </div>\n\n                            <div class=\"form-group mb-3\">\n                                <div class=\"checkbox\">\n                                    <label><input type=\"checkbox\" name=\"remember\"> 기억하기</label>\n                                </div>\n                            </div>\n\n                            <div class=\"d-grid mx-auto\">\n                                <button type=\"submit\" class=\"btn btn-dark btn-block\">가입하기</button>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</main>\n```\n\nResources/views/ 폴더로 이동하여 새로운 dashboard.blade.php 파일을 만들고, 이 파일에 다음 코드를 추가해주세요:```\n\n\n\n```js\n<!DOCTYPE html>\n<html>\n<head>\n    <title>라라벨에서 사용자 지정 인증</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n\n    <nav class=\"navbar navbar-light navbar-expand-lg mb-5\" style=\"background-color: #e3f2fd;\">\n        <div class=\"container\">\n            <a class=\"navbar-brand mr-auto\" href=\"#\">코드사전</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    @guest\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"{ route('login') }\">로그인</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"{ route('register-user') }\">가입하기</a>\n                    </li>\n                    @else\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"{ route('signout') }\">로그아웃</a>\n                    </li>\n                    @endguest\n                </ul>\n            </div>\n        </div>\n    </nav>\n\n</body>\n\n</html>\n```\n\n단계 6: 라라벨 서버 실행하기\n\n마지막으로, 브라우저에서 애플리케이션을 시작할 수 있도록 라라벨 개발 서버를 실행해야 합니다. 명령 프롬프트를 통해 다음 명령어를 실행해 주세요.\n\n```js\nphp artisan serve\n```\n\n\n\n브라우저 주소창에 다음 URL을 추가하고 애플리케이션을 테스트해보세요.\n\n```js\nhttp://127.0.0.1:8000/login\nhttp://127.0.0.1:8000/registration\n```\n\n소스 코드\n\n![이미지](/assets/img/2024-05-14-CreationofuserloginandregistrationscreenswithLaravel8_0.png)","ogImage":{"url":"/assets/img/2024-05-14-CreationofuserloginandregistrationscreenswithLaravel8_0.png"},"coverImage":"/assets/img/2024-05-14-CreationofuserloginandregistrationscreenswithLaravel8_0.png","tag":["Tech"],"readingTime":11},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Laravel 8 로그인 및 회원가입 튜토리얼; 이 튜토리얼에서는 라라벨 애플리케이션에서 사용자 지정 인증 로그인 및 회원가입을 생성하는 방법에 대해 설명합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 1: 라라벨 애플리케이션 만들기\\n단계 2: 데이터베이스 연결\\n단계 3: 권한 부여 컨트롤러 설정\\n단계 4: 권한 부여 라우트 생성\\n단계 5: 권한 부여 블레이드 뷰 파일 생성\\n단계 6: 라라벨 개발 서버 실행\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 1: 라라벨 애플리케이션 만들기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시스템에 이미 Composer를 구성했다고 가정하고, 다음 명령을 실행하여 새 라라벨 애플리케이션을 설치합니다. 그렇지 않은 경우에는 다음 링크에서 다운로드할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"composer create-project - prefer-dist laravel/laravel_demo_app\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그런 다음, 애플리케이션 폴더로 이동하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"cd laravel_demo_app\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 2: 데이터베이스에 연결하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 Laravel 애플리케이션을 데이터베이스에 연결하기 위해 .env 구성 파일에 데이터베이스 이름, 사용자 이름 및 비밀번호를 추가해야 합니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DB_HOST\"\n        }), \"=\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"127.0\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".1\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DB_PORT\"\n        }), \"=\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3306\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DB_DATABASE\"\n        }), \"=데이터베이스_이름\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DB_USERNAME\"\n        }), \"=데이터베이스_사용자_이름\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DB_PASSWORD\"\n        }), \"=데이터베이스_비밀번호\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Laravel 애플리케이션에는 기본 User 모델과 마이그레이션 파일이 함께 제공됩니다. 데이터베이스에 새 테이블을 만들기 위해 다음 명령을 실행해야 합니다. 따라서 터미널로 이동하여 다음 명령을 실행하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"php artisan migrate\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"3단계: 인가 컨트롤러 설정하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음으로, 제안된 명령을 명령 프롬프트에 작성하고 새로운 컨트롤러 파일인 CustomAuthController를 생성하는 명령을 실행하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"php artisan \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"make\"\n        }), \":controller \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그런 다음 파일을 열어주세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-plaintext\",\n        children: \"`app\\\\Http\\\\Controllers\\\\CustomAuthController.php` 에 위 코드를 주의 깊게 넣어주세요.\\n\\n```php\\n<?php\\n\\nnamespace App\\\\Http\\\\Controllers;\\n\\nuse Illuminate\\\\Http\\\\Request;\\nuse Hash;\\nuse Session;\\nuse App\\\\Models\\\\User;\\nuse Illuminate\\\\Support\\\\Facades\\\\Auth;\\n\\nclass CustomAuthController extends Controller\\n{\\n\\n    public function index()\\n    {\\n        return view('auth.login');\\n    }\\n\\n    public function customLogin(Request $request)\\n    {\\n       $validator =  $request->validate([\\n            'email' => 'required',\\n            'password' => 'required',\\n        ]);\\n   \\n    \\n        $credentials = $request->only('email', 'password');\\n        if (Auth::attempt($credentials)) {\\n            return redirect()->intended('dashboard')\\n                        ->withSuccess('Signed in');\\n        }\\n        $validator['emailPassword'] = '이메일 주소 또는 비밀번호가 올바르지 않습니다.';\\n        return redirect(\\\"login\\\")->withErrors($validator);\\n    }\\n\\n\\n\\n    public function registration()\\n    {\\n        return view('auth.registration');\\n    }\\n\\n    public function customRegistration(Request $request)\\n    {  \\n        $request->validate([\\n            'name' => 'required',\\n            'email' => 'required|email|unique:users',\\n            'password' => 'required|min:6',\\n        ]);\\n           \\n        $data = $request->all();\\n        $check = $this->create($data);\\n         \\n        return redirect(\\\"dashboard\\\")->withSuccess('가입이 완료되었습니다');\\n    }\\n\\n\\n    public function create(array $data)\\n    {\\n      return User::create([\\n        'name' => $data['name'],\\n        'email' => $data['email'],\\n        'password' => Hash::make($data['password'])\\n      ]);\\n    }\\n\\n    public function dashboard()\\n    {\\n        if(Auth::check()){\\n            return view('dashboard');\\n        }\\n  \\n        return redirect(\\\"login\\\")->withSuccess('접근 권한이 없습니다');\\n    }\\n\\n    public function signOut() {\\n        Session::flush();\\n        Auth::logout();\\n  \\n        return Redirect('login');\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Step 4: 권한 부여 라우트 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 단계에서는 라라벨 애플리케이션에서 사용자 정의 인증을 처리하기 위해 POST 및 GET 방식으로 경로를 생성하는 방법을 설명합니다. route/web.php 파일을 열고 다음 코드를 추가하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<?php\\n\\nuse \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Illuminate\"\n        }), \"\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Support\"\n        }), \"\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Facades\"\n        }), \"\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \";\\nuse \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \"\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Http\"\n        }), \"\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Controllers\"\n        }), \"\\\\\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/*\\n|--------------------------------------------------------------------------\\n| Web Routes\\n|--------------------------------------------------------------------------\\n*/\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'dashboard'\"\n        }), \", [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'dashboard'\"\n        }), \"]); \\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'login'\"\n        }), \", [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'index'\"\n        }), \"])->\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"name\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'login'\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"post\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'custom-login'\"\n        }), \", [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'customLogin'\"\n        }), \"])->\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"name\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'login.custom'\"\n        }), \"); \\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'registration'\"\n        }), \", [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'registration'\"\n        }), \"])->\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"name\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'register-user'\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"post\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'custom-registration'\"\n        }), \", [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'customRegistration'\"\n        }), \"])->\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"name\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'register.custom'\"\n        }), \"); \\n\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Route\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'signout'\"\n        }), \", [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthController\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'signOut'\"\n        }), \"])->\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"name\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'signout'\"\n        }), \");\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 5: Auth Blade View 파일 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resources/views/ 폴더 내에서 auth 폴더를 생성하고 그 안에 new login.blade.php 파일을 만들어 이 파일에 다음 코드를 넣어주세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<link href=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\\\"\"\n        }), \" rel=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"stylesheet\\\"\"\n        }), \">\\n<main class=\\\"login-form\\\">\\n    <div class=\\\"cotainer\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card\\\">\\n                    <h3 class=\\\"card-header text-center\\\">로그인</h3>\\n                    <div class=\\\"card-body\\\">\\n                        <form method=\\\"POST\\\" action=\\\"{ route('login.custom') }\\\">\\n                            @csrf\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"이메일\\\" id=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" required autofocus>\\n                            </div>\\n\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <input type=\\\"password\\\" placeholder=\\\"비밀번호\\\" id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" required>\\n                                @if ($errors->has('emailPassword'))\\n                                <span class=\\\"text-danger\\\">{ $errors->first('emailPassword') }</span>\\n                                @endif\\n                            </div>\\n\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <div class=\\\"checkbox\\\">\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" name=\\\"remember\\\"> 기억하기\\n                                    </label>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"d-grid mx-auto\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-dark btn-block\\\">로그인</button>\\n                            </div>\\n                        </form>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</main>\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resources/views/auth 폴더로 이동하여 비슷하게 registration.blade.php 파일을 만들고, 이 파일에 다음 코드를 추가해주세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<link href=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\\\"\"\n        }), \" rel=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"stylesheet\\\"\"\n        }), \">\\n\\n<main class=\\\"signup-form\\\">\\n    <div class=\\\"cotainer\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card\\\">\\n                    <h3 class=\\\"card-header text-center\\\">사용자 등록</h3>\\n                    <div class=\\\"card-body\\\">\\n\\n                        <form action=\\\"{ route('register.custom') }\\\" method=\\\"POST\\\">\\n                            @csrf\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"이름\\\" id=\\\"name\\\" class=\\\"form-control\\\" name=\\\"name\\\"\\n                                    required autofocus>\\n                                @if ($errors->has('name'))\\n                                <span class=\\\"text-danger\\\">{ $errors->first('name') }</span>\\n                                @endif\\n                            </div>\\n\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"이메일\\\" id=\\\"email_address\\\" class=\\\"form-control\\\"\\n                                    name=\\\"email\\\" required autofocus>\\n                                @if ($errors->has('email'))\\n                                <span class=\\\"text-danger\\\">{ $errors->first('email') }</span>\\n                                @endif\\n                            </div>\\n\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <input type=\\\"password\\\" placeholder=\\\"비밀번호\\\" id=\\\"password\\\" class=\\\"form-control\\\"\\n                                    name=\\\"password\\\" required>\\n                                @if ($errors->has('password'))\\n                                <span class=\\\"text-danger\\\">{ $errors->first('password') }</span>\\n                                @endif\\n                            </div>\\n\\n                            <div class=\\\"form-group mb-3\\\">\\n                                <div class=\\\"checkbox\\\">\\n                                    <label><input type=\\\"checkbox\\\" name=\\\"remember\\\"> 기억하기</label>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"d-grid mx-auto\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-dark btn-block\\\">가입하기</button>\\n                            </div>\\n                        </form>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</main>\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resources/views/ 폴더로 이동하여 새로운 dashboard.blade.php 파일을 만들고, 이 파일에 다음 코드를 추가해주세요:```\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<!\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DOCTYPE\"\n        }), \" html>\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"html\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"head\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"title\"\n            }), \">\"]\n          }), \"라라벨에서 사용자 지정 인증\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"title\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"link\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"href\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"rel\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"stylesheet\\\"\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"head\"\n            }), \">\"]\n          }), \"\\n\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"body\"\n            }), \">\"]\n          }), \"\\n\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"nav\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbar navbar-light navbar-expand-lg mb-5\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"background-color: #e3f2fd;\\\"\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"container\\\"\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbar-brand mr-auto\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"href\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"#\\\"\"\n            }), \">\"]\n          }), \"코드사전\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbar-toggler\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"button\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"data-bs-toggle\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"collapse\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"data-bs-target\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"#navbarNav\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"aria-controls\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbarNav\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"aria-expanded\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"false\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"aria-label\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"Toggle navigation\\\"\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"span\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbar-toggler-icon\\\"\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"span\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"collapse navbar-collapse\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbarNav\\\"\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"ul\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"navbar-nav\\\"\"\n            }), \">\"]\n          }), \"\\n                    @guest\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"nav-item\\\"\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"nav-link\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"href\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"{ route('login') }\\\"\"\n            }), \">\"]\n          }), \"로그인\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"nav-item\\\"\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"nav-link\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"href\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"{ route('register-user') }\\\"\"\n            }), \">\"]\n          }), \"가입하기\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \">\"]\n          }), \"\\n                    @else\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"nav-item\\\"\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"class\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"nav-link\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"href\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"{ route('signout') }\\\"\"\n            }), \">\"]\n          }), \"로그아웃\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"li\"\n            }), \">\"]\n          }), \"\\n                    @endguest\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"ul\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"nav\"\n            }), \">\"]\n          }), \"\\n\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"body\"\n            }), \">\"]\n          }), \"\\n\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"html\"\n            }), \">\"]\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 6: 라라벨 서버 실행하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마지막으로, 브라우저에서 애플리케이션을 시작할 수 있도록 라라벨 개발 서버를 실행해야 합니다. 명령 프롬프트를 통해 다음 명령어를 실행해 주세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"php artisan serve\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"브라우저 주소창에 다음 URL을 추가하고 애플리케이션을 테스트해보세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"http\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//127.0.0.1:8000/login\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"http\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//127.0.0.1:8000/registration\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"소스 코드\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-14-CreationofuserloginandregistrationscreenswithLaravel8_0.png\",\n        alt: \"이미지\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}