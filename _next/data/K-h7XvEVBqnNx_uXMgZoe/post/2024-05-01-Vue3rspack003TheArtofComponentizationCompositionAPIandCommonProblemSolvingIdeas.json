{"pageProps":{"post":{"title":"Vue3 + Vite 컴포넌트화 하는 방법","description":"","date":"2024-05-01 18:06","slug":"2024-05-01-Vue3rspack003TheArtofComponentizationCompositionAPIandCommonProblemSolvingIdeas","content":"\n\n# Vue3 + rspack 003: 컴포넌트화의 기술 (Composition API) 및 일반적인 문제 해결 아이디어\n\nVue 3에서 Composition API는 컴포넌트와 로직을 재사용하는 새로운 방법을 제공합니다. 이는 우리의 코드에 더 나은 구성 구조를 제공할 뿐만 아니라 복잡한 컴포넌트 로직을 더 유연하게 처리할 수 있는 기회를 줍니다. 아래에서 탐색해봅시다.\n\n# 컴포넌트 생성 및 사용\n\n컴포넌트는 Vue 애플리케이션의 기본 구성 요소입니다. Composition API에서는 reactive 상태와 컴포넌트의 동작을 정의하기 위해 setup 함수를 사용합니다.\n\n<div class=\"content-ad\"></div>\n\n# 예시: 간단한 카운터 컴포넌트\n\n```js\n<template>\n  <button @click=\"increment\">{ count }</button>\n</template><script>\nimport { ref } from 'vue';export default {\n  setup() {\n    const count = ref(0);\n    function increment() {\n      count.value++;\n    }    return { count, increment };\n  };\n</script>\n```\n\n# 실용적인 어려움과 해결책\n\n어려움: Composition API를 사용할 때, 개발자들은 조각난 상태 로직을 경험하여 컴포넌트를 유지하기 어렵게 만들 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n해결책: 관련 로직을 함수로 캡슐화한 후에 이 함수를 설정(setup)에서 호출하세요. 이렇게 하면 코드의 가독성과 유지보수성이 향상될 수 있습니다.\n\n# 부모 및 자식 컴포넌트 간 통신\n\nVue 3에서 부모 및 자식 컴포넌트 간의 통신은 주로 props와 emit을 통해 이루어집니다. Composition API는 defineProps와 defineEmit 함수를 제공하여이 프로세스를 간단화합니다.\n\n# 예: 부모-자식 컴포넌트 간 통신\n\n<div class=\"content-ad\"></div>\n\n```js\n<!-- ChildComponent.vue -->\n<template>\n  <div @click=\"emitToParent\">나를 클릭해주세요!</div>\n</template>\n<script>\nimport { defineProps, defineEmit } from 'vue';\nexport default {\n  setup() {\n    const props = defineProps(['messageFromParent']);\n    const emit = defineEmit(['messageToParent']);\n    \n    function emitToParent() {\n      emit('messageToParent', '안녕하세요, 부모님!');\n    }\n    \n    return { emitToParent };\n  }\n};\n</script>\n\n<!-- ParentComponent.vue -->\n<template>\n  <ChildComponent\n    :messageFromParent=\"parentMessage\"\n    @messageToParent=\"handleMessageFromChild\"\n  />\n</template>\n<script>\nimport { ref } from 'vue';\nimport ChildComponent from './components/ChildComponent.vue';\nexport default {\n  components: {\n    ChildComponent\n  },\n  setup() {\n    const parentMessage = ref('안녕하세요, 자식님!');\n    \n    function handleMessageFromChild(message) {\n      console.log(message);\n    }\n    \n    return { parentMessage, handleMessageFromChild };\n  }\n};\n</script>\n```\n\n# 실용적인 어려움과 해결책\n\n어려움 : 대규모 어플리케이션에서는 종종 다층 중첩된 컴포넌트 간의 통신 요구사항이 발생합니다. 직접 props와 emit을 사용하면 \"props를 계층적으로 전달하는\" 및 \"이벤트를 계층적으로 발생시키는\" 문제가 발생할 수 있습니다.\n\n해결책 : 이러한 번거로운 계층별 전달을 피하기 위해 Vue 3의 provide 및 inject API를 사용하여 컴포넌트 간 수준의 통신을 할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 슬롯 사용\n\n슬롯을 사용하면 자식 컴포넌트의 내용으로 어떤 템플릿 코드든 부모 컴포넌트에 전달할 수 있습니다. Composition API에서는 슬롯 내용에 접근할 수 있습니다.\n\n# 예시: 슬롯 사용하기\n\n```js\n<!-- BaseLayout.vue -->\n<template>\n  <header>\n    <slot name=\"header\"></slot>\n  </header>\n  <main>\n    <slot></slot>\n  </main>\n  <footer>\n    <slot name=\"footer\"></slot>\n  </footer>\n</template>\n<script>\nimport { useSlots } from 'vue';\nexport default {\n  setup() {\n    const slots = useSlots();\n    return { slots };\n  }\n};\n</script>\n<!-- App.vue -->\n<template>\n  <BaseLayout>\n    <template #header>\n      <h1>여기에 페이지 제목이 올 수 있어요</h1>\n    </template>\n    <p>페이지의 주요 내용</p>\n    <template #footer>\n      <p>여기에 연락처 정보가 있습니다</p>\n    </template>\n  </BaseLayout>\n</template>\n<script>\nimport BaseLayout from './components/BaseLayout.vue';\nexport default {\n  components: {\n    BaseLayout\n  }\n};\n</script>\n```\n\n<div class=\"content-ad\"></div>\n\n# 실용적인 어려움과 해결책\n\n어려움: 이름이 지정된 슬롯을 사용할 때, 슬롯 콘텐츠를 자식 컴포넌트의 상태 또는 동작에 따라 동기화하는 것이 복잡할 수 있습니다.\n\n해결책: scoped 슬롯을 사용할 수 있습니다. scoped 슬롯을 사용하면 자식 컴포넌트가 부모 컴포넌트에 데이터를 노출시킬 수 있고 그 데이터를 부모 컴포넌트의 슬롯 콘텐츠에서 사용할 수 있습니다.\n\n# 동적 컴포넌트와 비동기 컴포넌트\n\n<div class=\"content-ad\"></div>\n\nVue 3는 defineAsyncComponent를 통해 비동기 컴포넌트를 지원합니다. 동적 컴포넌트는 내장 `component` 태그와 `:` 속성을 사용하여 구현할 수 있습니다.\n\n# 예시: 비동기 컴포넌트\n\n```js\n// defineAsyncComponent를 사용하여 비동기 컴포넌트 로드\nimport { defineAsyncComponent } from 'vue';export default {\n  components: {\n    AsyncComponent: defineAsyncComponent(() =>\n      import('./components/AsyncComponent.vue')\n    )\n  }\n};\n```\n\n# 예시: 동적 컴포넌트\n\n<div class=\"content-ad\"></div>\n\n```js\n<template>\n  <component :is=\"currentComponent\" />\n</template>\n<script>\nimport { ref } from 'vue';\nimport ComponentA from './components/ComponentA.vue';\nimport ComponentB from './components/ComponentB.vue';\nexport default {\n  setup() {\n    const currentComponent = ref('ComponentA');    // 실제 상황에 맞게 currentComponent의 값을 변경하여 컴포넌트를 전환할 수 있습니다.\n    \n    // currentComponent.value = 'ComponentB';\n    \n    return { currentComponent, ComponentA, ComponentB };\n  }\n};\n</script>\n```\n\n# 실용적인 어려움과 해결책\n\n어려움: 비동기 컴포넌트를 사용할 때 컴포넌트 로딩 지연이나 실패와 같은 문제가 발생할 수 있어 사용자 경험에 영향을 줄 수 있습니다.\n\n해결책: 로딩 상태 힌트 및 오류 처리 매커니즘을 제공할 수 있습니다. 예를 들어, Suspense 컴포넌트를 사용하여 비동기 컴포넌트를 감쌀 수 있고 대체 콘텐츠(대체 콘텐츠)를 제공할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n<template>\n  <Suspense>\n    <template #default>\n      <AsyncComponent />\n    </template>\n    <template #fallback>\n      <div>Loading...</div>\n    </template>\n  </Suspense>\n</template>\n```\n\n위의 예제와 해결책을 통해 Vue 3의 모듈화 및 Composition API가 강력한 기능과 유연성을 제공하여 우리가 실용적인 개발 문제를 더 잘 해결하고 우아한 방식으로 복잡한 애플리케이션을 구축할 수 있음을 볼 수 있습니다.","ogImage":{"url":"/assets/img/2024-05-01-Vue3rspack003TheArtofComponentizationCompositionAPIandCommonProblemSolvingIdeas_0.png"},"coverImage":"/assets/img/2024-05-01-Vue3rspack003TheArtofComponentizationCompositionAPIandCommonProblemSolvingIdeas_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Vue3 + rspack 003: 컴포넌트화의 기술 (Composition API) 및 일반적인 문제 해결 아이디어\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vue 3에서 Composition API는 컴포넌트와 로직을 재사용하는 새로운 방법을 제공합니다. 이는 우리의 코드에 더 나은 구성 구조를 제공할 뿐만 아니라 복잡한 컴포넌트 로직을 더 유연하게 처리할 수 있는 기회를 줍니다. 아래에서 탐색해봅시다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"컴포넌트 생성 및 사용\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"컴포넌트는 Vue 애플리케이션의 기본 구성 요소입니다. Composition API에서는 reactive 상태와 컴포넌트의 동작을 정의하기 위해 setup 함수를 사용합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"예시: 간단한 카운터 컴포넌트\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<template>\\n  \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \" @\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"click\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"increment\\\"\"\n            }), \">\"]\n          }), \"{ count }\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          })]\n        }), \"\\n</template>\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"javascript\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" { ref } \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'vue'\"\n            }), \";\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"default\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"setup\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"const\"\n            }), \" count = \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"ref\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-number\",\n              children: \"0\"\n            }), \");\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"increment\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n      count.\", _jsx(_components.span, {\n              className: \"hljs-property\",\n              children: \"value\"\n            }), \"++;\\n    }    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"return\"\n            }), \" { count, increment };\\n  };\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"실용적인 어려움과 해결책\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"어려움: Composition API를 사용할 때, 개발자들은 조각난 상태 로직을 경험하여 컴포넌트를 유지하기 어렵게 만들 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해결책: 관련 로직을 함수로 캡슐화한 후에 이 함수를 설정(setup)에서 호출하세요. 이렇게 하면 코드의 가독성과 유지보수성이 향상될 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"부모 및 자식 컴포넌트 간 통신\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vue 3에서 부모 및 자식 컴포넌트 간의 통신은 주로 props와 emit을 통해 이루어집니다. Composition API는 defineProps와 defineEmit 함수를 제공하여이 프로세스를 간단화합니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"예: 부모-자식 컴포넌트 간 통신\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<!-- \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ChildComponent\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"vue\"\n        }), \" -->\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" @\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"click\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"emitToParent\\\"\"\n            }), \">\"]\n          }), \"나를 클릭해주세요!\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"javascript\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" { defineProps, defineEmit } \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"default\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"setup\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"const\"\n            }), \" props = \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"defineProps\"\n            }), \"([\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'messageFromParent'\"\n            }), \"]);\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"const\"\n            }), \" emit = \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"defineEmit\"\n            }), \"([\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'messageToParent'\"\n            }), \"]);\\n    \\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"emitToParent\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n      \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"emit\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'messageToParent'\"\n            }), \", \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'안녕하세요, 부모님!'\"\n            }), \");\\n    }\\n    \\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"return\"\n            }), \" { emitToParent };\\n  }\\n};\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          })]\n        }), \"\\n\\n<!-- \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ParentComponent\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"vue\"\n        }), \" -->\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"ChildComponent\"\n            }), \"\\n    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \":messageFromParent\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"parentMessage\\\"\"\n            }), \"\\n    @\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"messageToParent\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"handleMessageFromChild\\\"\"\n            }), \"\\n  />\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"javascript\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" { ref } \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"ChildComponent\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'./components/ChildComponent.vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"default\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"components\"\n            }), \": {\\n    \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"ChildComponent\"\n            }), \"\\n  },\\n  \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"setup\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"const\"\n            }), \" parentMessage = \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"ref\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'안녕하세요, 자식님!'\"\n            }), \");\\n    \\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"handleMessageFromChild\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"message\"\n            }), \") {\\n      \", _jsx(_components.span, {\n              className: \"hljs-variable language_\",\n              children: \"console\"\n            }), \".\", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"log\"\n            }), \"(message);\\n    }\\n    \\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"return\"\n            }), \" { parentMessage, handleMessageFromChild };\\n  }\\n};\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"실용적인 어려움과 해결책\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"어려움 : 대규모 어플리케이션에서는 종종 다층 중첩된 컴포넌트 간의 통신 요구사항이 발생합니다. 직접 props와 emit을 사용하면 \\\"props를 계층적으로 전달하는\\\" 및 \\\"이벤트를 계층적으로 발생시키는\\\" 문제가 발생할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해결책 : 이러한 번거로운 계층별 전달을 피하기 위해 Vue 3의 provide 및 inject API를 사용하여 컴포넌트 간 수준의 통신을 할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"슬롯 사용\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"슬롯을 사용하면 자식 컴포넌트의 내용으로 어떤 템플릿 코드든 부모 컴포넌트에 전달할 수 있습니다. Composition API에서는 슬롯 내용에 접근할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"예시: 슬롯 사용하기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<!-- \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"BaseLayout\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"vue\"\n        }), \" -->\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"header\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"slot\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"name\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"header\\\"\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"slot\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"header\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"main\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"slot\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"slot\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"main\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"footer\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"slot\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"name\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"footer\\\"\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"slot\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"footer\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"javascript\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" { useSlots } \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"default\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"setup\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"const\"\n            }), \" slots = \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"useSlots\"\n            }), \"();\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"return\"\n            }), \" { slots };\\n  }\\n};\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          })]\n        }), \"\\n<!-- \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"vue\"\n        }), \" -->\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"BaseLayout\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"header\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"여기에 페이지 제목이 올 수 있어요\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"페이지의 주요 내용\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"footer\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"여기에 연락처 정보가 있습니다\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"BaseLayout\"\n            }), \">\"]\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          })]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"javascript\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"BaseLayout\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'./components/BaseLayout.vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"default\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"components\"\n            }), \": {\\n    \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"BaseLayout\"\n            }), \"\\n  }\\n};\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"실용적인 어려움과 해결책\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"어려움: 이름이 지정된 슬롯을 사용할 때, 슬롯 콘텐츠를 자식 컴포넌트의 상태 또는 동작에 따라 동기화하는 것이 복잡할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해결책: scoped 슬롯을 사용할 수 있습니다. scoped 슬롯을 사용하면 자식 컴포넌트가 부모 컴포넌트에 데이터를 노출시킬 수 있고 그 데이터를 부모 컴포넌트의 슬롯 콘텐츠에서 사용할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"동적 컴포넌트와 비동기 컴포넌트\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vue 3는 defineAsyncComponent를 통해 비동기 컴포넌트를 지원합니다. 동적 컴포넌트는 내장 \", _jsx(_components.code, {\n        children: \"component\"\n      }), \" 태그와 \", _jsx(_components.code, {\n        children: \":\"\n      }), \" 속성을 사용하여 구현할 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"예시: 비동기 컴포넌트\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// defineAsyncComponent를 사용하여 비동기 컴포넌트 로드\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { defineAsyncComponent } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'vue'\"\n        }), \";\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"components\"\n        }), \": {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"AsyncComponent\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"defineAsyncComponent\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./components/AsyncComponent.vue'\"\n        }), \")\\n    )\\n  }\\n};\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"예시: 동적 컴포넌트\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<template>\\n  \", _jsx(_components.span, {\n          className: \"xml\",\n          children: _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"component\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \":is\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"currentComponent\\\"\"\n            }), \" />\"]\n          })\n        }), \"\\n</template>\\n\", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          }), _jsxs(_components.span, {\n            className: \"javascript\",\n            children: [\"\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" { ref } \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"ComponentA\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'./components/ComponentA.vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"import\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"ComponentB\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'./components/ComponentB.vue'\"\n            }), \";\\n\", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"default\"\n            }), \" {\\n  \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"setup\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-params\"\n            }), \") {\\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"const\"\n            }), \" currentComponent = \", _jsx(_components.span, {\n              className: \"hljs-title function_\",\n              children: \"ref\"\n            }), \"(\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"'ComponentA'\"\n            }), \");    \", _jsx(_components.span, {\n              className: \"hljs-comment\",\n              children: \"// 실제 상황에 맞게 currentComponent의 값을 변경하여 컴포넌트를 전환할 수 있습니다.\"\n            }), \"\\n    \\n    \", _jsx(_components.span, {\n              className: \"hljs-comment\",\n              children: \"// currentComponent.value = 'ComponentB';\"\n            }), \"\\n    \\n    \", _jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"return\"\n            }), \" { currentComponent, \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"ComponentA\"\n            }), \", \", _jsx(_components.span, {\n              className: \"hljs-title class_\",\n              children: \"ComponentB\"\n            }), \" };\\n  }\\n};\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"script\"\n            }), \">\"]\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"실용적인 어려움과 해결책\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"어려움: 비동기 컴포넌트를 사용할 때 컴포넌트 로딩 지연이나 실패와 같은 문제가 발생할 수 있어 사용자 경험에 영향을 줄 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해결책: 로딩 상태 힌트 및 오류 처리 매커니즘을 제공할 수 있습니다. 예를 들어, Suspense 컴포넌트를 사용하여 비동기 컴포넌트를 감쌀 수 있고 대체 콘텐츠(대체 콘텐츠)를 제공할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"<template>\\n  \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Suspense\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"default\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"AsyncComponent\"\n            }), \" />\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \" #\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"fallback\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"Loading...\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"template\"\n            }), \">\"]\n          }), \"\\n  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Suspense\"\n            }), \">\"]\n          })]\n        }), \"\\n</template>\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"위의 예제와 해결책을 통해 Vue 3의 모듈화 및 Composition API가 강력한 기능과 유연성을 제공하여 우리가 실용적인 개발 문제를 더 잘 해결하고 우아한 방식으로 복잡한 애플리케이션을 구축할 수 있음을 볼 수 있습니다.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}