{"pageProps":{"post":{"title":"맥OS에서 Expo로 빌드하는 동안 권한 문제 해결하기 개인 경험 공유","description":"","date":"2024-05-16 03:56","slug":"2024-05-16-SolvingPermissionIssuesinmacOSWhileBuildingwithExpoAPersonalExperience","content":"\n\n# 소개\n\nReact Native 프로젝트에서 작업하는 개발자로서, macOS에서 네이티브 모듈 및 종속성을 다룰 때 허가 관련 문제에 직면할 수 있습니다. 최근에는 Expo 프로젝트를 위한 네이티브 iOS 폴더를 생성하는 동안 이 문제에 직면했습니다. 제 경험의 단계별 설명과 문제를 해결한 방법을 소개하겠습니다. 여러분에게도 도움이 되기를 바랍니다.\n\n# 문제\n\nmacOS에서 Expo 프로젝트의 네이티브 환경을 설정하는 동안 여러 문제를 겪게 되었습니다.\n\n\n\n- 초기 설정: 내 맥에 Node.js, Expo 또는 EAS CLI가 설치되지 않았습니다 (새 맥북).\n- sudo로 설치: Expo 및 EAS를 설치하기 위해 sudo를 사용했더니 소유권 관련 문제가 발생했습니다.\n- 권한 오류: 이 문제로 인해 CocoaPods 및 기타 종속성이 성공적으로 설치되는 것을 방해하는 권한 오류가 발생했습니다.\n\n# 문제 해결 단계\n\n## 단계 1: 문제 파악\n\nnpm 패키지를 설치할 때 sudo를 사용하면 파일이 루트 사용자에 의해 소유된 상태가 될 수 있습니다. 이 소유권 불일치로 인해 이후에 해당 패키지를 실행하거나 수정할 때 권한 오류가 발생할 수 있습니다. 문제를 식별하고 해결한 방법은 다음과 같습니다.\n\n\n\n## 단계 2: 전역으로 설치된 패키지 제거하기\n\n먼저, sudo를 사용하여 설치된 전역 패키지를 제거해야 했어요.\n\n```js\nsudo npm uninstall -g expo-cli eas-cli\n```\n\n## 단계 3: 디렉토리 소유권 변경하기\n\n\n\n저는 권한 문제를 피하기 위해 프로젝트 디렉토리를 내 사용자 계정의 소유로 설정했어요.\n\n터미널을 열어주세요: 프로젝트가 있는 디렉토리로 이동해주세요.\n\n소유권 변경:\n\n```bash\nsudo chown -R 당신의사용자이름:당신의그룹 /Users/ociuz/Documents/nss-kuwait\n```\n\n\n\n## 단계 4: Expo와 EAS CLI를 sudo 없이 설치하기\n\n다음으로, sudo를 사용하지 않고 Expo와 EAS CLI를 다시 설치했습니다.\n\n```js\nnpm install -g expo-cli eas-cli\nrm -rf /Users/{username}/.npm/_cacache/content-v2/sha512/5b/e8\n```\n\n\n\n두 번째 명령어는 sudo를 사용하여 생성된 캐시와 파일을 제거하는 것입니다. 이를 본인의 경로로 교체해야 합니다.\n\n## 단계 5: 엑스포 미리 빌드\n\n그런 다음 미리 빌드를 실행하세요.\n\n```js\nnpx expo prebuild\n```\n\n\n\n맨 처음에는 CocoaPods 설치가 실패했지만 재시도에서 성공했습니다.\n\n이제 android와 ios 폴더가 생겼을 것입니다.\n\n# 결론\n\n위 단계를 따라서 Expo를 사용하면서 macOS에서 권한 문제를 성공적으로 해결했습니다. 올바른 소유권을 보장하고 개발 도구 설치 시 sudo를 피하는 것이 원활한 설정 과정의 핵심이었습니다. 유사한 문제를 겪으면 이 단계를 시도하고 환경이 올바르게 구성되었는지 확인하세요.\n\n\n\n# 추가 팁\n\n- npm 사용 시 sudo 사용 피하기: 전역으로 npm 패키지를 설치할 때는 sudo 사용을 피하는 것이 일반적으로 좋은 관행입니다. 대신, npm을 홈 디렉터리에 패키지를 설치하도록 구성하세요.\n- 권한 정기적으로 확인하기: 프로젝트 디렉토리의 권한을 주기적으로 확인하여 예상치 못한 문제를 방지하세요.\n- 버전 관리 사용하기: Git과 같은 버전 관리 시스템을 사용하여 데이터 손실을 방지하고 변경 사항을 추적하세요.\n\n이 가이드가 당신의 개발 작업에서 권한 문제를 탐색하고 해결하는 데 도움이 되기를 바라며, 질문이나 추가 팁이 있다면 아래 댓글에서 자유롭게 공유해 주세요!","ogImage":{"url":"/assets/img/2024-05-16-SolvingPermissionIssuesinmacOSWhileBuildingwithExpoAPersonalExperience_0.png"},"coverImage":"/assets/img/2024-05-16-SolvingPermissionIssuesinmacOSWhileBuildingwithExpoAPersonalExperience_0.png","tag":["Tech"],"readingTime":2},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"소개\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React Native 프로젝트에서 작업하는 개발자로서, macOS에서 네이티브 모듈 및 종속성을 다룰 때 허가 관련 문제에 직면할 수 있습니다. 최근에는 Expo 프로젝트를 위한 네이티브 iOS 폴더를 생성하는 동안 이 문제에 직면했습니다. 제 경험의 단계별 설명과 문제를 해결한 방법을 소개하겠습니다. 여러분에게도 도움이 되기를 바랍니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"문제\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"macOS에서 Expo 프로젝트의 네이티브 환경을 설정하는 동안 여러 문제를 겪게 되었습니다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"초기 설정: 내 맥에 Node.js, Expo 또는 EAS CLI가 설치되지 않았습니다 (새 맥북).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"sudo로 설치: Expo 및 EAS를 설치하기 위해 sudo를 사용했더니 소유권 관련 문제가 발생했습니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"권한 오류: 이 문제로 인해 CocoaPods 및 기타 종속성이 성공적으로 설치되는 것을 방해하는 권한 오류가 발생했습니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"문제 해결 단계\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 1: 문제 파악\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"npm 패키지를 설치할 때 sudo를 사용하면 파일이 루트 사용자에 의해 소유된 상태가 될 수 있습니다. 이 소유권 불일치로 인해 이후에 해당 패키지를 실행하거나 수정할 때 권한 오류가 발생할 수 있습니다. 문제를 식별하고 해결한 방법은 다음과 같습니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 2: 전역으로 설치된 패키지 제거하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"먼저, sudo를 사용하여 설치된 전역 패키지를 제거해야 했어요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"sudo npm uninstall -g expo-cli eas-cli\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 3: 디렉토리 소유권 변경하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"저는 권한 문제를 피하기 위해 프로젝트 디렉토리를 내 사용자 계정의 소유로 설정했어요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"터미널을 열어주세요: 프로젝트가 있는 디렉토리로 이동해주세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"소유권 변경:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-bash\",\n        children: [\"sudo \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"chown\"\n        }), \" -R 당신의사용자이름:당신의그룹 /Users/ociuz/Documents/nss-kuwait\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 4: Expo와 EAS CLI를 sudo 없이 설치하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음으로, sudo를 사용하지 않고 Expo와 EAS CLI를 다시 설치했습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"npm install -g expo-cli eas-cli\\nrm -rf /\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Users\"\n        }), \"/{username}/.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"npm\"\n        }), \"/_cacache/content-v2/sha512/5b/e8\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"두 번째 명령어는 sudo를 사용하여 생성된 캐시와 파일을 제거하는 것입니다. 이를 본인의 경로로 교체해야 합니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계 5: 엑스포 미리 빌드\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그런 다음 미리 빌드를 실행하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npx expo prebuild\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"맨 처음에는 CocoaPods 설치가 실패했지만 재시도에서 성공했습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 android와 ios 폴더가 생겼을 것입니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"위 단계를 따라서 Expo를 사용하면서 macOS에서 권한 문제를 성공적으로 해결했습니다. 올바른 소유권을 보장하고 개발 도구 설치 시 sudo를 피하는 것이 원활한 설정 과정의 핵심이었습니다. 유사한 문제를 겪으면 이 단계를 시도하고 환경이 올바르게 구성되었는지 확인하세요.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"추가 팁\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"npm 사용 시 sudo 사용 피하기: 전역으로 npm 패키지를 설치할 때는 sudo 사용을 피하는 것이 일반적으로 좋은 관행입니다. 대신, npm을 홈 디렉터리에 패키지를 설치하도록 구성하세요.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"권한 정기적으로 확인하기: 프로젝트 디렉토리의 권한을 주기적으로 확인하여 예상치 못한 문제를 방지하세요.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"버전 관리 사용하기: Git과 같은 버전 관리 시스템을 사용하여 데이터 손실을 방지하고 변경 사항을 추적하세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 가이드가 당신의 개발 작업에서 권한 문제를 탐색하고 해결하는 데 도움이 되기를 바라며, 질문이나 추가 팁이 있다면 아래 댓글에서 자유롭게 공유해 주세요!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}