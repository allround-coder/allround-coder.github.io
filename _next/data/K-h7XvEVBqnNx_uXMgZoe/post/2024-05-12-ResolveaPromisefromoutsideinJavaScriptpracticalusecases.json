{"pageProps":{"post":{"title":"자바스크립트에서 외부에서 프로미스 해결하기 실용적인 사용 예시","description":"","date":"2024-05-12 23:51","slug":"2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases","content":"\n\n\n![Image](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_0.png)\n\nIt's one of those cool things you can do in JavaScript that's immensely powerful in the real world.\n\n# Powerful practical use cases\n\n## Action (A) waiting for another (B)\n\n\n\nA는 진행 중입니다만 사용자는 B를 하고 싶지만 A가 먼저 발생해야 합니다.\n\n예시: 사용자가 게시물을 생성, 저장 및 게시할 수 있는 소셜 앱. 마치 Medium처럼.\n\n![이미지1](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_1.png)\n\n![이미지2](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_2.png)\n\n\n\n만약 사용자가 저장 중에 게시물을 발행하길 원한다면 어떻게 할까요?\n\n해결책: 발행되기 전에 게시물이 저장되도록 확인하세요.\n\n![이미지](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_3.png)\n\n![이미지](https://miro.medium.com/v2/resize:fit:588/0*u7Littlul1VVDuUU.gif)\n\n\n\n이 논리를 Deffered 클래스로 추상화하면 더욱 좋아집니다:\n\n![이미지](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_4.png)\n\n리팩토링✅:\n\n![이미지](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_5.png)\n\n\n\n그리고 이전과 정확히 같이 작동합니다:\n\n![image](https://miro.medium.com/v2/resize:fit:588/0*dv5w4HYCmh1giS5w.gif)\n\nDeferred는 훨씬 깔끔합니다. 그래서 우리는 ts-deferred, deferred, promise-deferred와 같은 수많은 NPM 라이브러리를 가지고 있습니다.\n\n![image](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_6.png)\n\n\n\n## 이벤트 스트림 Promisifying하기\n\n이건 내가 여러 번 사용해 본 멋진 설정이야.\n\n실제로 이벤트 스트림이 발생할 때 대기하는 비동기 작업을 수행하는 것입니다. 내부적으로:\n\n![이미지](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_7.png)\n\n\n\n# 마무리\n\n외부에서 약속을 이행하는 것은 강력한 패턴을 발휘합니다.\n\n사용자 조치부터 이벤트 스트림까지 깔끔하고 유연한 코드를 유지합니다. 그리고 ts-deferred와 같은 라이브러리를 사용하면 더 나은 처리가 가능합니다.\n\n# 자바스크립트가 하는 모든 미친 일\n\n\n\n알고 있던 것이 모두라 생각했을 때 새로운 것을 알려드릴게요.\n자바스크립트의 세심한 주의사항과 잘 알려지지 않은 부분들을 담은 Every Crazy Thing JavaScript Does 가이드로 고통스러운 버그를 피하고 소중한 시간을 절약하세요.\n\n오늘 여기서 무료로 받아보세요.\n\n![이미지](/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_8.png)","ogImage":{"url":"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_0.png"},"coverImage":"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_0.png","tag":["Tech"],"readingTime":2},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_0.png\",\n        alt: \"Image\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It's one of those cool things you can do in JavaScript that's immensely powerful in the real world.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Powerful practical use cases\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Action (A) waiting for another (B)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A는 진행 중입니다만 사용자는 B를 하고 싶지만 A가 먼저 발생해야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"예시: 사용자가 게시물을 생성, 저장 및 게시할 수 있는 소셜 앱. 마치 Medium처럼.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_1.png\",\n        alt: \"이미지1\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_2.png\",\n        alt: \"이미지2\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"만약 사용자가 저장 중에 게시물을 발행하길 원한다면 어떻게 할까요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해결책: 발행되기 전에 게시물이 저장되도록 확인하세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_3.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:588/0*u7Littlul1VVDuUU.gif\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 논리를 Deffered 클래스로 추상화하면 더욱 좋아집니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_4.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"리팩토링✅:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_5.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그리고 이전과 정확히 같이 작동합니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:588/0*dv5w4HYCmh1giS5w.gif\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Deferred는 훨씬 깔끔합니다. 그래서 우리는 ts-deferred, deferred, promise-deferred와 같은 수많은 NPM 라이브러리를 가지고 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_6.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"이벤트 스트림 Promisifying하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이건 내가 여러 번 사용해 본 멋진 설정이야.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"실제로 이벤트 스트림이 발생할 때 대기하는 비동기 작업을 수행하는 것입니다. 내부적으로:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_7.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"마무리\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"외부에서 약속을 이행하는 것은 강력한 패턴을 발휘합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사용자 조치부터 이벤트 스트림까지 깔끔하고 유연한 코드를 유지합니다. 그리고 ts-deferred와 같은 라이브러리를 사용하면 더 나은 처리가 가능합니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"자바스크립트가 하는 모든 미친 일\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"알고 있던 것이 모두라 생각했을 때 새로운 것을 알려드릴게요.\\n자바스크립트의 세심한 주의사항과 잘 알려지지 않은 부분들을 담은 Every Crazy Thing JavaScript Does 가이드로 고통스러운 버그를 피하고 소중한 시간을 절약하세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"오늘 여기서 무료로 받아보세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ResolveaPromisefromoutsideinJavaScriptpracticalusecases_8.png\",\n        alt: \"이미지\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}