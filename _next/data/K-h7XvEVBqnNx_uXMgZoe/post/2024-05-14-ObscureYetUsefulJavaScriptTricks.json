{"pageProps":{"post":{"title":"흥미로운 자바스크립트 요령들","description":"","date":"2024-05-14 13:39","slug":"2024-05-14-ObscureYetUsefulJavaScriptTricks","content":"\n\n<img src=\"/assets/img/2024-05-14-ObscureYetUsefulJavaScriptTricks_0.png\" />\n\n제가 매일 업무 중에 수집한 약간 낯설지만 유용한 JavaScript 트릭 몇 가지를 소개해드릴게요. 이 모든 트릭들은 간결하고 우아한 한 줄짜리 코드들입니다. 이 트릭들이 여러분의 JavaScript 개발에 조금 도움이 될 수 있다고 믿어요.\n\n# 웹\n\n## 현재 페이지 다시 불러오기\n\n\n\n```js\nconst reload = () => location.reload();\nreload()\n```\n\n## 페이지 맨 위로 이동하기\n\n페이지를 맨 위로 가져와야 하는 경우\n\n```js\nconst goToTop = () => window.scrollTo(0, 0);\n\ngoToTop()\n```\n\n\n\n## 요소 스크롤링\n\n요소를 부드럽게 스크롤하여 뷰포트의 시작 지점으로 이동하려면\n\n```js\nconst scrollToTop = (element) =>\n  element.scrollIntoView({ behavior: \"smooth\", block: \"start\" })\n\nscrollToTop(document.body)\n```\n\n요소를 부드럽게 스크롤하여 뷰포트의 끝 지점으로 이동하려면\n\n\n\n```js\nconst scrollToBottom = (element) =>\n  element.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\nscrollToBottom(document.body);\n```\n\n## 현재 브라우저가 인터넷 익스플로러인지 확인하기\n\n```js\nconst isIE = !!document.documentMode;\n```\n\n## 주어진 텍스트에서 HTML 태그 제거하기```\n\n\n\n단어로 마크업 태그들을 걸러내야 할 때\n\n```js\nconst stripHtml = (html) => new DOMParser().parseFromString(html, 'text/html').body.textContent || '';\n\nstripHtml('<div>test</div>') // 'test'\n```\n\n## 리다이렉트\n\n다른 페이지로 이동할 때.\n\n\n\n## 텍스트 붙여넣기\n\n클립보드에 텍스트를 복사해야 할 때\n\n```js\nconst copy = (text) => navigator.clipboard?.writeText && navigator.clipboard.writeText(text)\ncopy('당신이 붙여넣어야 할 텍스트')\n```\n\n\n\n# 기능\n\n## 비동기 함수 확인\n\n함수가 비동기인지 확인하려면\n\n```js\nconst isAsyncFunction = (v) => Object.prototype.toString.call(v) === '[object AsyncFunction]'\n\nisAsyncFunction(async function () {}); // true\n```\n\n\n\n# 숫자\n\n## 숫자 자르기\n\n소수점 이후 특정 자릿수를 버릴 때 반올림하지 않고 잘라야 할 때\n\n```js\nconst toFixed = (n, fixed) => `${n}`.match(new RegExp(`^-?\\d+(?:.\\d{0,${fixed})?`))[0]\n\ntoFixed(10.255, 2) // 10.25\n```\n\n\n\n## 가장 가까운 수로 반올림\n\n소수점 이후의 특정 자릿수를 버리고 가장 가까운 수로 반올림해야 하는 경우\n\n```js\nconst round = (n, decimals = 0) => Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`)\n\nround(10.255, 2) // 10.26\n```\n\n## Zero padding\n\n\n\n숫자 'num'을 'len' 자릿수가 될 때까지 앞에 0을 채우고 싶을 때\n\n```js\nconst replenishZero = (num, len, zero = 0) => num.toString().padStart(len, zero)\n\nreplenishZero(8, 2) // 08\n```\n\n# 객체\n\n## 잘못된 속성 삭제\n\n\n\n객체 내 값이 null 또는 정의되지 않은 속성들을 모두 삭제해야 할 때\n\n```js\nconst removeNullUndefined = (obj) => Object.entries(obj).reduce((a, [k, v]) => (v == null ? a : ((a[k] = v), a)), {});\n\nremoveNullUndefined({name: '', age: undefined, sex: null}) // { name: '' }\n```\n\n## 객체 키-값 쌍 반전\n\n객체의 키-값 쌍을 교환해야 할 때\n\n\n\n```js\nconst invert = (obj) => Object.keys(obj).reduce((res, k) => Object.assign(res, { [obj[k]]: k }), {})\n\ninvert({name: 'jack'}) // {jack: 'name'}\n```\n\n## 문자열을 객체로 변환하기\n\n'이름: \"jack\"'과 같은 문자열을 객체로 변환해야할 때는 JSON.parse를 직접 사용하면 오류가 발생할 수 있습니다.\n\n```js\nconst strParse = (str) => JSON.parse(str.replace(/(\\w+)\\s*:/g, (_, p1) => `\"${p1}\":`).replace(/\\'/g, \"\\\"\"))\n\nstrParse('{name: \"jack\"}')\n```\n\n\n\n# 날짜\n\n## 오늘 날짜인지 확인하기.\n\n```js\nconst isToday = (date) => date.toISOString().slice(0, 10) === new Date().toISOString().slice(0, 10)\n```\n\n## 날짜 변환\n\n\n\n날짜를 YYYY-MM-DD 형식으로 변환해야 할 때\n\n```js\nconst formatYmd = (date) => date.toISOString().slice(0, 10);\nformatYmd(new Date())\n```\n\n## 두 번째 변환\n\n시간(초)를 hh:mm:ss 형식으로 변환해야 할 때\n\n\n\n```js\nconst formatSeconds = (s) => new Date(s * 1000).toISOString().substr(11, 8)\n\nformatSeconds(200) // 00:03:20\n```\n\n## 특정 연도와 월의 첫 번째 날을 가져오기\n\n```js\nconst getFirstDate = (d = new Date()) => new Date(d.getFullYear(), d.getMonth(), 1);\n\ngetFirstDate(new Date('2024/05')) \n```\n\n## 특정 연도와 월의 마지막 날을 가져오기\n\n\n\n\n```js\nconst getLastDate = (d = new Date()) => new Date(d.getFullYear(), d.getMonth() + 1, 0);\ngetLastDate(new Date('2023/03/04')) \n```\n\n## 특정 연도의 특정 월의 전체 일 수 구하기\n\n```js\nconst getDaysNum = (year, month) => new Date(year, month, 0).getDate()  \nconst day = getDaysNum(2024, 2) // 29\n```\n\n# 배열\n\n\n\n## 배열 생성하기\n\n0부터 99까지의 배열이 필요할 때 아래의 코드를 사용하세요.\n\n```js\n// 방법1\nconst createArr = (n) => Array.from(new Array(n), (v, i) => i)\nconst arr = createArr(100)\n```\n\n```js\n// 방법2\nconst createArr = (n) => new Array(n).fill(0).map((v, i) => i)\ncreateArr(100)\n```\n\n\n\n## 배열 섞기\n\n배열이 있고 순서를 섞어야 할 때\n\n```js\nconst randomSort = list => list.sort(() => Math.random() - 0.5)\nrandomSort([0,1,2,3,4,5,6,7,8,9]) // 무작위 순열 결과\n```\n\n## 간단한 배열 중복 제거\n\n\n\n배열에서 각 중복 요소의 인스턴스를 하나만 유지해야 할 때\n\n```js\nconst removeDuplicates = list => [...new Set(list)]\nremoveDuplicates([0, 0, 2, 4, 5]) // [0,2,4,5]\n```\n\n## 배열의 고유한 값 중복 제거\n\n고유한 값에 기반하여 배열에서 중복을 제거합니다.\n\n\n\n```js\nconst duplicateById = list => [...list.reduce((prev, cur) => prev.set(cur.id, cur), new Map()).values()]\nduplicateById([{id: 1, name: 'jack'}, {id: 2, name: 'rose'}, {id: 1, name: 'jack'}])\n// [{id: 1, name: 'jack'}, {id: 2, name: 'rose'}]\n```\n\n## 여러 배열의 교집합\n\n여러 배열의 교집합을 찾아야 할 때\n\n```js\nconst intersection = (a, ...arr) => [...new Set(a)].filter((v) => arr.every((b) => b.includes(v)))\n\nintersection([1, 2, 3, 4], [2, 3, 4, 7, 8], [1, 3, 4, 9])\n// [3, 4]\n```\n\n\n\n## 최대 값의 인덱스 찾기\n\n배열에서 최대 값의 인덱스를 찾아야 할 때\n\n```js\nconst indexOfMax = (arr) => arr.reduce((prev, curr, i, a) => (curr > a[prev] ? i : prev), 0);\nindexOfMax([1, 3, 9, 7, 5]); // 2\n```\n\n## 최소 값의 인덱스 찾기\n\n\n\n배열에서 최솟값의 인덱스를 찾아야 할 때\n\n```js\nconst indexOfMin = (arr) => arr.reduce((prev, curr, i, a) => (curr < a[prev] ? i : prev), 0)\nindexOfMin([2, 5, 3, 4, 1, 0, 9]) // 5\n```\n\n## 가장 가까운 숫자 값 찾기\n\n배열에서 주어진 숫자에 가장 가까운 값을 찾아야 할 때\n\n\n\n```js\nconst closest = (arr, n) => arr.reduce((prev, curr) => (Math.abs(curr - n) < Math.abs(prev - n) ? curr : prev))\nclosest([29, 87, 8, 78, 97, 20, 75, 33, 24, 17], 50) // 33\n```\n\n## 여러 배열을 압축하기\n\n여러 배열을 하나의 배열로 압축해야 할 때\n\n```js\nconst zip = (...arr) => Array.from({ length: Math.max(...arr.map((a) => a.length)) }, (_, i) => arr.map((a) => a[i]))\nzip([1,2,3,4], ['a', 'b', 'c', 'd'], ['A', 'B', 'C', 'D'])\n// [[1, 'a', 'A'], [2, 'b', 'B'], [3, 'c', 'C'], [4, 'd', 'D']]\n```\n\n\n\n## 행과 열 바꾸기\n\n행과 열을 교환해야 할 때\n\n```js\nconst transpose = (matrix) => matrix[0].map((col, i) => matrix.map((row) => row[i]));\ntranspose(\n    [              // [\n        [1, 2, 3], //      [1, 4, 7],\n        [4, 5, 6], //      [2, 5, 8],\n        [7, 8, 9], //      [3, 6, 9],\n     ]             //  ]\n );\n```\n\n# 숫자 변환\n\n\n\n## 기수 변환\n\n기수 10에서 n으로 변환하려면 toString(n)을 사용할 수 있어요!\n\n```js\nconst toDecimal = (num, n = 10) => num.toString(n) \n// 만약 10을 이진수 (기수 2)로 변환해야 한다면\ntoDecimal(10, 2) // '1010'\n```\n\n기수 n에서 기수 10으로 변환하려면 parseInt(num, n)을 사용할 수 있어요!\n\n\n\n```js\nconst toDecimalism = (num, n = 10) => parseInt(num, n)\ntoDecimalism(1010, 2)\n```\n\n# 기타\n\n## 두 객체 비교하기\n\n두 객체를 비교해야 할 때 JavaScript의 등가 연산자는 객체의 주소가 동일한지만 판단할 수 있습니다. 주소가 다를 경우 두 객체의 키-값 쌍이 동일한지 여부를 판단할 수 없습니다.\n\n\n\n```js\nconst isEqual = (...objects) => objects.every(obj => JSON.stringify(obj) === JSON.stringify(objects[0]))\nisEqual({name: 'jack'}, {name: 'jack'}) // true\nisEqual({name: 'jack'}, {name: 'jack1'}, {name: 'jack'}) // false\n```\n\n## 랜덤 색상 생성\n\n랜덤한 색상이 필요할 때\n\n```js\nconst getRandomColor = () => `#${Math.floor(Math.random() * 0xffffff).toString(16)}`\ngetRandomColor() // '#4c2fd7'\n```\n\n\n\n## 컬러 형식 변환\n\n16진수 색상을 RGB로 변환해야 할 때\n\n```js\nconst hexToRgb = hex => hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (_, r, g, b) => `#${r}${r}${g}${g}${b}${b}`).substring(1).match(/.{2}/g).map((x) => parseInt(x, 16));\nhexToRgb('#00ffff'); // [0, 255, 255]\nhexToRgb('#0ff'); // [0, 255, 255]\n```\n\n## 랜덤 IP 주소 가져오기\n\n\n\nIP 주소를 생성할 때 필요한 함수입니다.\n\n```js\nconst randomIp = () =>\n    Array(4)\n        .fill(0)\n        .map((_, i) => Math.floor(Math.random() * 255) + (i === 0 ? 1 : 0))\n        .join('.');\n```\n\n# UUID\n\nID를 생성할 때 필요한 함수입니다.\n\n\n\n```javascript\nconst uuid = (a) => (a ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid))\nuuid()\n```\n\n## 쿠키 가져오기\n\n쿠키를 객체로 변환해야 할 때\n\n```javascript\nconst getCookie = () => document.cookie\n    .split(';')\n    .map((item) => item.split('='))\n    .reduce((acc, [k, v]) => (acc[k.trim().replace('\"', '')] = v) && acc, {})\ngetCookie()\n```\n\n\n\n## 강제 대기\n\n일정 시간 동안 기다려야 할 때 setTimeout 함수에 작성하고 싶지 않은 경우, 콜백 지옥을 유발할 수 있습니다.\n\n```js\nconst sleep = async (t) => new Promise((resolve) => setTimeout(resolve, t));\nsleep(2000).then(() => {console.log('time')});\n```\n\n# 간단히 말해 🚀\n\n\n\nThank you for being a part of the In Plain English community! Before you go:\n\n- Be sure to clap and follow the writer 👏\n- Follow us: X | LinkedIn | YouTube | Discord | Newsletter\n- Visit our other platforms: Stackademic | CoFeed | Venture | Cubed\n- Tired of blogging platforms that force you to deal with algorithmic content? Try Differ\n- More content at PlainEnglish.io","ogImage":{"url":"/assets/img/2024-05-14-ObscureYetUsefulJavaScriptTricks_0.png"},"coverImage":"/assets/img/2024-05-14-ObscureYetUsefulJavaScriptTricks_0.png","tag":["Tech"],"readingTime":9},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    div: \"div\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"img\", {\n      src: \"/assets/img/2024-05-14-ObscureYetUsefulJavaScriptTricks_0.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"제가 매일 업무 중에 수집한 약간 낯설지만 유용한 JavaScript 트릭 몇 가지를 소개해드릴게요. 이 모든 트릭들은 간결하고 우아한 한 줄짜리 코드들입니다. 이 트릭들이 여러분의 JavaScript 개발에 조금 도움이 될 수 있다고 믿어요.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"웹\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"현재 페이지 다시 불러오기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reload\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => location.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reload\"\n        }), \"();\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reload\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"페이지 맨 위로 이동하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"페이지를 맨 위로 가져와야 하는 경우\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"goToTop\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"window\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollTo\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"goToTop\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"요소 스크롤링\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"요소를 부드럽게 스크롤하여 뷰포트의 시작 지점으로 이동하려면\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollToTop\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"element\"\n        }), \") =>\\n  element.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollIntoView\"\n        }), \"({ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"behavior\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"smooth\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"block\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"start\\\"\"\n        }), \" })\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollToTop\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"body\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"요소를 부드럽게 스크롤하여 뷰포트의 끝 지점으로 이동하려면\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollToBottom\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"element\"\n        }), \") =>\\n  element.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollIntoView\"\n        }), \"({ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"behavior\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"smooth\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"block\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"end\\\"\"\n        }), \" });\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scrollToBottom\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"body\"\n        }), \");\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"현재 브라우저가 인터넷 익스플로러인지 확인하기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" isIE = !!\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"documentMode\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"주어진 텍스트에서 HTML 태그 제거하기```\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단어로 마크업 태그들을 걸러내야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"stripHtml\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"html\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DOMParser\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"parseFromString\"\n        }), \"(html, \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'text/html'\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"body\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"textContent\"\n        }), \" || \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"stripHtml\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'<div>test</div>'\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 'test'\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"리다이렉트\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다른 페이지로 이동할 때.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"텍스트 붙여넣기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"클립보드에 텍스트를 복사해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"copy\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"text\"\n        }), \") => navigator.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"clipboard\"\n        }), \"?.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"writeText\"\n        }), \" && navigator.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"clipboard\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"writeText\"\n        }), \"(text)\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"copy\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'당신이 붙여넣어야 할 텍스트'\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"기능\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"비동기 함수 확인\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"함수가 비동기인지 확인하려면\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isAsyncFunction\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"v\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Object\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"prototype\"\n          })\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"toString\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"call\"\n        }), \"(v) === \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'[object AsyncFunction]'\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isAsyncFunction\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {}); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// true\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"숫자\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"숫자 자르기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"소수점 이후 특정 자릿수를 버릴 때 반올림하지 않고 잘라야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toFixed\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"n, fixed\"\n        }), \") => \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${n}\"\n          }), \"`\"]\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"match\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"RegExp\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`^-?\\\\d+(?:.\\\\d{0,\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${fixed}\"\n          }), \")?`\"]\n        }), \"))[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"]\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toFixed\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10.255\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 10.25\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"가장 가까운 수로 반올림\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"소수점 이후의 특정 자릿수를 버리고 가장 가까운 수로 반올림해야 하는 경우\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"round\"\n        }), \" = (\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"n, decimals = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          })]\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Number\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`\", _jsxs(_components.span, {\n            className: \"hljs-subst\",\n            children: [\"${\", _jsx(_components.span, {\n              className: \"hljs-built_in\",\n              children: \"Math\"\n            }), \".round(\", _jsxs(_components.span, {\n              className: \"hljs-string\",\n              children: [\"`\", _jsx(_components.span, {\n                className: \"hljs-subst\",\n                children: \"${n}\"\n              }), \"e\", _jsx(_components.span, {\n                className: \"hljs-subst\",\n                children: \"${decimals}\"\n              }), \"`\"]\n            }), \")}\"]\n          }), \"e-\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${decimals}\"\n          }), \"`\"]\n        }), \")\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"round\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10.255\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 10.26\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Zero padding\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"숫자 'num'을 'len' 자릿수가 될 때까지 앞에 0을 채우고 싶을 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replenishZero\"\n        }), \" = (\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"num, len, zero = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          })]\n        }), \") => num.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toString\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"padStart\"\n        }), \"(len, zero)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replenishZero\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 08\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"객체\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"잘못된 속성 삭제\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"객체 내 값이 null 또는 정의되지 않은 속성들을 모두 삭제해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeNullUndefined\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"obj\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Object\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"entries\"\n        }), \"(obj).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"a, [k, v]\"\n          }), \") =>\"]\n        }), \" (v == \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \" ? a : ((a[k] = v), a)), {});\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeNullUndefined\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"age\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"undefined\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"sex\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \"}) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// { name: '' }\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"객체 키-값 쌍 반전\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"객체의 키-값 쌍을 교환해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"invert\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"obj\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Object\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"keys\"\n        }), \"(obj).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"res, k\"\n          }), \") =>\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Object\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"assign\"\n        }), \"(res, { [obj[k]]: k }), {})\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"invert\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// {jack: 'name'}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"문자열을 객체로 변환하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"'이름: \\\"jack\\\"'과 같은 문자열을 객체로 변환해야할 때는 JSON.parse를 직접 사용하면 오류가 발생할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"strParse\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"str\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"JSON\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"parse\"\n        }), \"(str.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replace\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/(\\\\w+)\\\\s*:/g\"\n        }), \", \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"_, p1\"\n          }), \") =>\"]\n        }), \" \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`\\\"\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${p1}\"\n          }), \"\\\":`\"]\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replace\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/\\\\'/g\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\\\\\"\\\"\"\n        }), \"))\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"strParse\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'{name: \\\"jack\\\"}'\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"날짜\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"오늘 날짜인지 확인하기.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isToday\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"date\"\n        }), \") => date.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toISOString\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"slice\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \") === \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toISOString\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"slice\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"날짜 변환\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"날짜를 YYYY-MM-DD 형식으로 변환해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"formatYmd\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"date\"\n        }), \") => date.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toISOString\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"slice\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"formatYmd\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"())\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"두 번째 변환\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"시간(초)를 hh:mm\", _jsx(_components.div, {}), \" 형식으로 변환해야 할 때\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"formatSeconds\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"s\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"(s * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1000\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toISOString\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"substr\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"11\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \")\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"formatSeconds\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"200\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 00:03:20\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"특정 연도와 월의 첫 번째 날을 가져오기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getFirstDate\"\n        }), \" = (\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"d = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"Date\"\n          }), \"()\"]\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"(d.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getFullYear\"\n        }), \"(), d.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getMonth\"\n        }), \"(), \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \");\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getFirstDate\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'2024/05'\"\n        }), \")) \\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"특정 연도와 월의 마지막 날을 가져오기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getLastDate\"\n        }), \" = (\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"d = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"Date\"\n          }), \"()\"]\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"(d.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getFullYear\"\n        }), \"(), d.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getMonth\"\n        }), \"() + \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getLastDate\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'2023/03/04'\"\n        }), \")) \\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"특정 연도의 특정 월의 전체 일 수 구하기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getDaysNum\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"year, month\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"(year, month, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getDate\"\n        }), \"()  \\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" day = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getDaysNum\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2024\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 29\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"배열\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"배열 생성하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"0부터 99까지의 배열이 필요할 때 아래의 코드를 사용하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 방법1\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createArr\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"n\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Array\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"from\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Array\"\n        }), \"(n), \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"v, i\"\n          }), \") =>\"]\n        }), \" i)\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" arr = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createArr\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 방법2\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createArr\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"n\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Array\"\n        }), \"(n).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fill\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"v, i\"\n          }), \") =>\"]\n        }), \" i)\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"createArr\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"100\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"배열 섞기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"배열이 있고 순서를 섞어야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"randomSort\"\n        }), \" = list => list.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"sort\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"random\"\n        }), \"() - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.5\"\n        }), \")\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"randomSort\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"7\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"9\"\n        }), \"]) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 무작위 순열 결과\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"간단한 배열 중복 제거\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"배열에서 각 중복 요소의 인스턴스를 하나만 유지해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeDuplicates\"\n        }), \" = list => [...\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Set\"\n        }), \"(list)]\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeDuplicates\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \"]) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [0,2,4,5]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"배열의 고유한 값 중복 제거\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"고유한 값에 기반하여 배열에서 중복을 제거합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"duplicateById\"\n        }), \" = list => [...list.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"prev, cur\"\n          }), \") =>\"]\n        }), \" prev.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"set\"\n        }), \"(cur.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"id\"\n        }), \", cur), \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Map\"\n        }), \"()).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"values\"\n        }), \"()]\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"duplicateById\"\n        }), \"([{\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}, {\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'rose'\"\n        }), \"}, {\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}])\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [{id: 1, name: 'jack'}, {id: 2, name: 'rose'}]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"여러 배열의 교집합\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"여러 배열의 교집합을 찾아야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"intersection\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"a, ...arr\"\n        }), \") => [...\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Set\"\n        }), \"(a)].\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"filter\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"v\"\n          }), \") =>\"]\n        }), \" arr.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"every\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"b\"\n          }), \") =>\"]\n        }), \" b.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"includes\"\n        }), \"(v)))\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"intersection\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \"], [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"7\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \"], [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"9\"\n        }), \"])\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [3, 4]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"최대 값의 인덱스 찾기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"배열에서 최대 값의 인덱스를 찾아야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"indexOfMax\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"arr\"\n        }), \") => arr.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"prev, curr, i, a\"\n          }), \") =>\"]\n        }), \" (curr > a[prev] ? i : prev), \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \");\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"indexOfMax\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"9\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"7\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \"]); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 2\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"최소 값의 인덱스 찾기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"배열에서 최솟값의 인덱스를 찾아야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"indexOfMin\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"arr\"\n        }), \") => arr.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"prev, curr, i, a\"\n          }), \") =>\"]\n        }), \" (curr < a[prev] ? i : prev), \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \")\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"indexOfMin\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"9\"\n        }), \"]) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 5\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"가장 가까운 숫자 값 찾기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"배열에서 주어진 숫자에 가장 가까운 값을 찾아야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"closest\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"arr, n\"\n        }), \") => arr.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"prev, curr\"\n          }), \") =>\"]\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"abs\"\n        }), \"(curr - n) < \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"abs\"\n        }), \"(prev - n) ? curr : prev))\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"closest\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"29\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"87\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"78\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"97\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"75\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"33\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"24\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"17\"\n        }), \"], \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 33\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"여러 배열을 압축하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"여러 배열을 하나의 배열로 압축해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"zip\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"...arr\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Array\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"from\"\n        }), \"({ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"length\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"max\"\n        }), \"(...arr.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"a\"\n          }), \") =>\"]\n        }), \" a.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"length\"\n        }), \")) }, \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"_, i\"\n          }), \") =>\"]\n        }), \" arr.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"a\"\n          }), \") =>\"]\n        }), \" a[i]))\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"zip\"\n        }), \"([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \",\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \"], [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'a'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'b'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'c'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'d'\"\n        }), \"], [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'A'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'B'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'C'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'D'\"\n        }), \"])\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [[1, 'a', 'A'], [2, 'b', 'B'], [3, 'c', 'C'], [4, 'd', 'D']]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"행과 열 바꾸기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"행과 열을 교환해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"transpose\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"matrix\"\n        }), \") => matrix[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"col, i\"\n          }), \") =>\"]\n        }), \" matrix.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"row\"\n          }), \") =>\"]\n        }), \" row[i]));\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"transpose\"\n        }), \"(\\n    [              \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [\"\n        }), \"\\n        [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"], \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//      [1, 4, 7],\"\n        }), \"\\n        [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \"], \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//      [2, 5, 8],\"\n        }), \"\\n        [\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"7\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"9\"\n        }), \"], \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//      [3, 6, 9],\"\n        }), \"\\n     ]             \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//  ]\"\n        }), \"\\n );\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"숫자 변환\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"기수 변환\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"기수 10에서 n으로 변환하려면 toString(n)을 사용할 수 있어요!\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toDecimal\"\n        }), \" = (\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"num, n = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"10\"\n          })]\n        }), \") => num.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toString\"\n        }), \"(n) \\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 만약 10을 이진수 (기수 2)로 변환해야 한다면\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toDecimal\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \") \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// '1010'\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"기수 n에서 기수 10으로 변환하려면 parseInt(num, n)을 사용할 수 있어요!\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toDecimalism\"\n        }), \" = (\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"num, n = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"10\"\n          })]\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"parseInt\"\n        }), \"(num, n)\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toDecimalism\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1010\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"기타\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"두 객체 비교하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"두 객체를 비교해야 할 때 JavaScript의 등가 연산자는 객체의 주소가 동일한지만 판단할 수 있습니다. 주소가 다를 경우 두 객체의 키-값 쌍이 동일한지 여부를 판단할 수 없습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isEqual\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"...objects\"\n        }), \") => objects.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"every\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"obj\"\n          }), \" =>\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"JSON\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"stringify\"\n        }), \"(obj) === \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"JSON\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"stringify\"\n        }), \"(objects[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"]))\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isEqual\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}, {\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// true\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isEqual\"\n        }), \"({\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}, {\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack1'\"\n        }), \"}, {\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'jack'\"\n        }), \"}) \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// false\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"랜덤 색상 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"랜덤한 색상이 필요할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getRandomColor\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`#\", _jsxs(_components.span, {\n            className: \"hljs-subst\",\n            children: [\"${\", _jsx(_components.span, {\n              className: \"hljs-built_in\",\n              children: \"Math\"\n            }), \".floor(\", _jsx(_components.span, {\n              className: \"hljs-built_in\",\n              children: \"Math\"\n            }), \".random() * \", _jsx(_components.span, {\n              className: \"hljs-number\",\n              children: \"0xffffff\"\n            }), \").toString(\", _jsx(_components.span, {\n              className: \"hljs-number\",\n              children: \"16\"\n            }), \")}\"]\n          }), \"`\"]\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getRandomColor\"\n        }), \"() \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// '#4c2fd7'\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"컬러 형식 변환\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"16진수 색상을 RGB로 변환해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"hexToRgb\"\n        }), \" = hex => hex.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replace\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/^#?([a-f\\\\d])([a-f\\\\d])([a-f\\\\d])$/i\"\n        }), \", \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"_, r, g, b\"\n          }), \") =>\"]\n        }), \" \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`#\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${r}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${r}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${g}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${g}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${b}\"\n          }), _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${b}\"\n          }), \"`\"]\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"substring\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"match\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/.{2}/g\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"x\"\n          }), \") =>\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"parseInt\"\n        }), \"(x, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"16\"\n        }), \"));\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"hexToRgb\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'#00ffff'\"\n        }), \"); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [0, 255, 255]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"hexToRgb\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'#0ff'\"\n        }), \"); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// [0, 255, 255]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"랜덤 IP 주소 가져오기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"IP 주소를 생성할 때 필요한 함수입니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"randomIp\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") =>\\n    \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Array\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \")\\n        .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fill\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \")\\n        .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"_, i\"\n          }), \") =>\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"floor\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"random\"\n        }), \"() * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"255\"\n        }), \") + (i === \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" ? \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"))\\n        .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"join\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'.'\"\n        }), \");\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"UUID\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"ID를 생성할 때 필요한 함수입니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"uuid\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"a\"\n        }), \") => (a ? (a ^ ((\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Math\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"random\"\n        }), \"() * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"16\"\n        }), \") >> (a / \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \"))).\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"toString\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"16\"\n        }), \") : ([\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1e7\"\n        }), \"] + -\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1e3\"\n        }), \" + -\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4e3\"\n        }), \" + -\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8e3\"\n        }), \" + -\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1e11\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replace\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/[018]/g\"\n        }), \", uuid))\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"uuid\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"쿠키 가져오기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"쿠키를 객체로 변환해야 할 때\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-javascript\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getCookie\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"document\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cookie\"\n        }), \"\\n    .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"split\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"';'\"\n        }), \")\\n    .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"map\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"item\"\n          }), \") =>\"]\n        }), \" item.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"split\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'='\"\n        }), \"))\\n    .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reduce\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"acc, [k, v]\"\n          }), \") =>\"]\n        }), \" (acc[k.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"trim\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"replace\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'\\\"'\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \")] = v) && acc, {})\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getCookie\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"강제 대기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"일정 시간 동안 기다려야 할 때 setTimeout 함수에 작성하고 싶지 않은 경우, 콜백 지옥을 유발할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"sleep\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"t\"\n        }), \") => \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"resolve\"\n          }), \") =>\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"setTimeout\"\n        }), \"(resolve, t));\\n\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"sleep\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2000\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'time'\"\n        }), \")});\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"간단히 말해 🚀\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Thank you for being a part of the In Plain English community! Before you go:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be sure to clap and follow the writer 👏\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Follow us: X | LinkedIn | YouTube | Discord | Newsletter\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Visit our other platforms: Stackademic | CoFeed | Venture | Cubed\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tired of blogging platforms that force you to deal with algorithmic content? Try Differ\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"More content at PlainEnglish.io\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}