{"pageProps":{"post":{"title":"Reactjs 앱에서 Google 번역 API를 이용한 언어 번역 구현하기","description":"","date":"2024-05-12 22:23","slug":"2024-05-12-BuildingLanguageTranslationinaReactjsAppwithGoogleTranslateAPI","content":"\n\n![이미지](/assets/img/2024-05-12-BuildingLanguageTranslationinaReactjsAppwithGoogleTranslateAPI_0.png)\n\nReact.js 애플리케이션에 언어 번역 기능을 통합하고 싶으신가요? Google Translate API를 사용하면 쉽게 이 목표를 달성할 수 있습니다. React.js 프로젝트에서 언어 번역 기능을 설정하고 구현하는 간단한 단계를 따라보세요.\n\n1. Google Cloud 프로젝트 설정:\n\n- Google Cloud Console로 이동합니다.\n- 새 프로젝트를 생성하거나 기존 프로젝트를 선택합니다.\n- 프로젝트에 \"Cloud Translation API\"를 활성화합니다.\n\n\n\n2. API 키 얻기:\n\n- 클라우드 콘솔에서 “API 및 서비스\" → “자격 증명\"으로 이동합니다.\n- 새 API 키를 생성합니다.\n- API 요청을 만들 때 이 API 키가 필요하므로 이를 접근 가능한 상태로 유지하세요.\n\n3. 종속성 설치:\n\n- React.js 프로젝트의 터미널을 열고 필요한 패키지를 설치하세요.\n\n\n\n```js\nnpm install axios\n```\n\n4. API 요청 생성:\n\n- API 요청을 처리할 새 파일을 만듭니다. 예를 들어 GoogleTranslate.js 파일을 만듭니다.\n- Axios를 활용하여 Google 번역 API로 요청을 보냅니다.\n\n```js\n// GoogleTranslate.js\nimport axios from 'axios';\n\nconst API_KEY = 'YOUR_GOOGLE_TRANSLATE_API_KEY';\nconst API_URL = 'https://translation.googleapis.com/language/translate/v2';\n\nconst translateText = async (text, targetLanguage) => {\n  const response = await axios.post(\n    `${API_URL}?key=${API_KEY}`,\n    {\n      q: text,\n      target: targetLanguage,\n    }\n  );\n\n  return response.data.data.translations[0].translatedText;\n};\n\nexport default translateText;\n```\n\n\n\n## 제목: Google 번역 API를 사용한 React.js 앱에서 언어 번역 기능 구축하기\n\nReact.js 애플리케이션에 언어 번역 기능을 통합하고 싶나요? Google 번역 API를 사용하면 쉽게 이 목표를 달성할 수 있어요. React.js 프로젝트에서 언어 번역 기능을 설정하고 구현하는 간단한 단계를 따라보세요.\n\n1. Google Cloud 프로젝트 설정:\n\n- Google Cloud Console로 이동합니다.\n- 새 프로젝트를 만들거나 기존 프로젝트를 선택합니다.\n- 프로젝트에 \"Cloud 번역 API\"를 활성화합니다.\n\n\n\n2. API 키 얻기:\n\n- 클라우드 콘솔에서 \"API 및 서비스\" > \"자격 증명\"으로 이동합니다.\n- 새 API 키를 생성합니다.\n- API 요청을 만들 때 필요하므로 이 API 키를 접근 가능한 상태로 유지하세요.\n\n3. 종속성 설치:\n\n- React.js 프로젝트의 터미널을 열고 필요한 패키지를 설치하세요:\n\n\n\n```js\nnpm install axios\n```\n\n4. API 요청 생성하기:\n\n- API 요청을 처리하는 새 파일을 만듭니다. 예를 들어, GoogleTranslate.js와 같이 지정할 수 있습니다.\n- Axios를 활용하여 Google 번역 API에 요청을 보냅니다.\n\n```js\nimport axios from 'axios';\n```\n\n\n\n```js\nconst API_KEY = 'YOUR_GOOGLE_TRANSLATE_API_KEY';\nconst API_URL = 'https://translation.googleapis.com/language/translate/v2';\nconst translateText = async (text, targetLanguage) => {\n  const response = await axios.post(\n    `${API_URL}?key=${API_KEY}`,\n    {\n      q: text,\n      target: targetLanguage,\n    }\n  );\n  return response.data.data.translations[0].translatedText;\n};\nexport default translateText;\n```\n\n5. React 컴포넌트에 통합하기:\n\n- React 컴포넌트에서 translateText 함수를 사용합니다.\n- 사용자가 텍스트를 입력하는 input 필드와 대상 언어를 선택하는 드롭다운을 가정합니다.\n- 사용자가 텍스트를 입력하고 언어를 선택하면 번역을 트리거합니다.\n\n```js\n// App.js\nimport React, { useState } from 'react';\nimport translateText from './GoogleTranslate';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('es'); // 기본값: 스페인어\n\n  const handleTranslate = async () => {\n    if (inputText) {\n      const translatedText = await translateText(inputText, targetLanguage);\n      // 번역된 텍스트를 처리합니다. 예: 페이지에 표시\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <select\n        value={targetLanguage}\n        onChange={(e) => setTargetLanguage(e.target.value)}\n      >\n        <option value=\"es\">스페인어</option>\n        <option value=\"fr\">프랑스어</option>\n        {/* 다른 언어 옵션 추가 */}\n      </select>\n      <button onClick={handleTranslate}>번역</button>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n\n\n지금 ‘GoogleTranslate.js’ 파일에 있는 ‘YOUR_GOOGLE_TRANSLATE_API_KEY’를 실제 API 키로 교체하세요. 이제 React.js 애플리케이션을 더욱 향상시킬 수 있는 원활한 언어 번역 기능을 사용할 준비가 끝났습니다!\n\n요약하자면, Google Translate API를 React.js 앱에 통합하면 언어 번역이 간편해지며 전 세계적인 접근성이 향상됩니다. 초기 설정 복잡성에도 불구하고, 이 프로세스는 직관적인 UI 구성 요소로 사용자 친화적인 경험을 제공합니다. 이 방식은 언어 장벽을 허물어 포용력을 키우고 React.js 응용 프로그램에서 다양한 언어 선호도에 대한 유연한 플랫폼을 만듭니다.","ogImage":{"url":"/assets/img/2024-05-12-BuildingLanguageTranslationinaReactjsAppwithGoogleTranslateAPI_0.png"},"coverImage":"/assets/img/2024-05-12-BuildingLanguageTranslationinaReactjsAppwithGoogleTranslateAPI_0.png","tag":["Tech"],"readingTime":4},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-BuildingLanguageTranslationinaReactjsAppwithGoogleTranslateAPI_0.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React.js 애플리케이션에 언어 번역 기능을 통합하고 싶으신가요? Google Translate API를 사용하면 쉽게 이 목표를 달성할 수 있습니다. React.js 프로젝트에서 언어 번역 기능을 설정하고 구현하는 간단한 단계를 따라보세요.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Google Cloud 프로젝트 설정:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Google Cloud Console로 이동합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"새 프로젝트를 생성하거나 기존 프로젝트를 선택합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"프로젝트에 \\\"Cloud Translation API\\\"를 활성화합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"API 키 얻기:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"클라우드 콘솔에서 “API 및 서비스\\\" → “자격 증명\\\"으로 이동합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"새 API 키를 생성합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"API 요청을 만들 때 이 API 키가 필요하므로 이를 접근 가능한 상태로 유지하세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"종속성 설치:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"React.js 프로젝트의 터미널을 열고 필요한 패키지를 설치하세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install axios\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"4\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"API 요청 생성:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"API 요청을 처리할 새 파일을 만듭니다. 예를 들어 GoogleTranslate.js 파일을 만듭니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Axios를 활용하여 Google 번역 API로 요청을 보냅니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// GoogleTranslate.js\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" axios \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'axios'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"API_KEY\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'YOUR_GOOGLE_TRANSLATE_API_KEY'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"API_URL\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'https://translation.googleapis.com/language/translate/v2'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"translateText\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"text, targetLanguage\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" response = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" axios.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"post\"\n        }), \"(\\n    \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${API_URL}\"\n          }), \"?key=\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${API_KEY}\"\n          }), \"`\"]\n        }), \",\\n    {\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"q\"\n        }), \": text,\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"target\"\n        }), \": targetLanguage,\\n    }\\n  );\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" response.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"data\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"data\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"translations\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"translatedText\"\n        }), \";\\n};\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" translateText;\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"제목: Google 번역 API를 사용한 React.js 앱에서 언어 번역 기능 구축하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React.js 애플리케이션에 언어 번역 기능을 통합하고 싶나요? Google 번역 API를 사용하면 쉽게 이 목표를 달성할 수 있어요. React.js 프로젝트에서 언어 번역 기능을 설정하고 구현하는 간단한 단계를 따라보세요.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Google Cloud 프로젝트 설정:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Google Cloud Console로 이동합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"새 프로젝트를 만들거나 기존 프로젝트를 선택합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"프로젝트에 \\\"Cloud 번역 API\\\"를 활성화합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"API 키 얻기:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"클라우드 콘솔에서 \\\"API 및 서비스\\\" > \\\"자격 증명\\\"으로 이동합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"새 API 키를 생성합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"API 요청을 만들 때 필요하므로 이 API 키를 접근 가능한 상태로 유지하세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"종속성 설치:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"React.js 프로젝트의 터미널을 열고 필요한 패키지를 설치하세요:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install axios\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"4\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"API 요청 생성하기:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"API 요청을 처리하는 새 파일을 만듭니다. 예를 들어, GoogleTranslate.js와 같이 지정할 수 있습니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Axios를 활용하여 Google 번역 API에 요청을 보냅니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" axios \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'axios'\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"API_KEY\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'YOUR_GOOGLE_TRANSLATE_API_KEY'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"API_URL\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'https://translation.googleapis.com/language/translate/v2'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"translateText\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"text, targetLanguage\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" response = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" axios.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"post\"\n        }), \"(\\n    \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"`\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${API_URL}\"\n          }), \"?key=\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"${API_KEY}\"\n          }), \"`\"]\n        }), \",\\n    {\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"q\"\n        }), \": text,\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"target\"\n        }), \": targetLanguage,\\n    }\\n  );\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" response.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"data\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"data\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"translations\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"translatedText\"\n        }), \";\\n};\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" translateText;\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"5\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"React 컴포넌트에 통합하기:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"React 컴포넌트에서 translateText 함수를 사용합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"사용자가 텍스트를 입력하는 input 필드와 대상 언어를 선택하는 드롭다운을 가정합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"사용자가 텍스트를 입력하고 언어를 선택하면 번역을 트리거합니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// App.js\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { useState } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" translateText \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./GoogleTranslate'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"App\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [inputText, setInputText] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"''\"\n        }), \");\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [targetLanguage, setTargetLanguage] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'es'\"\n        }), \"); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 기본값: 스페인어\"\n        }), \"\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleTranslate\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (inputText) {\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" translatedText = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"translateText\"\n        }), \"(inputText, targetLanguage);\\n      \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 번역된 텍스트를 처리합니다. 예: 페이지에 표시\"\n        }), \"\\n    }\\n  };\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"input\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text\\\"\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{inputText}\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setInputText(e.target.value)}\\n      />\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"select\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{targetLanguage}\"\n            }), \"\\n        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setTargetLanguage(e.target.value)}\\n      >\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"option\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"es\\\"\"\n            }), \">\"]\n          }), \"스페인어\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"option\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"option\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"fr\\\"\"\n            }), \">\"]\n          }), \"프랑스어\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"option\"\n            }), \">\"]\n          }), \"\\n        {/* 다른 언어 옵션 추가 */}\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"select\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onClick\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{handleTranslate}\"\n            }), \">\"]\n          }), \"번역\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"지금 ‘GoogleTranslate.js’ 파일에 있는 ‘YOUR_GOOGLE_TRANSLATE_API_KEY’를 실제 API 키로 교체하세요. 이제 React.js 애플리케이션을 더욱 향상시킬 수 있는 원활한 언어 번역 기능을 사용할 준비가 끝났습니다!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"요약하자면, Google Translate API를 React.js 앱에 통합하면 언어 번역이 간편해지며 전 세계적인 접근성이 향상됩니다. 초기 설정 복잡성에도 불구하고, 이 프로세스는 직관적인 UI 구성 요소로 사용자 친화적인 경험을 제공합니다. 이 방식은 언어 장벽을 허물어 포용력을 키우고 React.js 응용 프로그램에서 다양한 언어 선호도에 대한 유연한 플랫폼을 만듭니다.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}