{"pageProps":{"post":{"title":"리액트 타입스크립트  Vite  리액트","description":"","date":"2024-05-12 23:08","slug":"2024-05-12-ReactTypeScriptViteReact","content":"\n\nVite는 현대 웹 프로젝트용 빌드 도구입니다. 더 빠르고 간결한 개발 경험을 제공하도록 목표로 합니다.\n\n지원되는 템플릿 프리셋은 다음과 같습니다:\n\n![React TypeScript Vite 프로젝트 생성](/assets/img/2024-05-12-ReactTypeScriptViteReact_0.png)\n\n첫 번째 React TypeScript 프로젝트를 생성하는 중:\n\n\n\n```js\nnpm create vite@latest my-react-ts-app -- --template react-ts\n...\ncd my-react-ts-app\nnpm install\nnpm run dev\n```\n\nCommand line interface:\n\n```js\n{\n  \"scripts\": {\n    \"dev\": \"vite\", // 개발 서버 시작, 별칭: `vite dev`, `vite serve`\n    \"build\": \"vite build\", // 프로덕션을 위한 빌드\n    \"preview\": \"vite preview\" // 로컬에서 프로덕션 빌드 미리 보기\n  }\n}\n```\n\n추가 CLI \"port\" 옵션 지정:\n\n\n\nvite.config.ts 파일을 업데이트하는 중입니다:\n\n```js\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  server: {\n    port: 4200,\n  }\n})\n```\n\n도움이 되셨길 바랍니다. 읽어 주셔서 감사합니다. 🙏\n\n저와 소통해요! 저는 다음에서 찾을 수 있습니다:\n\n\n\n- Medium: [https://medium.com/@nhannguyendevjs/](https://medium.com/@nhannguyendevjs/)\n- Dev: [https://dev.to/nhannguyendevjs/](https://dev.to/nhannguyendevjs/)\n- Hashnode: [https://nhannguyen.hashnode.dev/](https://nhannguyen.hashnode.dev/)\n- Linkedin: [https://www.linkedin.com/in/nhannguyendevjs/](https://www.linkedin.com/in/nhannguyendevjs/)\n- X (formerly Twitter): [https://twitter.com/nhannguyendevjs/](https://twitter.com/nhannguyendevjs/)\n- Buy Me a Coffee: [https://www.buymeacoffee.com/nhannguyendevjs](https://www.buymeacoffee.com/nhannguyendevjs)","ogImage":{"url":"/assets/img/2024-05-12-ReactTypeScriptViteReact_0.png"},"coverImage":"/assets/img/2024-05-12-ReactTypeScriptViteReact_0.png","tag":["Tech"],"readingTime":2},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Vite는 현대 웹 프로젝트용 빌드 도구입니다. 더 빠르고 간결한 개발 경험을 제공하도록 목표로 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"지원되는 템플릿 프리셋은 다음과 같습니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-ReactTypeScriptViteReact_0.png\",\n        alt: \"React TypeScript Vite 프로젝트 생성\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"첫 번째 React TypeScript 프로젝트를 생성하는 중:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm create vite@latest my-react-ts-app -- --template react-ts\\n...\\ncd my-react-ts-app\\nnpm install\\nnpm run dev\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Command line interface:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"{\\n  \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"scripts\\\"\"\n        }), \": {\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"dev\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"vite\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 개발 서버 시작, 별칭: `vite dev`, `vite serve`\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"build\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"vite build\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 프로덕션을 위한 빌드\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"preview\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"vite preview\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 로컬에서 프로덕션 빌드 미리 보기\"\n        }), \"\\n  }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"추가 CLI \\\"port\\\" 옵션 지정:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"vite.config.ts 파일을 업데이트하는 중입니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { defineConfig } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'vite'\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" react \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'@vitejs/plugin-react'\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// https://vitejs.dev/config/\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"defineConfig\"\n        }), \"({\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"plugins\"\n        }), \": [\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"react\"\n        }), \"()],\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"server\"\n        }), \": {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"port\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4200\"\n        }), \",\\n  }\\n})\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"도움이 되셨길 바랍니다. 읽어 주셔서 감사합니다. 🙏\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"저와 소통해요! 저는 다음에서 찾을 수 있습니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Medium: \", _jsx(_components.a, {\n          href: \"https://medium.com/@nhannguyendevjs/\",\n          children: \"https://medium.com/@nhannguyendevjs/\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Dev: \", _jsx(_components.a, {\n          href: \"https://dev.to/nhannguyendevjs/\",\n          children: \"https://dev.to/nhannguyendevjs/\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Hashnode: \", _jsx(_components.a, {\n          href: \"https://nhannguyen.hashnode.dev/\",\n          children: \"https://nhannguyen.hashnode.dev/\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Linkedin: \", _jsx(_components.a, {\n          href: \"https://www.linkedin.com/in/nhannguyendevjs/\",\n          children: \"https://www.linkedin.com/in/nhannguyendevjs/\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"X (formerly Twitter): \", _jsx(_components.a, {\n          href: \"https://twitter.com/nhannguyendevjs/\",\n          children: \"https://twitter.com/nhannguyendevjs/\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Buy Me a Coffee: \", _jsx(_components.a, {\n          href: \"https://www.buymeacoffee.com/nhannguyendevjs\",\n          children: \"https://www.buymeacoffee.com/nhannguyendevjs\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}