{"pageProps":{"posts":[{"title":"2024년 최고의 React Native 드롭다운 컴포넌트 4개","description":"","date":"2024-05-18 21:19","slug":"2024-05-18-Top4ReactNativeDropdowncomponentsin2024","content":"\n\n## 필요에 맞는 최상의 드롭다운 컴포넌트 선택하기\n\n![Drop-down components](/assets/img/2024-05-18-Top4ReactNativeDropdowncomponentsin2024_0.png)\n\n저는 제 프로젝트 중 하나에 가장 적합한 드롭다운 컴포넌트를 찾고 있었습니다. React Native 세계에서는 수많은 npm 드롭다운 패키지가 제공되어 있습니다. 그러나 각 컴포넌트마다 장단점이 있기에 이 중 하나를 선택하는 일은 조금 어려운 작업일 수 있습니다.\n\n그래서 이 글에서는 선호하는 네 가지 드롭다운 컴포넌트에 대해 설명하고 비교하여 여러분이 필요에 맞는 최상의 컴포넌트를 선택하는 데 도움이 되도록 하겠습니다.\n\n<div class=\"content-ad\"></div>\n\n# react-native-dropdown-select-list\n\n이 라이브러리는 약 7개월 전에 출시되었습니다. 그래서 아직 매주 소수의 다운로드를 받고 있지만 npm에서는 매주 다운로드 트렌드가 상승하는 것으로 나타납니다. 이 라이브러리는 정기적으로 업데이트되며 TypeScript도 지원합니다. 패키지의 유지 보수는 이 패키지의 생성자만이 합니다.\n\n주요 구성 요소는 단일 선택을 위한 구성 요소와 다중 선택을 위한 구성 요소 두 가지를 제공합니다. 비활성화된 항목을 명시할 수 있으며 비활성화된 항목의 스타일링을 사용자 정의할 수 있습니다. 그러나 전체 구성 요소를 비활성화할 수는 없습니다.\n\n패키지의 소스 코드를 살펴보면 이것이 완전히 JavaScript로 작성되었음을 알 수 있습니다. 모든 애니메이션은 AnimatedAPI를 사용하여 수행됩니다. 사용자 경험에 좋은 애니메이션이 있습니다.\n\n<div class=\"content-ad\"></div>\n\n이 패키지 개발자는 맞춤 스타일링을 적용할 수 있는 많은 속성을 제공했기 때문에 개발자가 이점을 취할 수 있습니다.\n\n이 패키지에는 내장된 검색 기능이 포함되어 있습니다. 필요한 경우 비활성화할 수 있으며 검색 필드에 대한 맞춤화도 다양한 구성 요소 속성으로 사용할 수 있습니다.\n\n![이미지](https://miro.medium.com/v2/resize:fit:688/1*_Y54RZOdMCXkynrLKm_i9Q.gif)\n\n![이미지](https://miro.medium.com/v2/resize:fit:688/1*QDJQGYpNOgC4Vkf3k7VLhw.gif)\n\n<div class=\"content-ad\"></div>\n\n더 많은 정보를 확인하세요.\n\n장점:\n\n- TypeScript 지원\n- 여러 항목 선택 가능\n- 다양한 스타일링 속성 제공\n- 애니메이션 기능 포함\n- 내장된 검색 기능 제공\n- 자주 업데이트되는 패키지 유지보수\n- 라이브러리를 만들 때 네이티브 개발이 필요하지 않음\n- 목록에서 항목 비활성화 가능\n\n단점:\n\n<div class=\"content-ad\"></div>\n\n- 매주 소수의 다운로드만 있습니다. 그렇기 때문에 커뮤니티 지원이 적습니다.\n- 더 높은 수준에서 컴포넌트 비활성화 속성이 없습니다.\n\n# react-native-dropdown-picker\n\n이 패키지는 이전 패키지와 비교했을 때 매주 상당한 다운로드 수를 기록하고 있습니다. 더 많은 사용자 커뮤니티가 있으면 무언가 잘못되었을 때나 지원이 필요할 때 도움이 되는 장점이 있습니다.\n\n여기서 주요 이점 중 하나는 적절한 문서화가 되어 있다는 점입니다. 모든 것이 처음부터 정확하게 설명되어 있어 사용하기 쉽습니다.\n\n<div class=\"content-ad\"></div>\n\n이 패키지는 다중 항목 선택을 지원하며, 그룹화 기능을 제공합니다. 아래 이미지에서 확인할 수 있듯이(react-native-dropdown-picker: Group Selection).\n\n검색 기능 및 아이템을 표시할 준비가 되지 않은 경우 로딩 표시 기능도 제공합니다. 이 라이브러리는 정기적으로 업데이트되며 많은 오픈 이슈들이 존재합니다. 또한 자바스크립트로 작성되었으며 TypeScript를 지원합니다.\n\n![이미지](https://miro.medium.com/v2/resize:fit:688/1*QnjXi9zHpE3nIRvtKSn3ug.gif)\n\n![이미지](/assets/img/2024-05-18-Top4ReactNativeDropdowncomponentsin2024_1.png)  \n\n<div class=\"content-ad\"></div>\n\n여기서 더 많은 정보를 확인하세요.\n\n장점:\n\n- TypeScript 지원\n- 다중 및 그룹 선택 기능\n- 잘 구성된 문서\n- 큰 커뮤니티의 지원\n- 빈번한 패키지 유지보수\n- 라이브러리를 생성하기 위해 기본 개발이 필요하지 않음\n- 내장된 검색 및 로딩 기능 포함\n- 다양한 스타일링 속성 제공\n\n단점:\n\n<div class=\"content-ad\"></div>\n\n- 애니메이션이 없습니다\n\n# React Native UI Kitten\n\nReact Native UI Kitten은 React Native 세계에서 가장 인기 있는 UI 프레임워크 중 하나입니다. 그들은 많은 도구를 제공하며 드롭다운 컴포넌트가 그 중 하나입니다. 이 컴포넌트의 이름은 Select입니다.\n\n이 컴포넌트를 사용하면 다중 선택 및 그룹화 기능을 사용할 수 있습니다. 또한 상위 수준에서 컴포넌트를 비활성화하는 데 사용되는 disabled 속성도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n이 UI 프레임워크는 구성 요소가 작동하는 방법을 보여주는 적절한 문서를 가지고 있습니다. 이 문서에는 작은 비디오, 간단한 코드 스니펫 등이 포함되어 있습니다.\n\nshow, hide, focus, blur 등의 메소드를 사용하여 프로그래밍 방식으로 구성 요소를 조작할 수 있습니다.\n\n![이미지](https://miro.medium.com/v2/resize:fit:688/1*3FSlfxBfYFfLurDmL9Eomw.gif)\n\n![이미지](https://miro.medium.com/v2/resize:fit:688/1*8UZcgNUAaEshD2_VwB_4_w.gif)\n\n<div class=\"content-ad\"></div>\n\n<img src=\"https://miro.medium.com/v2/resize:fit:688/1*k7FfoTH3YBHPhUiAb0CQzg.gif\" />\n\n자세한 내용은 여기에서 확인하세요.\n\n장점:\n\n- TypeScript 지원\n- 다중 및 그룹 선택\n- 잘 정리된 문서\n- 대규모 커뮤니티의 지원\n- 빈번한 패키지 유지 보수\n- 필요 시 SelectItem에 왼쪽 및 오른쪽 구성 요소 추가 가능\n- 프로그래밍 방식으로 구성 요소의 동작 변경 가능\n\n<div class=\"content-ad\"></div>\n\n단점:\n\n- 애니메이션이 없음\n- 검색 기능이 없음\n\n# native-base\n\nnative-base은 React Native을 위한 인정받는 UI 프레임워크입니다. 드롭다운 컴포넌트는 'Select'라고 불립니다. 아래 이미지를 보면 (native-base: Single Selection) 이 컴포넌트는 위에 언급된 세 가지 컴포넌트와는 매우 다르게 작동합니다.\n\n<div class=\"content-ad\"></div>\n\nnative-base 버전 2에서 드롭다운 컴포넌트를 Picker라고 부릅니다. 만약 이 컴포넌트가 드롭다운 아이템을 표시할 때 선호되는 동작이라면, 의심 없이 이 컴포넌트를 선택할 수 있습니다.\n\n이 컴포넌트는 내장 검색 기능, 그룹 선택 및 다중 선택을 제공하지 않습니다. 또한 제공하는 모든 도구를 다루는 잘 쓰여진 문서가 있습니다.\n\n![이미지](https://miro.medium.com/v2/resize:fit:344/1*tX_klmqeGI223aCTTOaigw.gif)\n\n[더 자세한 내용은 여기를 확인하세요.](#)\n\n<div class=\"content-ad\"></div>\n\n장점:\n\n- TypeScript 지원\n- 잘 정리된 문서\n- 큰 커뮤니티의 지원\n- 빈번한 패키지 유지관리\n- 애니메이션 포함\n- 구성 요소의 동작을 프로그래밍적으로 변경 가능\n- 드롭다운 아이콘 변경 유연성\n\n단점:\n\n- 검색 기능 없음\n- 다중 선택 불가능\n\n<div class=\"content-ad\"></div>\n\n## 마무리\n\n이 글에서는 React Native 세계에서 가장 인기 있는 4개의 드롭다운 컴포넌트를 소개했습니다. 각각의 장단점이 있습니다. 선호도에 따라 원하는 것을 선택할 수 있습니다.\n\n이 글에서 소개되지 않은 다른 드롭다운 라이브러리들도 많이 있으니 필요에 맞는 최적의 것을 찾아 보세요.\n\n여러분이 더 쉽게 선택할 수 있도록 최고의 드롭다운 컴포넌트를 선택하는 데 도움이 되었기를 바랍니다. 이와 같은 더 많은 글을 기대해 주세요. 읽어 주셔서 감사합니다!\n\n<div class=\"content-ad\"></div>\n\n표 태그를 마크다운 형식으로 변경해주세요.","ogImage":{"url":"/assets/img/2024-05-18-Top4ReactNativeDropdowncomponentsin2024_0.png"},"coverImage":"/assets/img/2024-05-18-Top4ReactNativeDropdowncomponentsin2024_0.png","tag":["Tech"],"readingTime":5},{"title":"제발 코드를 미래지향적으로 작성하지 마세요","description":"","date":"2024-05-18 21:18","slug":"2024-05-18-Dontfuture-proofyourcode","content":"\n\n<img src=\"/assets/img/2024-05-18-Dontfuture-proofyourcode_0.png\" />\n\n당신이 생각하는 일이 일어날지 여부는 중요하지 않아요.\n\n개발자들은 미래를 대비하기를 좋아해요. 미래의 필요에 맞춰 코드를 작성하고 싶어해요. 하지만 좋은 소식은: 인간들은 미래를 예측하는 데 그리 능하진 않아요.\n\n이것은 중요한 교훈이에요. 미래 예측에 따른 코딩은 종종 시간 낭비일 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n# 함정이에요!\n\n경험이 풍부한 엔지니어든 초보 엔지니어든 함정에 걸리기 쉽습니다.\n\n그들은 다음에 무엇이 올지를 추측하려고 합니다. 그들은 현재의 디자인에 이러한 변화를 작업합니다.\n\n실제로 이는 데이터베이스에 몇 가지 추가 필드를 추가하거나, 기존 로직을 성능을 높이기 위해 리팩토링하거나, 미래 요청을 대비하여 재사용 가능한 리소스를 생성하는 것을 의미합니다.\n\n<div class=\"content-ad\"></div>\n\n여기가 중요한 거야...\n\n그 추가 필드, 논리 변경, 그리고 재사용 가능한 자원들은 무료로 제공되지 않아.\n\n시간과 노력이 소요될 거야. 예상되는 요구 사항을 보상하기 위해 디자인을 계속 수정하면서 처음 버전을 전달하는 데 더 많은 시간이 걸릴 거야.\n\n안타깝게도, 그 추가적인 노력은 아마도 낭비될 거야.\n\n<div class=\"content-ad\"></div>\n\n# 당신이 생각하는 것을 알고 있지 않아요\n\n지금 당신은 아마도 미래에 비즈니스가 필요로 할 것을 이해했다고 생각할지도 모르겠어요.\n\n하지만 제가 말해드릴게요, 아무리 당신이 이해하고 있다고 생각해도, 실제로는 그렇지 않아요.\n\n운이 좋다면, 앞으로 필요한 것을 예측하는 데에 성공하실 수 있을지도 모르지만, 그 가능성은 10회 중 1회일 뿐이에요.\n\n<div class=\"content-ad\"></div>\n\n다른 9번의 경우에는 노력을 낭비하고 복잡성을 늘렸는데, 그러한 설계는 변경되거나 필요하지 않을 수 있다.\n\n이는 배워야 할 어려운 교훈입니다. 많은 시니어 엔지니어조차도 이를 내재화하지 못합니다. 우리는 다시 빠져드는 함정에 자꾸 빠져들곤 합니다. 어떤 미래상을 예측하며 코드를 작성합니다.\n\n절대 실현되지 않을 상상 속 미래입니다.\n\n# 어떻게 전개될지 혹시 살펴봅시다\n\n<div class=\"content-ad\"></div>\n\n당신이 아름다운 내구성 있는 기능을 개발했거나, 아니면 미완료된 엔드포인트 세트로 미래 기능에 대한 기반을 마련했을지도 몰라요.\n\n모든 것이 그 방향으로 향하는 것 같습니다. 그렇게 완벽히 해냈습니다! 미래 필요성을 예측하고 그를 우아하게 처리해 준 것으로 당신은 영웅이 될 거예요.\n\n하지만 갑자기 비즈니스 우선 순위가 바뀌었어요.\n\n- 회사 회의에서 CEO가 최신 대규모 이니셔티브를 발표했어요. 앞으로 미래를 대비하여 작성한 코드가 필요해 질 것 같은 제품을 단종할 거예요.\n- 아니면, 고객이 제품 팀에 피드백을 공유했을 때, 당신이 구축하고 있는 기능이 실제로 필요 없다면서요. 그들은 내부 도구로 처리할 수 있어요.\n- 아마도 판매 팀이 당신이 구축한 기능이 유용하지만 좋은 방법이 없어 이에 대한 요금을 지불하려고 하지 않는다면서 발견했다면, 그 기능에 대한 개발은 우선순위가 낮아져야 해요.\n- 다른 팀이 비슷한 기능 세트를 가지고 있어요. 당신이 자체 버전을 구축하고 있는 것을 알게 되면, 그들은 기능 세트를 통합하려고 할 거예요. 기존 사용 사례와 처음에 계획한 것과 다른 다양한 요구 사항을 지원해야 할 거예요.\n- 현재 프로젝트에 문제가 없는 경우도 있을 수 있지만, 더 시급한 다른 문제가 발생했을 수도 있어요. 몇 달 동안 팀이 집중해야 할 긴급 문제가 생기고, 솔루션을 완전히 구축할만큼의 힘을 다시 모으기 어려울 수 있어요. 항상 미완성 상태로 남아 있을 거예요.\n\n<div class=\"content-ad\"></div>\n\n그러나 미래를 위한 아름다운 코드와 디자인은 막상 현실로 구현되지 못할 수도 있어요.\n\n# YAGNI!\n\nYou aren’t gonna need it — 그것이 당신의 자조가 되어야 합니다.\n\n너무 멀리 앞서 계획하려고 하면 위험하고 비생산적일 수 있어요. 그 코드가 정말 유용할지도 의문일 거예요.\n\n<div class=\"content-ad\"></div>\n\n그것은 기술적 부채가 될 것입니다. 당신의 팀이 한동안 반만 유지될 수밖에 없는 낡은 부분입니다.\n\n유혹적일 수 있지만, 제발! 아무도 요청하지 않는 것을 만들지 마십시오.\n\n요구 사항에 맞게만 빌드하고 그만두세요.\n\n# 대신 해야 할 일\n\n<div class=\"content-ad\"></div>\n\n한 번 더 내 생각을 말해볼게요:\n\n작은 변경 사항을 빠르게 배포하는 것이 최선의 방법입니다.\n\n무엇인가를 미래 대비할 때, 스스로에게 물어보세요. \"어떻게 하면 이것을 더 간단하게 만들 수 있을까?\" \"나중에 x가 필요하게 될 것이다...\" 라고 생각하게 되면, 바로 당신의 미래 자신이 간단한 코드 베이스를 원할 것이라는 것을 깨닫게 될 겁니다.\n\n가장 중요한 것은 간단한 것을 만드는 것입니다.\n\n<div class=\"content-ad\"></div>\n\n미래의 나는 아직 요구 사항을 이해하지 못한 사람이 작성한 과장된 가짜 해결책을 원하지 않을 것입니다.\n\n시간 여행 기계가 없다면 미래 요구 사항을 완전히 알 수 없어요!\n\n그러니, 오늘 가지고 있는 요구 사항에 맞게 개발하세요. 그리고 멈추세요.\n\n# 간단하다고 쉬운 게 아니에요\n\n<div class=\"content-ad\"></div>\n\n위 요구사항을 충족시키는 가장 간단한 코드를 작성하는 것은 속기 하지만 어렵습니다.\n\n해당 문제를 깔끔하게 모델링하고 각 솔루션의 각 부분을 이해하기 쉽게 해야 합니다. 우아한 코드는 명확해 보이지만 실제론 많은 고민이 필요합니다.\n\n코드를 미래에 대비해 작성하는 대신, 확장 가능한 코드를 작성하는 것이 최선입니다.\n\n이는 단순한 함수, 명확히 정의된 클래스 및 포괄적인 테스트를 의미합니다. 미래에 새로운 기능이 필요할 때는 어디에 어떻게 추가해야 할지 명확해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n단순함이 해답이에요.\n\n미래를 예측할 순 없으니 시도조차 하지 마세요. 대신, 오늘의 요구사항을 가능한 단순하게 충족시키기 위해 최선을 다하세요.\n\n# 일일 목록\n\n여기서 읽으신 내용이 마음에 드셨나요? 매일 아침 2,000명의 소프트웨어 개발자들을 위해 새로운 글을 쓰고 있어요.\n\n<div class=\"content-ad\"></div>\n\n매일 업데이트를 받아보세요!","ogImage":{"url":"/assets/img/2024-05-18-Dontfuture-proofyourcode_0.png"},"coverImage":"/assets/img/2024-05-18-Dontfuture-proofyourcode_0.png","tag":["Tech"],"readingTime":4},{"title":"자바스크립트에서의 이벤트 처리에 대한 이해","description":"","date":"2024-05-18 21:17","slug":"2024-05-18-UnderstandingtheEventHandlinginJavaScript","content":"\n\n웹 개발 세계에서 JavaScript 이벤트는 동적이고 인터랙티브한 웹 페이지를 만드는 데 중요한 역할을 합니다. 이벤트란 프로그래밍 중인 시스템에서 발생하는 작업 또는 사건으로, 시스템이 알아야 할 필요가 있는 상황이거나 반응해야 하는 상황일 수 있습니다.\n\n![이벤트 처리 이해하기](/assets/img/2024-05-18-UnderstandingtheEventHandlinginJavaScript_0.png)\n\n이벤트는 사용자가 입력을 기반으로 발생시키는 작업이며, 웹 사이트의 상태를 변경하기 위해 어떤 동작을 취할 것입니다. 이벤트에 반응하기 위해 수행하는 단계를 이벤트 처리라고 합니다.\n\n# 이벤트 유형\n\n<div class=\"content-ad\"></div>\n\n다양한 종류의 이벤트와 해당 이벤트 처리기가 있습니다:\n\n- 마우스 이벤트: onclick, onmouseover, onmouseout, onmouseup, onmousedown 등\n- 키보드 이벤트: onkeyup 및 onkeydown\n- 문서/창 이벤트: onload, onunload, onresize 등\n- 양식 이벤트: onfocus, onsubmit, onblur, onchange 등\n\n# 이벤트 처리 방법\n\n## 1. HTML 이벤트 핸들러\n\n<div class=\"content-ad\"></div>\n\nHTML 이벤트 핸들러는 HTML 요소에 추가된 속성으로, 해당 요소에서 특정 이벤트가 발생할 때 실행될 함수를 지정합니다. 이러한 핸들러는 기능이 제한되어 있고 현재 웹 개발에서 권장되지 않습니다. 왜냐하면 인라인 형식이기 때문에 프레젠테이션과 동작이 섞일 가능성이 있기 때문입니다.\n\n```js\n<button onclick=\"alert('안녕, 세계!')\">눌러주세요</button>\n```\n\n# DOM 레벨 이벤트 핸들러\n\nDOM (문서 객체 모델) 레벨 이벤트 핸들러는 DOM 요소의 속성으로, 해당 요소에서 특정 이벤트가 발생할 때 실행될 함수를 할당할 수 있습니다. 이는 HTML 이벤트 핸들러보다 나은 측면이며 동작과 프레젠테이션을 분리합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nconst button = document.getElementById('myButton');\nbutton.onclick = function() {\n    alert('Hello, world!');\n};\n```\n\n참고: DOM은 다양한 HTML 요소의 트리 구조입니다.\n\n# 이벤트 리스너\n\n이벤트 리스너는 JavaScript에서 이벤트를 처리하는 현대적인 방식입니다. 기존 이벤트 핸들러를 덮어쓰지 않고 요소에 이벤트 핸들러를 첨부할 수 있게 해줍니다. 이벤트 리스너는 이벤트 처리 방식에 대한 유연성과 제어를 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n\n```js\nconst button = document.getElementById('myButton');\nbutton.addEventListener('click', function() {\n    alert('Hello, world!');\n});\n```\n\n자바스크립트에는 두 가지 일반적인 내장 이벤트 리스너 메서드가 있습니다: addEventListener 및 removeEventListener. addEventListener() 메서드를 사용하면 요소에 이벤트 핸들러를 첨부할 수 있습니다. 요소에 여러 이벤트 핸들러를 추가할 수도 있습니다. removeEventListener()를 사용하면 특정 요소에서 이벤트 리스너/핸들러를 제거할 수 있습니다.\n\n# 결론\n\n자바스크립트에서 이벤트를 이해하고 처리하는 것은 동적이고 상호작용 가능한 웹 페이지를 생성하는 데 필수적입니다. 이벤트를 사용하면 사용자의 작업에 응답하여 웹 애플리케이션을 더 반응적이고 매력적으로 만들 수 있습니다. HTML 이벤트 핸들러, DOM 레벨 이벤트 핸들러 또는 현대적인 이벤트 리스너를 선택하더라도 각 메서드에는 사용 사례와 이점이 있습니다. 그러나 이벤트 리스너를 사용하는 것이 유연성과 효율적인 여러 이벤트 핸들러를 관리할 수 있는 기능으로 인해 일반적으로 권장됩니다. 이벤트 처리를 숙달하면 웹 애플리케이션의 사용자 경험과 기능을 크게 향상시킬 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n테이블 태그를 마크다운 형식으로 변경해주세요.","ogImage":{"url":"/assets/img/2024-05-18-UnderstandingtheEventHandlinginJavaScript_0.png"},"coverImage":"/assets/img/2024-05-18-UnderstandingtheEventHandlinginJavaScript_0.png","tag":["Tech"],"readingTime":3},{"title":"제이쿼리 4, 다시 부활할 수 있을까? ","description":"","date":"2024-05-18 21:16","slug":"2024-05-18-jQuery4ANewEra","content":"\n\njQuery, 수십년 동안 무수히 많은 웹사이트를 구동해 온 \"옛날식\" 자바스크립트 라이브러리가 다음 주요 릴리스, jQuery 4.0.0 베타를 향하여 나아가고 있습니다.\n\n![2024-05-18-jQuery4ANewEra_0.png](/assets/img/2024-05-18-jQuery4ANewEra_0.png)\n\n이 릴리스는 jQuery 자체 뿐만 아니라 전체 웹 개발에 있어서 중요한 이정표입니다.\n\n# 2024년에도 jQuery가 중요한 이유\n\n<div class=\"content-ad\"></div>\n\n최근 몇 년 동안 새로운 프레임워크와 라이브러리가 등장했지만, jQuery는 현대 웹 개발에서 중요한 도구로 남아 있습니다.\n\n간단한 구문, 다양한 플러그인 생태계 및 많은 사용자 커뮤니티로, jQuery는 모든 레벨의 개발자들에게 귀중한 도구입니다.\n\n최신 통계에 따르면, 상위 100만 개 사이트 중 약 78%가 여전히 jQuery를 사용하고 있으며, 이는 그 지속적인 인기와 중요성을 입증하는 것입니다.\n\n<img src=\"/assets/img/2024-05-18-jQuery4ANewEra_1.png\" />\n\n<div class=\"content-ad\"></div>\n\n# jQuery 4.0.0 Beta의 주요 기능 및 개선 사항\n\njQuery 4.0.0 베타 릴리스에는 몇 가지 새로운 기능과 개선 사항이 있습니다. 주요 포인트는 다음과 같습니다:\n\n- 최신 JavaScript 기능 지원: jQuery 4.0.0 베타는 ES 모듈, 프로미스, 화살표 함수 등의 최신 JavaScript 구문을 지원합니다.\n- 레거시 브라우저 지원 제거: jQuery 4.0.0 베타에서는 인터넷 익스플로러 11과 같은 구형 브라우저 지원을 중단했습니다. 이 결정으로 인해 라이브러리는 성능 최적화에 집중하고 구형 브라우저에서 사용할 수 없는 최신 웹 API를 활용할 수 있게 되었습니다.\n- 새로운 Rust 기반 미니파이어: jQuery 4.0.0 베타에서는 Rust로 구축된 빠르고 효율적인 미니파이어를 도입했습니다.\n- 성능 및 메모리 사용량 개선: jQuery 팀은 라이브러리의 핵심 코드를 최적화하는 데 많은 노력을 기울여 성능 향상과 메모리 사용량 감소를 이루어냈습니다.\n- 사용되지 않는 API 제거: 내부적으로 사용되지 않는 함수들이 제거되었습니다.\n- focusin/focusout 이벤트 순서 변경: jQuery 이전의 순서와 다른 최신 브라우저 사양을 따릅니다.\n- FormData 지원 추가: jQuery.ajax가 이제 이진 데이터를 자동으로 처리합니다.\n- 자동 JSONP 프로모션 제거: 교차 도메인 요청에 대해 CORS 사용을 장려합니다.\n- Trusted Types 및 CSP 지원 개선: Trusted Types와 콘텐츠 보안 정책 사용 시 보안을 보장합니다.\n- 업데이트된 slim 빌드: Deferreds 및 Callbacks를 제거하여 (대부분의 경우에는 사용되지 않음) 더 작은 크기로 업데이트되었습니다.\n\n![image](/assets/img/2024-05-18-jQuery4ANewEra_2.png)\n\n<div class=\"content-ad\"></div>\n\n# 개발 과정에서 극복한 도전\n\njQuery 팀은 개발 과정 중 다양한 도전을 겪었습니다:\n\n- 역 호환성과 현대화의 균형 맞추기: 새로운 기능을 도입하면서 기존 코드와의 호환성을 유지하는 것은 미묘한 균형을 유지해야 합니다. jQuery 팀은 기존 프로젝트에 변경 사항의 영향을 주의 깊게 고려하고 개발자들을 위한 원활한 업그레이드 경로를 보장하기 위해 노력했습니다.\n- 급변하는 환경에서의 탄력성 유지: 웹 개발 환경은 끊임없이 변화하며 새로운 프레임워크와 라이브러리가 계속 등장합니다. jQuery 팀은 jQuery가 이 동적인 환경에서 여전히 주목할 만하고 경쟁력을 유지할 수 있도록 노력했습니다.\n- 다양한 커뮤니티의 합의 형성: jQuery는 다양한 사용자 커뮤니티를 보유하고 있습니다.\n\n# 추가 정보\n\n<div class=\"content-ad\"></div>\n\n- 이것은 베타 릴리스이므로 최종 릴리스 이전에 일부 버그와 변경 사항이 예상됩니다.\n- 최종 릴리스 전에 전체적인 업그레이드 안내서가 게시될 예정입니다.\n- jQuery 이전 버전에서 마이그레이션을 돕는 jQuery Migrate 플러그인을 사용할 수 있습니다.\n- 다운로드 옵션에는 CDN 및 npm 패키지가 포함되어 있습니다.\n- jQuery 웹사이트에서 더 자세한 정보를 확인할 수 있습니다: https://jquery.com/\n\n# 결론: jQuery에 밝은 미래가 기대됩니다\n\n현대 JavaScript 기능에 적극적으로 수용하고 성능을 최적화하며 커뮤니티 요구 사항을 충족시킴으로써 jQuery팀은 개발자들에게 향후 몇 년 동안 유효하고 강력한 도구로 남아있을 것을 보장했습니다.\n\n![이미지](/assets/img/2024-05-18-jQuery4ANewEra_3.png)\n\n<div class=\"content-ad\"></div>\n\n흥미로운 내용이었나요? 👏 좋아요 눌러주세요! 다음 이야기도 가져올 수 있도록 제게 동기부여해주세요!\n\n기술 분야에서 새로운 사람들을 만나는 것을 즐기고 있어요. LinkedIn에서 연락해도 괜찮아요!","ogImage":{"url":"/assets/img/2024-05-18-jQuery4ANewEra_0.png"},"coverImage":"/assets/img/2024-05-18-jQuery4ANewEra_0.png","tag":["Tech"],"readingTime":3},{"title":"개발자의 매일 체크리스트, 딱 3가지만 있어도 우아한 간결함","description":"","date":"2024-05-18 21:15","slug":"2024-05-18-Adevelopersdailychecklistwithonly3itemsiselegantsimplicity","content":"\n\n<img src=\"/assets/img/2024-05-18-Adevelopersdailychecklistwithonly3itemsiselegantsimplicity_0.png\" />\n\n할 일 목록은 종종 쓰레기입니다.\n\n할 일 목록은 항상 길어집니다. 계속해서 달린다는 느낌이 듭니다. 대부분의 개발자들에게 우리는 할 일 목록을 완료하지 못할 것입니다.\n\n그 의미에서 할 일 목록은 의욕을 떨어뜨리는 생산성 도구입니다.\n\n<div class=\"content-ad\"></div>\n\n가장 중요하고 실현 가능한 작업 목록을 추려본다면 어떨까요?\n\n할 일 목록 대신 더 간단한 것을 사용해 본다면 어떨까요? 가장 의미 있는 작업을 완료하도록 도와주는 강제 기능을 사용해 보세요.\n\n# 하루에 1–3개의 항목\n\n할 일 목록 대신 하루에 항목이 손에 쥐어지도록 하는 일일 체크리스트를 제안합니다.\n\n<div class=\"content-ad\"></div>\n\n이 시스템은 당신의 생산성을 혁신할 수 있어요. 왜냐하면 당신이 무엇이 중요한지 결정하도록 강제하기 때문이에요. 나머지는 잊어버릴 수 있어요.\n\n가끔, 가장 중요한 일이 다른 모든 작업을 쉽게하거나 관련이 없게 합니다. 중요한 몇 가지 일에 집중하는 것 — 1에서 3개의 작업 — 당신을 올바른 목표로 향하도록 도와줍니다.\n\n소프트웨어 개발자로써, 이것은 제 하루에 집중을 도와줘요. 모든 불확실성, 요청 및 산만함 중에서 중요한 일을 1~3가지 이룬다면, 그 날은 성공적인 날이에요.\n\n할 일 목록은 의욕을 떨어뜨리지만, 짧은 매일 체크리스트는 자신감을 줘요.\n\n<div class=\"content-ad\"></div>\n\n# 우아한 단순함\n\n시스템은 정말 그렇게 간단합니다.\n\n- 아침에, 또는 전날 저녁에, 1-3가지 가장 중요한 작업을 적어보세요.\n- 작업은 명확하고 범위가 정해져 있어야 합니다. 하루 안에 완료할 수 있어야 합니다.\n- 하루 중에서 리스트를 사용하여 집중할 수 있도록 하세요. 산만함이나 미뤄두기가 들끓을 때, 리스트가 당신에게 무엇을 해야할지 상기시켜줍니다.\n- 하루가 끝날 때 무언가를 처리하지 못했다면, 결정하세요: 내일로 넘길지 OR 그것이 그리 중요하지 않다고 생각되면 리스트에서 삭제하세요.\n\n어느 시점에나, 당신 앞에는 1-3개의 체크리스트 항목만 있습니다.\n\n<div class=\"content-ad\"></div>\n\n복잡한 시스템이나 긴 할 일 목록은 없어요. 할 일을 우선순위를 정하거나 정리할 필요도 없어요. 상태, 태그, 예상 소요 시간 등을 추가할 필요도 없죠.\n\n그저 몇 마디로 된 체크리스트 항목과 체크 상자 하나가 있어요. 완료했는지 안 했는지 뿐이에요.\n\n# 목록 만들기\n\n리스트에 무엇을 넣을지 어떻게 결정하나요?\n\n<div class=\"content-ad\"></div>\n\n대부분은 직감을 신뢰하세요. 특별한 비밀은 없어요. 매일 목록에 올리는 것은 개인적인 결정이에요.\n\n여기 제가 발견한 유용한 힌트가 있어요 — 아침에 기억해야 할 일이 아마도 가장 중요할 거에요.\n\n또 다른 유용한 휴리스틱 — 내가 피해오면서 미뤄왔던 일들은 보통 매일 체크리스트의 주요 후보들이에요.\n\n시간이 지남에 따라 매일 체크리스트를 사용함으로써, 목록을 만드는 데 능력이 향상될 거예요. 가장 중요한 작업에 집중하도록 강제합니다. 시간이 지남에 따라 중요한 작업을 인식하는 데 능력이 향상될 거예요.\n\n<div class=\"content-ad\"></div>\n\n그것은 매우 유용한 기술입니다.\n\n# 예시\n\n지난 몇 주간의 제 일일 목록 중 몇 가지를 여기에 소개합니다.\n\n![개발자의 일일 체크리스트 예시](/assets/img/2024-05-18-Adevelopersdailychecklistwithonly3itemsiselegantsimplicity_1.png)\n\n<div class=\"content-ad\"></div>\n\n![이미지1](/assets/img/2024-05-18-Adevelopersdailychecklistwithonly3itemsiselegantsimppng)\n\n![이미지2](/assets/img/2024-05-18-Adevelopersdailychecklistwithonly3itemselegantsimplicity.png)\n\n(어떤 소프트웨어를 사용하는지에 대한 몇 가지 질문을 받았어요. 목록에 사용하는 도구는 중요하지 않아요. 하지만 이 스크린샷은 코딩 지식 관리에 대한 제 선택인 Obsidian입니다.)\n\n# 세부사항\n\n<div class=\"content-ad\"></div>\n\n저의 스크린샷으로부터 몇 가지 세부 정보를 보여드리겠습니다.\n\n- 매일 목록의 각 항목이 단지 몇 단어로 이루어져 있다는 점을 주목해주세요. 작업을 상기시킬만큼 충분히 짧습니다.\n- 가끔씩, 일일 체크리스트 항목은 다음에 해결해야 할 특정 오류에 집중합니다(보통 전날 어디까지 남겨두었는지의 힌트가 됩니다).\n- 가끔씩, 미래에 중요해질 것 같은 노트나 알림을 포함할 수도 있습니다 — 4월 6일 노트의 \"다음 주\" 섹션 같은 것입니다.\n- 1~3개의 항목을 언급했는데 체크리스트에는 4개 이상의 항목이 나오죠! 변명은 없어요; 오히려 더 집중해야 합니다. 하지만 매일 포스트(즉, 지금 블로그/이메일 목록에서 읽고 계신 내용)는 매일 항목 중 하나입니다. 변경되지 않습니다. 그냥 해야 한다는 것을 상기시키기 위해 목록에 넣은 것뿐이에요.\n- 추가 정보: 매일 체크리스트를 직접 미팅 업데이트에 반영합니다. 어제의 목록을 따라가기만 하면 됩니다. 대개, 미팅 이전에 오늘의 목록도 이미 작성해뒀어요. 그래서 하루의 상태와 목표가 명확하게 정의돼 있습니다.\n\n# 간단한 시스템이 복잡한 것보다 더 나은 결과를 내놓습니다\n\n가끔씩 가장 어리석은 해결책이 종종 가장 좋은 것이라는 것을 발견합니다.\n\n<div class=\"content-ad\"></div>\n\n(아마 그것은 나만 그런 것일지도, 하하.)\n\n내가 도구를 간단하게 만들수록 사용할 확률이 높아진다. 1~3개 항목의 체크리스트가 얼마나 간단한지 알겠죠.\n\n그런데, 이 시스템은 나에게 잘 맞는 것이에요! 당신은 여러분에게 더 나은 방법을 찾아볼 수도 있겠죠. 멋지네요!\n\n여기서 중요한 교훈은, 무엇이든 간에 시스템을 간단하게 유지하는 것이에요. 또한, 매일의 목표는 실현 가능하고 동기부여가 되어야 합니다. 너무 모호하고 풀어내기 어려운 것은 많은 할 일 목록처럼 기운을 빼앗을 뿐이죠.\n\n<div class=\"content-ad\"></div>\n\n# 동기 부여 심리학\n\n이 시스템의 심리학에는 특별한 것이 있어요!\n\n하루에 몇 가지 할 일이라면 달성 가능해 보입니다. 완전히 가능한 것 같아 시작하기 더 쉬워요. 시작만 해도 일을 끝내기 더 쉬울 거예요. 할 일이 1~3개 뿐이라면 미루기가 어떻게 더 어색해 보이죠.\n\n리스트에서 할 일을 체크해 나가는 것도 기분이 좋죠. 그것이 동기 부여죠!\n\n<div class=\"content-ad\"></div>\n\n\"To have your daily list totally checked off at the end of the day feels amazing!\n\nThis aligns with my approach and understanding of working 3 hours per day. By dedicating focused time to complete a few tasks each day, you can make steady progress.\n\nIt's similar to the story of the tortoise and the hare. In the long run, you will outperform those who work inconsistently.\n\n## Daily list\"\n\n<div class=\"content-ad\"></div>\n\n여기에서 읽은 내용이 마음에 드셨나요? 매일 새로운 내용을 2,000명의 소프트웨어 개발자를 위해 작성하고 있어요.\n\n매일 업데이트 받으세요!\n\n---\n\n$5에 미디엄 가입하기 - 모든 미디엄 콘텐츠에 접근하고 제게와 다른 사용자들을 지원해주세요!","ogImage":{"url":"/assets/img/2024-05-18-Adevelopersdailychecklistwithonly3itemsiselegantsimplicity_0.png"},"coverImage":"/assets/img/2024-05-18-Adevelopersdailychecklistwithonly3itemsiselegantsimplicity_0.png","tag":["Tech"],"readingTime":4},{"title":"마케팅은 잊고 멋진 제품을 만드는 데 집중해야하는 이유","description":"","date":"2024-05-17 21:55","slug":"2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct","content":"\n\n\n![Forget About Marketing, Focus on Building An Awesome Product](/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_0.png)\n\n창업자 여정을 시작하신 분이라면 멋진 제품을 만들고 싶어하는데 이 인용구를 좋아하지 않을 거에요:\n\n또는 이런 인용구를 좋아하지 않을 거에요:\n\n모두가 번거로운 일 없이 제품을 만들고 싶어하는 건 아니죠?\n\n\n<div class=\"content-ad\"></div>\n\n이 기사에서는 인디 개발자가 꿈꾸는 말들을 공유하고 싶어요: 가끔은 자리를 잡고 창작을 시작해야 합니다. 제품을 개선하고 놀라운 것을 만들어내며, 시간에 맡기세요.\n\n## 먼저, 간단한 사이드 노트:\n\n- 나는 부수적으로 프로젝트를 개발하는 개발자입니다.\n- 어떤 로드맵도 지시하는 주주가 없습니다.\n- 내 제품의 성공에 재정적으로 의존하지 않습니다.\n\n다시 말해서, 나는 사이드 프로젝트의 재정적 성공에 의존하지 않으며, 시간에 맡길 수 있어요. 아직은 프로 마케터는 아니고, 마케팅이 중요하다는 것을 알아요. 하지만 여전히 개선을 원했기에 제 제품의 품질에 집중했어요.\n\n<div class=\"content-ad\"></div>\n\n# 이 기사를 작성하게 된 이유는 무엇일까요?\n\n사람들이 얼마나 빨리 마음을 변할 수 있는지 이상하지 않으신가요? 몇 달 전까지만 해도 제는 제 기사에서 SEO의 중요성을 강조했지만, 이제는 때로는 멋진 제품에 집중하는 것이 더 나을 수도 있다고 제안하고 있습니다.\n\n오해가 없길 바랍니다. SEO와 마케팅은 훌륭한 비즈니스를 확장하는 데 필수적입니다.\n\n그러나 제처럼 \"한 사람 회사\"라면 현명하게 우선순위를 정해야 합니다. 과거에 제는 제품 자체를 무시하고 SEO와 마케팅에 너무 많은 시간을 쏟은 경향이 있었습니다.\n\n<div class=\"content-ad\"></div>\n\n가까워보이던 몇 가지가 항상 제대로 작동하지 않았지만, 조기에 수정되어야 했습니다.\n\n만약 풀타임 직장을 가지고 계신다면, 매일 아침 30분을 투자해 SEO 기사를 쓰고, 그것을 Twitter와 LinkedIn에 게시하세요. 그렇게 되면 새로운 기능을 오랜 기간 동안 중단 없이 개발하는 데는 시간이 많이 남지 않을 것입니다.\n\n그래서 지난 몇 달 동안 나는 사용자를 위해 앱을 개선하는 데 모든 노력을 기울였습니다. 여기서 기사를 공유하지 않았고, 트윗하거나 LinkedIn에 게시하지 않았으며, SEO 순위를 높이기 위해 블로그 포스트도 작성하지 않았습니다 - 그냥 앉아서 개발했을 뿐이죠!\n\n# 결과는 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\n이 문서를 작성하고 있지 않았다면, 마케팅을 제쳐두고 빌딩에 집중한 선택을 후회하지 않았을 것입니다.\n\n결과가 훌륭하고, 그것을 더 일찍 시작했으면 좋았을 텐데요.\n\n다음은 발생한 일들입니다:\n\n- 웹 하이라이트의 활성 사용자가 40,000명에서 70,000명 이상으로 증가했습니다.\n- Chrome 웹 스토어의 평균 평점이 4.6점에서 4.8점으로 올라갔으며, 1,100개 이상의 평가가 있습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![아이템 목록](/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_1.png)\n\n크롬 익스텐션 개발 중이에요! 재밌는 건, 자연스럽게 크롬 웹 스토어를 통해 성장해요. 좋은 리뷰는 익스텐션의 순위를 높일 뿐만 아니라 더 많은 트래픽을 유치하고 플랫폼의 SEO 점수를 향상시키죠.\n\n플레이 스토어나 앱 스토어의 앱도 마찬가지에요. 그래서 이 기사는 이 플랫폼에서 앱을 개발하는 인디 개발자에게 가장 관련성이 높다고 말할 수 있어요.\n\n마케팅 노력 없이 다른 SaaS 웹사이트로 트래픽을 유치하는 것은 꽤 어려울 것이라고 봐요.\n\n\n<div class=\"content-ad\"></div>\n\n# 왜 특별한 제품을 만들기에 집중해야 하는 이유\n\n## 확장을 위한 견고한 기반\n\n게리 켈러의 '더 원 타이밍'에서는 다음에 무엇을 해야 할지 결정해야 할 때마다 이 질문을 하라고 합니다:\n\n나는 이 질문을 스스로에게 물어보고, 내 응용 프로그램의 일부 주요 부분을 리팩토링하고 새롭게 개선해야 한다는 결론에 도달했습니다.\n\n<div class=\"content-ad\"></div>\n\n이것은 많은 작업을 의미했습니다. 다른 것에 산만해지지 않도록 몇 시간 동안 집중하여 작업해야 했습니다. 그렇게만 하면 웹 하이라이트를 10만 명 이상의 사용자로 확장하는 기초를 마련하여 내 좋은 평가를 유지하거나 향상시킬 수 있었습니다.\n\n어떻게 이렇게 빨리 일을 해내고 어플리케이션이 기다란 무엇인지와 얼마나 빨리, 오류 없이 좋아진 것을 보니 놀랐습니다. 상대적으로 짧은 시간 안에 앱을 크게 빠르고 사용자 친화적으로 만드는 데 성공했습니다.\n\n1달 후 첫 릴리스 이후, 사용자들이 훨씬 더 만족해하는 것이 분명해졌습니다.\n\n<img src=\"/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_2.png\" />\n\n<div class=\"content-ad\"></div>\n\n이후에, 전체 웹 앱을 개선하고 완전히 새로운 랜딩 페이지를 만들었어요. 이것은 대학 시절 한참 전에 둘 다 함께 만들었기 때문에 많이 미뤄둔 일이었어요.\n\n![이미지](/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_3.png)\n\n3개월 이내에 이렇게 중요한 개선을 이뤄낼 수 있다는 것에 정말 놀랐어요.\n\n이러한 상당한 향상들은 이제 앱이 100만 명의 사용자를 위한 준비가 되어 있음을 알게 해줘요, 앞으로는 더 많이 마케팅과 SEO에 집중할 수 있는 완벽한 기반을 제공해 줘요.\n\n<div class=\"content-ad\"></div>\n\n## 훌륭한 소프트웨어에는 내장된 마케팅이 있습니다\n\n저는 3개월 동안 개발에 집중했지만, 간접적으로 마케팅 활동에 참여한 셈이죠.\n\n자주 있는 경우, 잘 구조화된 웹사이트 자체가 마케팅 도구로 작용합니다. 앞서 말했듯이, 저는 Web Highlights의 랜딩 페이지를 새롭게 만들어 서버 측 렌더링(SSR)을 도입했습니다.\n\n이로써 앞으로 제 웹사이트의 Google 순위를 향상시키고 다수의 SEO 이점을 얻을 수 있을 것으로 기대됩니다.\n\n<div class=\"content-ad\"></div>\n\n또한 몇 가지 텍스트를 개선하고 접근성 문제를 해결하여 모든 사람이 쉽게 이용할 수 있는 웹사이트로 만들었습니다.\n\n![image](/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_4.png)\n\n## 말로만 퍼지는 마케팅\n\n어떤 제품이든 만드는 것이 아니에요. 가장 많은 사용자를 확보하는 제품을 만드는 것이 아니에요. 내 사용자를 위해 최고의 제품을 만들고 싶어요!\n\n<div class=\"content-ad\"></div>\n\n나는 내 제품이 커다란 가치를 지니고 있으며 온라인 연구를 조직하는 방법을 혁신할 잠재력이 있다고 강하게 믿습니다. 따라서 제품이 정말 탁월할 때 사용자들이 그 제품을 추천해줄 것으로 예상되며, 이는 상당한 성장을 견인할 것으로 기대합니다.\n\n![이미지](/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_5.png)\n\n내가 지향하는 마케팅 방식이다. 그것이 내 앱의 주요 기능들이 무료인 이유일 것이다. 사람들이 연구를 더 향상시킬 수 있도록 하고, 제품을 진심으로 즐기면 다른 훌륭한 기능들에 액세스하기 위해 업그레이드할 수 있기를 희망합니다.\n\n# 최종 생각\n\n<div class=\"content-ad\"></div>\n\n물론 기사 제목은 일부러 도발적으로 작성되었고, 마케팅이 모든 제품에 있어 중요한 요소임을 이해해요.\n\n하지만 가끔은 대중을 대상으로하지 않을지라도 정말 우수한 제품을 갖는 것이 더 중요하다고 생각해요.\n\n사용자 확인은 중요하지만, 백만 명의 사용자를 대상으로 하기 전에 제품이 품질을 희생하지 않고 확장될 수 있는지 확인하는 것이 중요해요.\n\n특히 \"워너 펄스\"(Company of One)로서, 우선순위를 신중히 선택하고 때로는 그냥 가장 좋아하는 일을 하면 돼요: 건설하기.\n\n<div class=\"content-ad\"></div>\n\n읽어 주셔서 감사합니다! 🙏🏻\n\n내 Chrome 확장 프로그램을 어떻게 구축하고 거의 100,000명의 사용자로 확장했는지 더 알고 싶으신가요? 뉴스레터를 구독하거나 LinkedIn과 Twitter에서 저를 팔로우해주세요.","ogImage":{"url":"/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_0.png"},"coverImage":"/assets/img/2024-05-17-ForgetAboutMarketingFocusonBuildingAnAwesomeProduct_0.png","tag":["Tech"],"readingTime":5},{"title":"브라우저의 로컬 오버라이드 웹 개발자를 위한 안내","description":"","date":"2024-05-17 21:54","slug":"2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers","content":"\n\n때로는 웹 페이지의 내용을 원본 소스 코드에 액세스하지 않고 빠르게 변경해야 할 때가 있습니다. 테스트, 디버깅 또는 브라우징 경험을 사용자 정의하는 경우 등 여러 가지 이유로 그럴 수 있습니다.\n이 문서에서는 Local Overrides라는 멋진 도구를 사용하는 방법을 소개하겠습니다.\n\n![Local Overrides in the Browser Guide for Web Developers](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_0.png)\n\n## 그것이 왜 필요한가요?\n\n웹 애플리케이션을 개발할 때 특정 페이지의 다양한 측면을 변경하고 테스트해야 할 때가 있습니다. 변경한 내용을 서빙하기 전에 소스 코드를 수정하고 애플리케이션 파일을 재구축하는 옵션이 있습니다. 또 다른 방법으로는 실시간으로 코드를 수정하고 원하는 결과를 얻을 때까지 코드베이스를 변경하지 않고 변경 사항을 즉시 테스트할 수 있습니다.\n이 도구를 사용하면 다음과 같은 작업이 가능합니다:\n\n<div class=\"content-ad\"></div>\n\n- 피드백 — 실제 소스 파일을 수정하거나 웹사이트를 다시 배포할 필요 없이 실시간으로 변경 사항 확인 가능합니다.\n- 실험 — 다양한 스타일, 스크립트 및 HTML로 신속한 실험 가능합니다.\n- 문제 분리 및 오류 수정 — 브라우저에서 직접 작은 문제를 해결하고 테스트한 후 소스 코드에 적용 가능합니다.\n- 데모 관점 — 코드베이스에 영향을주지 않고 데모 중에 고객 요구 사항을 일시적으로 사용자 정의할 수 있습니다.\n\n그리고 그 이외 많은 기능들이 있습니다!\n\n## 이 멋진 도구와 상호 작용하는 방법은 무엇인가요?\n\n시작하려면 모든 파일을 저장할 오버라이드 폴더를 설정해야 합니다. \"Sources\" 탭을 클릭하고 왼쪽 사이드바에서 \"Overrides\"를 선택하세요.\n\n<div class=\"content-ad\"></div>\n\n\n![image 1](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_1.png)\n\n다음 단계는 '오버라이드를 위한 폴더 선택'을 클릭하여 오버라이드 파일을 호스팅할 폴더를 선택하거나 새로 만드는 것입니다. \"chrome_overrides\"라는 새 폴더를 만들었습니다.\nDevTools는 선택한 폴더에 대한 전체 액세스 권한을 요청하여 디스크에 쓰고 해당 폴더 내의 콘텐츠를 저장할 수 있습니다.\n\n![image 2](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_2.png)\n\n참고: Pokemon 웹 사이트에서 보여드리겠지만, 원하는 웹 사이트를 자유롭게 사용해도 괜찮습니다.\n링크: https://pokemon-kde6.vercel.app\n\n\n<div class=\"content-ad\"></div>\n\n웹 사이트의 리소스를 편집하려면 DevTools를 열고 \"네트워크\" 탭으로 이동하십시오 (네트워크 탭은 단순히 예시입니다. 다른 곳에서도 DevTools 내에서 콘텐츠를 재정의할 수 있습니다. 예를 들어 소스 -` 페이지에서), 그런 다음 편집하려는 리소스를 선택하십시오. 제 경우에는 변경 사항을 적용하기 전에 응용 프로그램에서 시험하고 싶어서 수정을 원합니다. CSS 파일을 선택합니다 (어떤 파일이든 될 수 있지만, CSS 파일을 선택했습니다). 이 파일을 마우스 오른쪽 버튼으로 클릭하고 나타나는 메뉴에서 \"콘텐츠 재정의\"를 선택하십시오.\n\n![이미지](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_3.png)\n\n\"콘텐츠 재정의\"를 클릭한 후에는 DevTools의 \"네트워크\" 탭이 저장된 리소스와 함께 \"소스\" 탭으로 리디렉션됩니다.\n\n![이미지](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_4.png)\n\n<div class=\"content-ad\"></div>\n\n지금은, 주요 색상을 변경해보려고 해요. 화면에 변경 사항이 반영되는 것을 확인해 볼까요?\n\nBefore:\n\n![Image](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_5.png)\n\nAfter:\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_6.png)\n\n변경 사항이 보이시나요?\n참고: 변경을 완료한 후에는 반드시 저장을 잊지 마세요.\n\n페이지를 새로 고칠 때 웹 사이트 파일을 가져오면 재작성된 내용이 우선합니다. 변경 사항이 더 이상 필요하지 않거나 서버에서 원래 파일을 가져오고 싶다면 \"로컬 재정의 활성화\"를 해제하면 됩니다.\n\n![이미지](/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_7.png)\n\n<div class=\"content-ad\"></div>\n\n## 요약:\n\n로컬 오버라이드를 사용하는 것은 여러 가지 이점이 있습니다. 여기에 몇 가지를 살펴보겠습니다:\n\n- 로컬 개발 및 테스트 — 즉각적인 피드백 및 실험.\n- 디버깅 및 문제 해결 — 문제 분리와 오류 수정에 도움이 됨.\n- 고객 데모용 맞춤화 — 임시 맞춤화로 고객 요구 사항 충족.\n\n이 게시물에 소중한 시간을 투자해 주셔서 감사합니다. 읽으시는 동안 즐거워하셨기를 바랍니다.\n즐거운 코딩하세요!","ogImage":{"url":"/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_0.png"},"coverImage":"/assets/img/2024-05-17-LocalOverridesintheBrowserGuideforWebDevelopers_0.png","tag":["Tech"],"readingTime":3},{"title":"웹사이트 개발을 위한 최고의 10가지 AI 도구","description":"","date":"2024-05-17 21:51","slug":"2024-05-17-Best10AIToolsforDevelopment","content":"\n\n![AI Tools](/assets/img/2024-05-17-Best10AIToolsforDevelopment_0.png)\n\n만약 여러분이 손가락을 튕겨 기술적인 기적을 만들어내는 것에 꿈꾸었던 적이 있다면, 여러분은 혼자가 아닙니다. 여러분의 꿈을 디지턈 현실로 만들어 약속하는 AI 도구의 황금광산에 오신 것을 환영합니다.\n\n개발에 사용될 수 있는 AI 도구 중 어떤 것이 여러분의 개발 과정을 혁신시킬 수 있는지 궁금증에 잠기셨던 적이 있나요? 품질을 희생하지 않고 개발 시간을 줄일 수 있는 방법은 무엇일까요? 완벽하고 원활한 소프트웨어 개발의 비밀은 무엇일까요? 전설적인 앨런 터링의 말을 빌리자면, \"우리는 앞으로의 짧은 거리만 보고 있지만, 해야 할 일이 많이 보입니다.\"\n\n소프트웨어 개발에서 효율성을 찾는 여정은 새로운 사가가 아닙니다. 시간, 비용 및 인적 제약과의 전쟁이죠. Standish 그룹의 2021 카오스 보고서와 같은 연구들은 리소스, 시간 또는 적절한 도구 부족으로 인해 초과 경비 또는 실패로 이어지는 프로젝트의 거대한 66%를 강조합니다. 이것은 단순히 문제가 아니라 잠재적인 위기와 혁신을 삼키고 있는 검은 구멍입니다.\n\n<div class=\"content-ad\"></div>\n\n테이블 태그를 Markdown 형식으로 변경하세요.\n\n<div class=\"content-ad\"></div>\n\nAI 개발 도구는 소프트웨어 개발의 풍경을 근본적으로 변화시키며 전례없는 효율성과 능력을 제공합니다. 이러한 기술적 진보가 개발 프로세스를 어떻게 재구성하고 있는지에 대한 포괄적인 개요입니다:\n\n- 향상된 효율성. 개발을 위한 AI 도구는 반복적이고 시간이 많이 소요되는 작업을 자동화하여 개발 주기를 현저히 가속화합니다. 이는 코드 생성부터 버그 검출까지 모든 것을 포함하며, 개발자들이 소프트웨어 개발의 더 복잡하고 창의적인 측면에 집중할 수 있도록 해줍니다. 결과적으로 프로젝트의 속도는 빨라지면서도 품질이 희생되지 않습니다.\n- 예를 들어, 개발자들이 일반 언어로 기능을 설명하면 AI 도구는 사용할 준비가 된 코드를 생성하여 프로젝트 완료 속도를 크게 높입니다. 이 자동화로 인해 개발자들은 보다 복잡한 작업에 집중할 수 있어 품질을 희생하지 않으면서 프로젝트를 더 빠르게 완료할 수 있습니다.\n- 향상된 정확성. 개발을 위한 AI 도구가 제공하는 정밀도는 비급이다. 방대한 데이터셋을 활용하여 기계 학습 모델을 훈련시킴으로써, 이러한 도구들은 극도로 정확한 권고사항과 최적화를 제공합니다. 이 수준의 정확성은 개발자들이 정보에 기반한 결정을 내릴 수 있고 오류가 없는 코드를 작성하는 데 도움을 줍니다.\n- 예를 들어, 오류 검출 및 코드 최적화를 살펴보겠습니다. 여기서 AI 도구가 인간 개발자들이 간과할 수 있는 문제를 식별할 수 있습니다. 이는 더 신뢰할 수 있고 오류가 적은 애플리케이션을 생성하는 데 도움을 주어 소프트웨어 프로젝트의 전체 품질을 향상시킵니다.\n\n요약하면, AI 개발 도구는 소프트웨어 개발을 더 빠르고 정확하며 혁신에 초점을 맞춘 방향으로 변화시키며 이러한 고급 기술을 활용함으로써 개발자들은 디지털 시대의 요구 사항을 충족할뿐 아니라 초월할 수 있습니다.\n\n# Best 10 + AI 도구 개발환경\n\n<div class=\"content-ad\"></div>\n\nAI 도구 개발을 위한 최고의 도구 목록을 만들려면 각 도구가 제공하는 내용, 이상적인 사용자 베이스, 핵심 기능, 가격 전략, 그리고 장단점을 균형있게 고려해야 합니다. 디지털 도구 창고를 살펴보고, AI의 힘을 활용하려는 개발자들에게 필수적인 요소를 확인해보도록 하죠.\n\n# Flatlogic Generator\n\n![Flatlogic Generator](/assets/img/2024-05-17-Best10AIToolsforDevelopment_2.png)\n\nFlatlogic Generator는 비즈니스 소프트웨어 개발을 간편하게 만들기 위해 설계된 혁신적인 AI 도구입니다. 사용자가 영어로 애플리케이션을 설명하거나 사용자 인터페이스를 통해 입력함으로써, 백엔드, 프론트엔드 및 데이터베이스 구성 요소를 포함한 완전한 웹 앱을 생성합니다. 이 도구는 빠른 프로토타이핑 및 개발을 위한 게임 체인저로, 저코드/노코드 플랫폼의 제약 없이 코드 소유권, 사용자 정의 및 확장성을 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n대상 그룹: 기업가, 개발자 및 높은 정도의 맞춤화가 필요한 기업들을 위한 빠르고 확장 가능한 웹 응용 프로그램 개발이 필요한 기업들.\n\n주요 기능:\n\n- 응용 프로그램 생성을 위한 자연어 처리.\n- CRUD 작업을 포함한 풀 스택 응용 프로그램 생성.\n- 수정 가능한 템플릿과 코드베이스.\n- 여러 프로그래밍 언어 및 프레임워크 지원.\n- 확장성 문제가 없는 배포 준비된 응용 프로그램.\n\n가격 모델: 다양한 프로젝트 규모와 요구 사항을 고려한 여러 계층으로 이루어진 구독 기반 모델.\n\n<div class=\"content-ad\"></div>\n\n장점:\n\n- 웹 애플리케이션의 신속한 프로토타이핑 및 개발.\n- 광범위한 코딩 지식이 필요 없음.\n- 완전한 코드 소유 및 사용자 정의 유연성 제공.\n\n단점:\n\n- 장기 프로젝트의 경우 구독 비용이 누적될 수 있음.\n- 고급 사용자 정의 및 통합을 위해 기술적 지식이 필요할 수 있음.\n\n<div class=\"content-ad\"></div>\n\n# 텐서플로우\n\n![텐서플로우](/assets/img/2024-05-17-Best10AIToolsforDevelopment_3.png)\n\n텐서플로우는 Google Brain에서 개발한 오픈 소스 기계 학습 프레임워크입니다. 고성능 수치 연산을 위해 설계되었으며, 개발자들이 쉽게 복잡한 AI 모델을 만들 수 있습니다. 특히, 텐서플로우는 다양한 플랫폼에 걸쳐 AI 응용 프로그램을 연구하고 배포할 수 있는 유연성으로 유명합니다.\n\n대상 독자: AI 연구원, 기계 학습 엔지니어, 대규모 AI 프로젝트를 수행하는 개발자들.\n\n<div class=\"content-ad\"></div>\n\n주요 기능:\n\n- 데이터 플로 그래프를 사용한 숫자 계산을 위한 포괄적인 라이브러리.\n- 딥 러닝 및 신경망 모델에 대한 포괄적인 지원.\n- CPU, GPU, 및 TPU에서 확장 가능.\n- 서버부터 엣지 디바이스까지 다양한 플랫폼에 강력한 모델 배포.\n\n가격 모델: 무료, 오픈 소스 소프트웨어.\n\n장점:\n\n<div class=\"content-ad\"></div>\n\n- 매우 유연하고 확장 가능합니다.\n- 강력한 커뮤니티 지원 및 방대한 문서가 있습니다.\n- 지속적인 업데이트와 개선 사항이 있습니다.\n\n단점:\n\n- 초보자에게는 학습 곡선이 가파를 수 있습니다.\n- 간단한 AI 프로젝트에는 너무 복잡할 수 있습니다.\n\n# IBM Watson\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-05-17-Best10AIToolsforDevelopment_4.png\" />\n\nIBM Watson은 다양한 서비스를 제공하는 강력한 AI 플랫폼입니다. 자연어 처리를 우수하게 처리하여 챗봇 및 고객 서비스 솔루션과 같이 언어 이해가 필요한 애플리케이션에 이상적입니다.\n\n타겟 오디언스: 고객과 관련하여 AI를 기업 업무에 도입하고자 하는 비즈니스 및 개발자들.\n\n주요 기능:\n\n<div class=\"content-ad\"></div>\n\n- 자연어 처리 (NLP) 및 이해.\n- 음성 인식 및 텍스트 음성 변환 서비스.\n- 시각 인식 및 기계 학습 기능.\n- 기존 애플리케이션 및 시스템과의 쉬운 통합.\n\n가격 모델: 소개 및 탐색을 위한 무료 티어가 포함된 Pay-as-you-go.\n\n장점:\n\n- 고급 NLP 기능.\n- 다양한 AI 서비스 및 도구.\n- 강력한 기업 지원 및 보안 기능.\n\n<div class=\"content-ad\"></div>\n\n아래는 Markdown 형식으로 표시합니다.\n\n\nCons:\n\n- Pricing can become expensive with increased usage.\n- May require IBM-specific knowledge for integration and optimization.\n\n# Google Cloud AI Platform\n\n![Image](/assets/img/2024-05-17-Best10AIToolsforDevelopment_5.png)\n\n\n<div class=\"content-ad\"></div>\n\nGoogle Cloud AI Platform은 개발자들이 대규모로 AI 모델을 구축, 훈련 및 배포할 수 있게 해주는 머신러닝 서비스 모음입니다. TensorFlow를 비롯한 다양한 머신러닝 프레임워크를 지원하며, AI 개발 프로세스 각 단계에 대한 도구를 제공합니다.\n\n대상: 머신러닝 모델을 개발하고 배포하려는 모든 크기의 개발자 및 기업.\n\n주요 기능:\n\n- 머신러닝 모델 개발을 위한 통합된 도구 세트.\n- TensorFlow, PyTorch 및 기타 프레임워크 지원.\n- 최소한의 노력으로 고품질 모델을 훈련하는 AutoML 기능.\n- AI 애플리케이션을 배포할 수 있는 확장 가능하고 안전한 인프라.\n\n<div class=\"content-ad\"></div>\n\n가격 모델: 자원 사용량에 따른 요금제.\n\n장점:\n\n- 포괄적이고 통합된 AI 개발 도구.\n- 높은 확장성과 유연성.\n- 강력한 문서 및 커뮤니티 지원.\n\n단점:\n\n<div class=\"content-ad\"></div>\n\n- 대규모 배포에 비용이 많이 들 수 있습니다.\n- 플랫폼의 복잡성이 입문자에게는 어려울 수 있습니다.\n\n# Amazon SageMaker\n\n![Amazon SageMaker](/assets/img/2024-05-17-Best10AIToolsforDevelopment_6.png)\n\nAmazon SageMaker는 모든 개발자와 데이터 과학자에게 빠르게 머신러닝 모델을 구축, 학습 및 배포할 수 있는 완전히 관리되는 서비스입니다. SageMaker는 머신러닝 모델 수명주기를 간단하게 만들어 제한된 머신러닝 전문 지식을 가진 사람들도 쉽게 액세스할 수 있게 합니다.\n\n<div class=\"content-ad\"></div>\n\n대상 고객: 데이터 과학자, 개발자 및 비즈니스가 기계 학습 모델의 개발 및 배포를 간소화하려고 하는 경우.\n\n주요 기능:\n\n- 모델 구축 및 학습용 완전 관리형 주피터 노트북.\n- 훈련된 모델의 원클릭 배포 및 자동 스케일링.\n- 내장 알고리즘 및 사용자 정의 지원.\n- 모델 모니터링 및 워크플로 자동화.\n\n가격정책: 모델 훈련 및 배포에 대한 PAYG(Pay-as-you-go) 가격정책.\n\n<div class=\"content-ad\"></div>\n\n장점:\n\n- 머신 러닝 모델 라이프사이클을 간편화합니다.\n- 확장 가능하며 완전히 관리되는 서비스입니다.\n- 다른 AWS 서비스와 통합이 가능합니다.\n\n단점:\n\n- 가격 책정이 복잡하여 예측하기 어려울 수 있습니다.\n- 최적 사용을 위해 AWS 전문 지식이 필요할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# OpenAI API\n\n![OpenAI API](/assets/img/2024-05-17-Best10AIToolsforDevelopment_7.png)\n\nOpenAI API는 GPT-3와 같은 강력한 AI 모델에 대한 액세스를 제공합니다. 자연어 처리 작업에 넓은 범위로 사용할 수 있습니다. 이 API는 고급 자연어 처리를 응용 프로그램에 통합하려는 개발자를 위해 설계되었습니다. 자동 콘텐츠 생성부터 복잡한 언어 이해까지 다양한 작업에 활용할 수 있습니다.\n\n대상 대상층: 최신 자연어 처리 기술을 응용 프로그램에 통합하려는 개발자 및 비즈니스들입니다.\n\n<div class=\"content-ad\"></div>\n\n주요 특징:\n\n- 최신 언어 모델 (예: GPT-3)에 접근할 수 있습니다.\n- 다양한 언어 작업을 지원합니다.\n- 간편한 통합 및 API 사용이 가능합니다.\n- 확장 가능하고 신뢰할 수 있는 인프라입니다.\n\n가격 모델: 모델 및 이용량에 따라 계층별 요율이 적용되는 사용 기반 가격 책정.\n\n장점:\n\n<div class=\"content-ad\"></div>\n\n- 선도적인 언어 처리 기능.\n- 통합하고 사용하기 쉬움.\n- 지속적인 모델 개선과 업데이트.\n\n단점:\n\n- 대규모로 확장할 경우 높은 비용.\n- OpenAI 플랫폼 및 모델 이용에 의존.\n\n# Microsoft Azure Machine Learning\n\n<div class=\"content-ad\"></div>\n\n\n![2024-05-17-Best10AIToolsforDevelopment_8.png](/assets/img/2024-05-17-Best10AIToolsforDevelopment_8.png)\n\nMicrosoft Azure Machine Learning은 클라우드 기반 플랫폼으로, 기계 학습 모델을 구축, 훈련 및 배포할 수 있습니다. 경험이 풍부한 데이터 과학자와 기계 학습에 익숙하지 않은 개발자 모두를 위한 다양한 도구 및 서비스를 제공하며, 다른 Azure 서비스와의 원활한 통합을 강조합니다.\n\n대상 그룹: 데이터 과학자, AI 개발자 및 AI 솔루션을 위해 클라우드 인프라를 활용하는 기업들.\n\n주요 기능:\n\n\n<div class=\"content-ad\"></div>\n\n- 비전문가를 위한 드래그 앤 드롭 기계 학습 모델 빌더.\n- 효율적인 모델 관리를 위한 고급 기계 학습 파이프라인.\n- 엔드 투 엔드 애플리케이션 개발을 위한 Azure 서비스 통합.\n- 자동 알고리즘 및 하이퍼파라미터 선택을 위한 AutoML.\n\n가격 모델: Azure는 리소스 및 서비스에 따라 비용이 다양한 페이 애스 유 고 가격 모델을 제공합니다.\n\n장점:\n\n- 포괄적인 클라우드 기반 기계 학습 플랫폼.\n- 코드 우선 및 저 코드 개발을 지원합니다.\n- Azure 생태계와의 강력한 통합.\n\n<div class=\"content-ad\"></div>\n\n단점:\n\n- 초보자에게는 복잡할 수 있습니다.\n- 클라우드 리소스를 많이 사용하면 비용이 늘어날 수 있습니다.\n\n# H2O.ai\n\n![H2O.ai](/assets/img/2024-05-17-Best10AIToolsforDevelopment_9.png)\n\n<div class=\"content-ad\"></div>\n\nH2O.ai는 고급 AI 모델의 생성을 민주화하는 오픈 소스 자동화 기계 학습 플랫폼입니다. 기업 및 개발자가 심층적인 머신러닝 전문 지식 없이도 신속하게 실험하고 AI 모델을 배포할 수 있도록 설계되었습니다.\n\n대상 독자: 데이터 과학자, 분석가 및 AI 구현에 대한 직관적인 경로를 찾는 기업들.\n\n주요 기능:\n\n- 자동 모델 학습 및 조정을 위한 AutoML 기능.\n- 다양한 머신러닝 알고리즘 지원.\n- 대형 데이터 플랫폼과의 쉬운 통합.\n- 대규모 데이터셋 및 복잡한 모델 처리를 위한 확장성.\n\n<div class=\"content-ad\"></div>\n\n가격 모델: H2O.ai는 오픈 소스 버전과 유료 엔터프라이즈 버전 H2O Driverless AI을 제공하며, 고급 기능과 지원을 제공합니다.\n\n장점:\n\n- 비전문가들에게 사용하기 쉽고 접근성이 좋습니다.\n- 강력한 커뮤니티 및 엔터프라이즈 지원.\n- 대용량 데이터 애플리케이션에 대한 높은 확장성.\n\n단점:\n\n<div class=\"content-ad\"></div>\n\n- 기업 버전은 비용이 비쌉니다.\n- 수동 코딩 모델과 비교했을 때 일부 맞춤화 제한 사항이 있습니다.\n\n# 아나콘다\n\n![아나콘다](/assets/img/2024-05-17-Best10AIToolsforDevelopment_10.png)\n\n아나콘다는 과학 계산 및 데이터 과학을 위한 Python 및 R의 인기있는 오픈 소스 배포판입니다. AI 및 기계 학습 프로젝트를 위한 패키지 관리 및 배포를 간소화하여 복잡한 데이터 과학 및 AI 환경을 쉽게 설치, 실행 및 업데이트할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n대상 독자: 머신러닝, 데이터 분석 및 과학 계산 프로젝트에 종사하는 데이터 과학자, 개발자 및 연구자들.\n\n주요 특징:\n\n- Conda를 사용하여 패키지 및 환경을 쉽게 관리할 수 있습니다.\n- 수천 개의 데이터 과학 및 머신러닝 패키지를 제공합니다.\n- 상호작용형 데이터 탐색을 위한 주피터 노트북 통합.\n- 다양한 요구 사항을 충족시키기 위해 커뮤니티 및 상업용 버전을 제공합니다.\n\n가격 모델: 개인용 무료 오픈 소스 버전. 팀 및 기업용 상업용 버전도 제공됩니다.\n\n<div class=\"content-ad\"></div>\n\n장점:\n\n- AI 프로젝트의 환경 관리를 간편화합니다.\n- 다양한 라이브러리와 도구가 쉽게 사용할 수 있습니다.\n- 강력한 커뮤니티 지원이 있습니다.\n\n단점:\n\n- 리소스를 많이 사용할 수 있습니다.\n- 초보자가 환경을 효과적으로 관리하기 위해 학습 곡선이 존재합니다.\n\n<div class=\"content-ad\"></div>\n\n# DataRobot\n\n![Image](/assets/img/2024-05-17-Best10AIToolsforDevelopment_11.png)\n\nDataRobot은 엔터프라이즈 AI 플랫폼으로, 머신러닝 모델을 구축하고 배포하며 유지하는 전체 프로세스를 자동화합니다. 비즈니스 애널리스트와 개발자들이 데이터 과학에 접근하기 쉽도록 설계되었으며, 배포 속도와 모델 정확도를 강조합니다.\n\n타겟 오디언스: 비즈니스 애널리스트, 데이터 과학자, 기술 전문 지식이 깊지 않은 채 머신러닝 모델을 신속하게 배포하고자 하는 기관들.\n\n<div class=\"content-ad\"></div>\n\n주요 기능:\n\n- 모델 빌딩 및 배포를 위한 자동화된 기계 학습 (AutoML).\n- 모델 관리 및 모니터링을 위한 포괄적인 대시보드.\n- 기업 데이터 시스템 및 클라우드 서비스와의 통합.\n- 고급 모델 설명 및 거버넌스 기능.\n\n가격 모델: 가격은 배포의 특정 요구 사항과 규모에 기반하여 결정됩니다.\n\n<div class=\"content-ad\"></div>\n\n- 머신 러닝 라이프사이클을 간편하게 만들어줍니다.\n- 다양한 전문 지식 수준의 사용자에게 접근이 용이합니다.\n- 모델 관리와 거버넌스에 집중합니다.\n\n단점:\n\n- 가격이 분명하지 않을 수 있고 비용이 높을 수 있습니다.\n- 복잡한 사용 사례에 대해 추가 구성이 필요할 수 있습니다. \n\n# 요약\n\n<div class=\"content-ad\"></div>\n\n커스텀 소프트웨어 개발 분야는 인공 지능 도구에 의해 변화하고 있습니다. 이 도구들은 전례 없는 효율성, 정확성, 확장성을 제공합니다. 개발자와 기관들이 이 진화하는 환경을 탐색하는 중에 도구 선택은 프로젝트의 속도, 품질, 혁신에 상당한 영향을 미칠 수 있습니다.\n\n기술적 혁명 속에서 Flatlogic은 선두에 서 있으며, Flatlogic Generator를 제공하여 신속하고 확장 가능하며 사용자 정의가 가능한 비즈니스 소프트웨어 개발(CRM, ERP, HRM 등)의 해결책으로 제공합니다. 프로토 타입을 빠르게 만들거나 복잡한 응용 프로그램을 개발하거나 최신 AI 기능을 활용하여 프로젝트를 구축하는 경우라도 Flatlogic Generator는 기존 개발 방법론의 제약 없이 여러분의 요구 사항을 충족시키도록 설계되었습니다.\n\nFlatlogic와 함께 소프트웨어 개발의 미래를 받아들이세요. 우리의 서비스를 살펴보고, Flatlogic Generator의 파워를 이용해 탁월한 효율성 및 사용자 정의 기능을 실현하세요. 함께 놀라운 결과물을 만들어봅시다.","ogImage":{"url":"/assets/img/2024-05-17-Best10AIToolsforDevelopment_0.png"},"coverImage":"/assets/img/2024-05-17-Best10AIToolsforDevelopment_0.png","tag":["Tech"],"readingTime":10},{"title":"프론트엔드 개발자를 위한 변수 이름 짓기 팁","description":"","date":"2024-05-17 21:48","slug":"2024-05-17-NamingVariablesistheEternalStruggleBetweenClarityandCrypticProfanity","content":"\n\n그 깜빡이는 커서를 응시하며, 머릿속에서 지나치게 구체적이거나 혼란스러운 적절하지 않은 가능성 범위를 지나갑니다.\n\n내가 시간을 더 낭비한 것은 변수 이름을 고민하는 것이라고 인정하기를 원치 않는다. 이건 섬세한 균형이다. 변수의 목적을 명확하고 간결하게 나타내는 것이 좋지만, 또한 이 미친 코드를 작동시키려고 하는 내 안에서 맴돌고 있는 감정 범위 전부를 표현하고 싶다.\n\n여기 나의 변수 명명 지옥을 겪은 개인적인 여정.\n\n## 순진한 이상주의자 단계\n\n<div class=\"content-ad\"></div>\n\n아, 코딩이 간단했던 초창기 날들이 떠오르네요. 새로 판올린 교과서와 좋은 의지를 가지고, 명확한 변수명이 유지보수 가능한 코드의 핵심이라고 믿었던 제 모습이 생생하게 기억돼요. \"customerTransactionHistory\"와 같은 이름은 제 손끝에서 흘러나온 것처럼 풀어진 걸작으로, 목적에 대해 약간이라도 불분명함을 남기지 않았어요.\n\n미래 개발자(혹은 나 자신)가 제 코드를 감탄하며 살펴볼 것을 상상했죠, 세심한 주의를 기울인 것을 감사히 여기는 모습을 떠올릴 수 있어요. 천진난만한 제 마음이시죠. 하지만, 이 접근 방식이 실패로 이끈 이유가 여기 있어요.\n\n현실의 코드는 그다지 예쁘지 않아요. 복잡한 중첩 구조와 10개의 매개변수를 지닌 함수와 마주하면 이상주의는 깨지게 돼요. 아름다운 변수 이름들이 글 같아 보이기 시작해요.\n\n완벽한 변수 이름을 만드는 데 다섯 분을 쓰는 건 소중한 문제 해결 시간을 뺏어갈 수 있어요. 코드의 한 부분에서 완벽했다고 생각하는 것이 다른 부분에서는 지나치게 장황해 보일 수 있어요. 모듈이나 함수 내에서의 네이밍 규칙은 단어의 쓸데없는 증가 없이 명확성을 유지할 수 있게 도와줘요.\n\n<div class=\"content-ad\"></div>\n\n서술적인 이름이 좋지 않다는 건 아니에요. 다만 교과서적인 이상에 매몰되어 더 큰 그림 — 가독성이 좋고 효율적으로 작성되는 코드를 만드는 것을 간과한 적이 있어요. 몇 년 동안 변수들이 (조금) 짧아졌다고 할까요.\n\n# 암호화된 약어 단계\n\n이상주의가 끝난 후, 난 역행했어요. 좌절과 효율적이지 못한 감각에 힘입어, 암호화된 약어의 어두운 세계를 받아들였어요. \"usrData\"? \"tmpObj\"? 나만이 해독할 수 있는 비밀 언어로만 보이는 제 코드는 가끔은 나조차 해독하지 못할 때도 있었어요.\n\n나는 이게 개발자 기술의 정점이라고 자신을 납듯했죠. 긴 서술적인 이름은 초보자들을 위한 것일 뿐이라고 납듯했어요. 진짜 개발자들은 밀과 쌈채로 구별되는 코드 줄임말로 의사소통해야 한다고 생각했어요. 그런데, 이 논리의 문제는 종종 제가 쌈채로 남게 된다는 거예요.\n\n<div class=\"content-ad\"></div>\n\n크립틱 약어에 대해 언급해보겠습니다. 미래의 여러분은 멍청한 사람이 될 거예요. \"prcFl\"이라고 쓸 때 느끼는 뛰어난 명확성은 코드에서 멀어지면 금방 사라질 거예요.\n\n\"tmp\"는 흐름 속에서 명확해 보일 수 있지만, 일주일 후에는 임시 개체일지, 임시 파일일지...누가 알겠어요? 영광스러운 고립 환경에서 작업하지 않는 이상, 암호화된 약어는 코드 리뷰를 혼란과 좌절의 악몽으로 만들어버릴 거예요.\n\n오해하지 마세요, 약어를 사용하는 시기와 장소는 있어요. 잘 정립된 패턴이나 작은 함수 내에서는 사용할 수 있어요. 하지만 새로운 글리픽 언어를 발명하기 시작한다면, 한 발 물러서야 할 때입니다.\n\n# \"모든 것이 망가졌다, 포기해야 할 때\" 단계\n\n<div class=\"content-ad\"></div>\n\n우리 모두 한 번쯤은 그런 적이 있었죠. 버그가 수 시간 동안 논리에 저항하고, 정신이 미치도록 아슬아슬한 상태이며, 카페인은 오히려 의도와는 반대 효과를 나타내기 시작했을 때 말이에요. 그때 진정으로 혐오스러운 변수 이름들이 드러나게 되는 거죠.\n\n\"뭔가\"나 \"것\"이 그 시작에 불과합니다. 곧이어 \"이거아마뭔가를하는게아닐까\", \"이건만지지마세요\"와 업무 환경에서는 명백히 부적합한 몇 가지 이름들이 코드에 가득할 거예요. 이것들은 그저 변수 이름 이상이에요 — 당신의 좌절을 상징하는 기념비 같은 존재죠.\n\n\"포기\" 단계에 머무르는 것은 위험한 위치라는 이유가 여기 있어요. 절망은 전염력이 있답니다.\n\n이 상태의 코드를 우연히 발견하는 동료를 상상해보세요. 그것은 개발자의 공포 영화와 같을 거예요. 말로 표현할 수 없는 이름으로 낙인 찍힌 건, 코드가 무엇을 해야 하는지 스스로 잊어버렸다는 신호겠죠. 키보드에서 멀어지세요, 친구야.\n\n<div class=\"content-ad\"></div>\n\n가끔, 이 지점에 도달했을 때 할 수 있는 최선의 일은 멀리 물러나는 것입니다. 머리를 식히고 다른 작업에 도전하고 신선한 시각으로 다시 돌아오세요. 잘못된 변수명조차도 디버깅 절망의 깊이를 나타내는 변수명보다는 낫습니다.\n\n# 욕설이 섞인 붕괴\n\n모든 개발자의 여정에서 이성과 점잖음이 버려진 지점이 있습니다. 너무 악랄하고 놀랍게 비논리적인 버그가 있어서 유일한 적절한 대응은 변수명에 언어감정을 엮은 문자열을 남기는 것입니다.\n\n바다사나이마저 얼굴이 붉어질 만한 이름을 생각해보세요 (그리고 아마 당신의 감정 안정성을 의심할 지도 모릅니다). 이들은 그냥 변수명이 아니라 코드베이스에 방출된 원시적인 비명입니다. 압도적인 좌절 속에서 필사적이고 정화적인 행동입니다.\n\n<div class=\"content-ad\"></div>\n\n여기가 이 단계에 대한 점인데요 - 혼자 일하는 경우가 아니거나 팀원들이 욕설에 대해 매우 편안한 태도를 가지고 있다면 '커밋'을 누르기 전에 한 번 더 생각해보세요.\n\n코드를 통해 분노를 표현하는 것에 이상한 만족감이 있습니다. 버그를 고치지는 못하지만, 영혼을 파괴하는 압박을 어느 정도 해소할 수 있을 겁니다. 욕설이 기본적인 네이밍 규칙이 되면 키보드에서 떨어져 나와야 할 때가 왔습니다. 산책을 해보거나 베개에 소리를 지르거나, 뇌를 초기화하기 위해 무엇이든 해보세요.\n\n자, 전술하고 싶지 않지만, 코드를 5학년 학생의 욕설 그릇으로 만드는 것을 옹호하고 싶지 않습니다. 가끔 잘 사용된 악센트 (분별하여 사용되며 제작 코드에 남아 있지 않는 경우)가 개발자의 절망의 깊이를 표현하는 유일한 방법일 수도 있습니다.\n\n#깨달음의 순간\n\n<div class=\"content-ad\"></div>\n\n가끔씩, 나는 완벽한 하이쿠를 이루어냅니다 - 기술적이면서도 약간의 절망이 묻어나는 변수명을 만들어 냈다는 사실입니다.\n\n알 수 없는 약자와 욕설이 섞인 혼돈의 중 속에서 간혹 영감의 빛이 비치곤 합니다. 그런 순간에 당신은 불가능한 것을 이기고 하나의 변수명을 얻게 됩니다. 간결하고 정확하며, 당신이 겪은 감정의 놀이를 소중하게 담아낸.\n\n이 이름들은 단순한 라벨 이상으로, 당신의 투쟁의 증거입니다. 여기 몇 가지 제가 만든 것을 소개합니다.\n\n- almostWorks: 남아 있는 불신 가운데 희망의 문을 열다. 우리 모두가 그 상황을 겪었습니다.\n- fixAttempt4 (pleaseWork): 괄호 안에는 개발자에게 국적화된 절망이 담겨 있습니다.\n- whyDoesThisExist: 당신의 프로그램 안에 코딩된 존재론적 질문입니다.\n- temporaryFixThatBecamePermanent: 아마도 쌓인 기술 부채에 대한 자기 비하적인 인정입니다.\n\n<div class=\"content-ad\"></div>\n\n변수 이름은 섬세한 균형을 유지해야 합니다. 목적을 제대로 이뤄주는 동시에 이야기를 전달해야 합니다. 알맞은 이름은 버그를 처리한 이야기, 의문스러운 설계 선택, 그리고 우리의 직업에 스며든 고요한 포기를 대변합니다.\n\n완벽한 시스템은 없습니다. 때로는 간결함을 위해 명확성을 포기해야 하는 경우도 있습니다. 다른 경우에는 지나치게 장황한 몬스트로시티가 되기도 합니다. 그리고 당신이 그 순간에 이해할 수 있는 변수 이름이 있더라도, 몇 달 뒤에 돌아와 당신을 괴롭힐 수 있습니다.\n\n제가 해줄 수 있는 진짜 조언은 — 최선을 다하되, 정신 건강을 위해 몇 가지 주석을 남기고, 당신의 코드를 푸시하기 전에 참혹한 변수 이름을 다듬어내기 위해 스스로를 표현하는 데 겁내지 않는 것입니다.","ogImage":{"url":"/assets/img/2024-05-17-NamingVariablesistheEternalStruggleBetweenClarityandCrypticProfanity_0.png"},"coverImage":"/assets/img/2024-05-17-NamingVariablesistheEternalStruggleBetweenClarityandCrypticProfanity_0.png","tag":["Tech"],"readingTime":5},{"title":"웹에서 텍스트 크기 조절을 하는 방법","description":"","date":"2024-05-17 21:46","slug":"2024-05-17-RethinkingTextResizingonWeb","content":"\n\n\n![Airbnb의 웹 접근성 개선](/assets/img/2024-05-17-RethinkingTextResizingonWeb_0.png)\n\nAirbnb는 대문자 텍스트 크기가 필요한 호스트 및 게스트를 위해 웹 접근성을 개선하는 데 큰 발전을 이루었습니다.\n\n이 게시물에서는 다음을 자세히 살펴봅니다:\n\n- 브라우저 줌에 의존할 때 모바일 웹에서 발생하는 문제들\n- 모든 프론트엔드 엔지니어들의 워크플로에 영향을 미칠 변경 사항 도입의 어려움\n- 이러한 접근성 향상을 시작한 이후 본 이점들\n\n\n<div class=\"content-ad\"></div>\n\nby: Steven Bassett\n\n에어비앤비에서 웹 접근성을 높이는 것은 중요하다고 여겨지며, 접근성 준수 노력을 이끄는 데 Web Content Accessibility Guidelines (WCAG)를 사용합니다. 접근성 문제로 이어지기 쉬운 WCAG 1.4.4 Resize Text (레벨 AA)에 주목합니다. 이 지침은 우리가 '텍스트 크기 조정'이라고 부르며, 안경이나 처방된 콘택트렌즈와 같은 교정 가능한 시력문제가 있는 사람들에게 큰 혜택을 줍니다. 이 표준은 텍스트 크기를 원래 크기의 200% (2배)로 변경할 때 웹 콘텐츠 및 기능이 유지되어야 한다고 명시하고 있습니다. 우리 사이트가 이 가이드라인을 준수하는지 확인하는 것은 우리가 모든 사용자의 접근성을 향상시키기 위해 계속해서 하는 작업의 중요한 부분입니다.\n\n이 블로그 게시물에서는 이 가이드라인의 중요성에 대한 조사, 사이트 문제 분석 방법, rem 단위 사용의 기술적 이점, 접근 방법 결정 방식, 만난 교차 브라우저 지원 문제, 그리고 Resize Text의 문제 보고 건수를 줄이는 데 봤던 이점에 대해 살펴보겠습니다.\n\n# 시력이 어려운 사용자의 요구 충족하기\n\n<div class=\"content-ad\"></div>\n\n미리 앞을 내다: 미래를 위한 우리의 시야 개선” CDC\n\n예를 들어, 시력이 크게 감소한 사람에게 에어비앤비 홈페이지가 어떻게 보일지 상상해보세요. 아래에 표시된 것처럼, 텍스트는 편안하게 읽기가 매우 어려워집니다.\n\n## 브라우저 확대\n\n접근성 도전 과제를 더 잘 이해하기 위해 브라우저 확대 기능이 어떻게 작동하는지 알아봅시다. 이미 이 기능에 익숙할 수도 있습니다. 창 내에서 모든 콘텐츠의 크기를 조절하기 위해 Command / Ctrl + 또는 Command / Ctrl —와 같은 키보드 단축키를 사용해 본 적이 있을 것입니다. 확대 비율이 100%를 초과하면 뷰포트의 높이와 너비가 비례적으로 줄어들고, 컨텐츠는 더 큰 창에 맞게 확대되어 표시됩니다.\n\n<div class=\"content-ad\"></div>\n\n접근성 테스트 전략의 일환으로, 데스크톱 및 모바일 크기에서 페이지의 사용성을 테스트하기 위해 브라우저 확대 기능을 사용했습니다. 데스크톱 테스트 결과, 반응형 웹 방식이 전체 사이트에 걸쳐 200% 확대 수준에서 상대적으로 잘 작동하는 것으로 나타났습니다. 모바일 웹과 비교했을 때 전반적인 사용자 경험에서 문제가 적었습니다.\n\n이는 데스크톱 환경에서 잘 작동하는데, 거기에서는 작은 브레이크포인트(예: 넓은 화면에서 콤팩트한 화면)을 제공하고 뷰포트가 비교적 넓기 때문입니다. 그러나 브라우저 확대의 한계는 모바일 웹에서 더욱 두드러지게 나타납니다. 모바일 뷰포트는 더 작기 때문에 모바일 뷰포트에서 콘텐츠를 확대할 경우, 원본의 절반 너비와 절반 높이의 뷰포트에 맞춰야 합니다. 이는 텍스트와 UI 요소가 읽거나 상호 작용하기 매우 어렵게 만들어 중요한 접근성 문제가 발생할 수 있습니다. 오른쪽 이미지처럼, 한 화면의 가치만큼의 정보를 보고 뒤로 스크롤 없이 볼 수 없는 상황은 사용자에게 답답한 경험을 줄 수 있습니다.\n\n![이미지](/assets/img/2024-05-17-RethinkingTextResizingonWeb_1.png)\n\n# 폰트 스케일링\n\n<div class=\"content-ad\"></div>\n\n폰트 스케일링은 전체 페이지 줌과는 독립적으로 텍스트 크기를 조절하는 기능을 설명하는 용어입니다. 브라우저 줌과 달리 모든 콘텐츠를 비례적으로 확대 또는 축소하는 대신, 폰트 스케일링은 페이지의 텍스트 요소에만 적용됩니다. 이를 통해 사용자는 화면 레이아웃이나 반응성에 큰 영향을 주지 않으면서 원하는 글꼴 크기에 맞게 폰트 크기를 사용자 정의할 수 있습니다.\n\n폰트 스케일링은 사용자의 기본 크기에 따라 폰트 크기를 조절하는 용어로 사용될 것입니다. 줌과는 달리 이 설정은 모든 사이트에 적용됩니다. 아래는 화면의 텍스트에만 폰트 스케일링이 적용되는 예제이며 전체 콘텐츠가 아닌 텍스트만 크기가 증가하는 것을 보여줍니다.\n\n영상 설명: Airbnb 텍스트가 arc 브라우저에서 폰트 크기를 설정하여 16px에서 32px까지 스케일링되는 것을 보여줍니다.\n\n독립적인 폰트 스케일링 개념은 iOS의 동적 타입 기능과 유사합니다. 저희 블로그 글 \"Airbnb의 동적 타입 지원\"에서 논의한 것처럼, 동적 타입을 이용하면 사용자가 선호하는 시스템 전체 텍스트 크기를 설정할 수 있고 이는 모든 호환되는 앱에 걸쳐 자동으로 폰트 크기를 조정합니다.\n\n<div class=\"content-ad\"></div>\n\niOS에서의 원래 접근 전략을 고려할 때, 웹 접근성 접근 방식에 글꼴 크기 확장(확대 축소 대신)을 통합하는 것은 플랫폼 간의 접근 방식 동등성을 도울 수 있는 당연한 다음 단계였습니다.\n\n# px, em vs rem 이해\n\n모바일 웹에서 글꼴 크기 조절이 왜 강력한지 이해했으므로, 글꼴 크기 조절을 지원하기 위해 CSS 길이 단위 중 하나를 선택하는 이유에 집중해야 합니다. 이 블로그 포스트에서는 px, em 및 rem에만 초점을 맞출 것이지만 다른 단위도 있습니다. CSS 길이 단위는 글꼴 크기 조정과 관련이 있으며, 이는 웹 페이지에서 텍스트 및 다른 요소의 크기를 결정합니다. 일부 길이 단위는 사용자의 글꼴 크기 설정에 따라 변경되지 않는 고정된 단위이며, 다른 것들은 상대적인 단위로, 글꼴 크기에 비례하여 크기가 조정됩니다.\n\n3가지 CSS 길이 단위에 대해 깊게 살펴보고 글꼴 크기 조정과 관련이 있는 방식을 살펴봅시다.\n\n<div class=\"content-ad\"></div>\n\n- px 단위는 웹에서 가장 흔히 사용되는 단위로, 이론적으로 화면에서 한 화소를 나타내야 합니다. 렌더링된 값이 변하지 않는 고정 단위입니다.\n- em 단위는 상대적인 단위로, 부모 요소의 글꼴 크기를 기준으로 합니다. ‘em’이란 이름은 주어진 글꼴에서 대문자 ‘M’의 너비에 따라 지어졌으며, 글꼴 크기에 대한 참조점으로 전통적으로 사용되었습니다. 1 em 단위는 현재 글꼴 크기의 높이에 해당하며, 기본 값으로 약 16px를 나타냅니다. em 단위는 비례적으로 크기가 조정되므로 부모의 글꼴 크기에 영향을 받을 수 있습니다.\n- rem 단위는 \"루트 em\"의 약자로, em 단위와 비슷하지만 글꼴 크기에 대한 계산에 루트 요소(HTML 요소)만 사용합니다. 따라서 rem 단위는 글꼴 크기 변경 기능을 제공하지만 부모 요소의 글꼴 크기에 영향을 받지 않습니다.\n\nem과 rem 단위 사이의 선택은 종종 글꼴 크기 조정에 필요한 제어 수준과 예측 가능성에 달려 있습니다. em 단위는 사용할 수 있지만 복잡한 레이아웃에서 관리하기 어려울 수 있는 연쇄적인 글꼴 크기 변경을 일으킬 수 있습니다. 이와 대조적으로 rem 단위는 루트 요소의 글꼴 크기에 상대적이기 때문에 더 일관된 예측 가능한 방식으로 글꼴 크기를 조정할 수 있습니다.\n\n이는 CodePen 예제에서 설명한 바와 같이, px, em, rem 단위의 서로 다른 글꼴 크기 조정 동작이 나타난 예시입니다. Airbnb 예시에서 언급된 것과 같이 글꼴 크기 조정이 중요한 요구사항일 때, rem 단위 사용은 일관되고 유지보수 가능한 글꼴 크기 조정 솔루션을 보장하기 위한 더 신뢰할 수 있는 선택일 수 있습니다.\n\npx와 같은 고정 단위를 사용할 수 있는 곳이라면 rem과 같은 상대적인 단위를 사용할 수 있습니다. 그러나 모든 속성에 rem 단위를 무분별하게 사용하는 것은 원치 않는 크기 조정 행동과 복잡성이 증가할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n에어비앤비의 경우, 팀은 모든 요소를 비례적으로 확장하는 대신 폰트 크기 조절을 위해 특히 rem 단위의 사용을 우선시하기로 결정했습니다. 이 목표 지향적인 방식은 레이아웃의 모든 측면을 확장하는 잠재적인 단점 없이 일관된 텍스트 크기 조절의 주요 이점을 제공했습니다.\n\n이 결정의 이유는 두 가지입니다:\n\n- rem 단위를 사용하여 모두를 확장했다면 브라우저 줌과 유사하게 되어 의도치 않은 레이아웃 문제를 도입할 수 있었을 것이며,\n- 주요 초점은 모바일 친화적인 글꼴 크기 조절 솔루션을 제공하는 데 있었습니다. rem 단위를 사용하여 글꼴 크기를 대상으로 함으로써 팀은 가장 중요한 콘텐츠인 텍스트가 적절하게 확장되도록 보장할 수 있었습니다.\n\n# 디자이너와 개발자를 위한 원활한 전환 가능성 활성화\n\n<div class=\"content-ad\"></div>\n\n픽셀 단위에서 rem 단위로의 변경은 CSS 작업 방식을 회사 전반에 걸쳐 중요하게 바꾸는 것이므로, 특히 여러 팀 간에 협업할 때는 상당한 도전이 될 수 있습니다. 디자이너 및 프론트엔드 개발자들에게 새로운 방식을 교육하고 기존의 픽셀 단위 값을 rem 단위로 변환하도록 요구하는 시간과 노력은 도입 장벽이 될 수 있습니다. 이에 대응하기 위해 에어비앤비 팀은 가능한 한 단위 변환 프로세스를 자동화하는 데 초점을 맞추기로 결정하여, 새로운 rem 기반 시스템으로의 원활한 전환을 도와주고자 합니다.\n\n# 디자인 작업에서 마찰 감소\n\n웹만을 위한 새로운 단위를 고려하거나 일일히 변환 작업을 요구하는 대신, 디자이너들이 px 단위로 CSS를 작성하도록 계속하여 진행하기로 결정했습니다. 이를 통해 팀이 rem 단위를 바로 적용할 수 있도록 필요한 교육 양을 줄일 수 있었습니다.\n\n디자인팀과 함께 주로 집중한 부분은 Text Resizer - 접근성 확인 도구를 활용하여 폰트 스케일링을 테스트하여 디자인이 폰트 크기의 2배로 설정되었을 때 어떻게 보일지 시뮬레이션하는 것이었습니다. 이 도구를 활용하면 디자인 프로세스 초기에 문제점을 더 빨리 발견할 수 있었습니다.\n\n<div class=\"content-ad\"></div>\n\n# 두 가지 CSS-in-JS 시스템의 복잡성 다루기\n\n에어비앤비는 React-with-Styles에서 Linaria를 사용한 새로운 접근 방식으로 전환이 진행 중입니다. Linaria의 도입이 빠르게 진행되고 있었지만, 일관된 경험을 위해 두 가지 스타일링 시스템을 모두 지원해야 한다는 필요성을 인지했습니다. 두 가지 다른 CSS-in-JS 시스템 간의 변환을 관리하는 것은 추가적인 도전이었습니다.\n\n## Linaria\n\nLinaria의 CSS 사용자 지정 속성 지원을 활용하여 팀은 기존 픽셀 기반 값들을 자동으로 그들의 rem 단위 상당값으로 변환하는 새로운 타이포그래피 테마 값을 생성할 수 있었습니다. 이 접근 방식을 통해 팀은 새로운 rem 기반 테마 값을 중앙에서 도입함으로써 자식 요소에서 이를 사용할 수 있게 했습니다. 이는 팀에게 전환 과정 중 필요한 유연성을 제공하기 위해 페이지별로 rem 값을 재정의하는 능력을 제공했습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nimport { typography } from './site-theme';\n\n// CSS Vars를 루프하여 사용하는 글꼴 크기에 대해 px를 rem 단위로 변환합니다.\nconst theme: css`\n ${getCssVariables({ typography: replacePxWithREMs(typography) })}\n // 다음과 같이 변환됩니다:\n // - body-font-size: 16px;\n // - body-font-size: 1rem; \n`;\n\n// 이 컴포넌트의 자식들에 대한 테마 변수를 무시하고 linaria가 생성한 클래스명을 사용합니다.\nconst RemThemeLocalProvider: React.FC = ({ children }) => {\n const cx = useCx();\n return <div className={linariaClassNames.theme)}>{children}</div>;\n};\n```\n\n대부분의 글꼴 크기 속성을 변환하는 이 접근 방식은 도움이 되었지만, 테마 밖에서 px 값을 사용하는 코드가 많았습니다. Linaria의 post-CSS 플러그인 지원으로 이러한 부분을 비교적 쉽게 해결할 수 있었습니다. postcss-pxtorem을 활용하여 이러한 값을 쉽게 대상으로 지정하는 데 도움을 받았습니다. 먼저 허용 목록을 사용하여 초기 채택 페이지에이 변경 사항을 신중하게 적용할 수 있도록 했습니다.\n\n프론트엔드 엔지니어가 px 단위를 사용해야 하는 경우를 위해 선택할 수 있는 방법을 제공하는 것이 중요했습니다. 다행히 아래에 표시된 것처럼 px 값을 다른 케이싱으로 사용하여 이러한 방법을 제공할 수 있었습니다.\n\n```js\n/* `px`가 `rem`으로 변환됩니다 */\n.convert {\n  font-size: 16px; /* 1rem으로 변환됨 */\n}\n/* `Px` 또는 `PX`는 `postcss-pxtorem`에서 무시됩니다\n   그러나 브라우저에서는 여전히 인식됩니다 */\n.ignore {\n  font-size: 200Px;\n  font-size: clamp(16Px, 2rem, 32Px);\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## 스타일과 함께 React\n\n우리의 프론트엔드 코드 중 상당 부분은 여전히 react-with-styles를 사용하고 있어서, 이러한 경우를 쉽게 변환하기 위한 다른 방법을 찾아야 했습니다. 이를 위해 우리는 변환이 꽤 간단하게 이루어지도록 하는 간단한 하이어오더 컴포넌트를 만들었습니다. 먼저 아래와 같이 withStyles 함수를 래핑하는 래퍼를 만들고, 변환을 피할 수 있는 능력도 부여했습니다.\n\n```js\nexport const withRemStyles = (\n  styleFn?: Nullable<(theme: Theme) => Styles>,\n  options?: WithStylesOptions & { disableConvertToRemUnits?: boolean },\n) => {\n  const disableConvertToRemUnits = getDisableConvertToRemUnits(options);\n   // 변환이 비활성화된 경우, 원래 withStyles 함수를 그대로 반환합니다 \n   if (disableConvertToRemUnits) {\n     return _withStyles(styleFn, options);\n    }\n   // 그렇지 않은 경우, 원래 스타일 함수를 새 함수로 감싸서 \n   // px를 rem으로 변환하는 방법을 적용합니다\n   return _withStyles((theme: Theme) => {\n     if (styleFn) {\n     const styles = styleFn(theme);\n     const remStyles = convertToRem(styles);\n     return remStyles;\n   }\n   return {};\n }, options);\n};\n```\n\n그런 다음, convertToRem은 키와 값 중에서 폰트 크기 속성 중 어떤 것이든 변환된 값을 매핑합니다. 이를 통해 변환 프로세스를 더 직관적으로 자동화할 수 있었습니다.\n\n<div class=\"content-ad\"></div>\n\n# 컴포넌트 테스팅을 위한 개선 사항\n\n이렇게 두 가지 도전을 극복하고 나면, 우리는 컴포넌트를 테스트하여 롤아웃 전에 해결해야 할 주요 문제가 있는 지 확인할 수 있습니다. 컴포넌트 문서와 도구에서는 내부 플러그인을 구축하여 html 요소의 글꼴 크기를 설정하여 폰트 스케일링을 테스트하기 쉽게 할 수 있습니다.\n\n스크린샷 테스트를 통해 우리 팀은 시각적 회귀를 발견했습니다. 루트 글꼴 크기를 조절하여 추가적인 스크린샷을 설정할 수 있도록 지원을 추가하면 제품 팀이 다른 글꼴 스케일에서 컴포넌트가 어떻게 보이는지를 검토할 수 있습니다. 이를 위해 스크린샷 캡처 시 추가 글꼴 크기를 설정할 수 있어 새로운 컴포넌트 변형을 만들지 않아도 됩니다.\n\n# 모바일 사파리에서의 글꼴 스케일링\n\n<div class=\"content-ad\"></div>\n\nSupporting font scaling for Mobile Safari was more difficult. Unlike other browsers, there is not a font size preference available in Mobile Safari. However, they have released support for their own font: -apple-system-body but there are some important considerations.\n\nSince macOS High Sierra (10.13), desktop Safari also supports the font preference, but there is not an easy “font size” configuration available in MacOS. Because there can be unexpected behavior on desktop Safari, we used a @supports statement to prevent this. The code below will only target Mobile Safari.\n\n```js\n// Apple's Dynamic Type requires this font family to be used\n// Only target iOS/iPadOS\n@supports (font: -apple-system-body) and (-webkit-touch-callout: default) {\n  :root {\n    font: -apple-system-body;\n  }\n}\n```\n\nAnother consideration is that the “100%” default font size selected does not equal the standard font size of 16px, but rather 17px. This is a very subtle difference, but it is critical for the design quality bar we aim to achieve at Airbnb. To resolve this issue, we ended up using an inline head script to normalize the value. By placing it early into the page execution, we avoided seeing a change in font size.\n\n<div class=\"content-ad\"></div>\n\n```js\n(() => {\n  // 만약 브라우저가 supports 문에 일치하지 않으면 아무 작업도 하지 마세요\n  if (!CSS.supports('(font: -apple-system-body) and (-webkit-touch-callout: default)')) return;\n  // 루트 요소 스타일이 아직 구문 분석되지 않았으므로 요소를 생성해야 함\n  const div = document.createElement('div');\n  div.setAttribute('style', 'font: -apple-system-body');\n  // body 요소는 아직 사용할 수 없으므로 루트 요소에 추가해야 함\n  documentElement.appendChild(div);\n  const style = getComputedStyle(div);\n  if (style.fontSize === '17px') {\n    documentElement.style.setProperty('font-size', '16px');\n  }\n  documentElement.removeChild(div);\n})();\n```\n\n페이지가 로드될 때 리사이즈 observer를 사용하여 값을 다시 변경하여 글꼴 크기 속성을 해제 또는 설정합니다. 이렇게 하면 확장 가능한 글꼴을 지원하면서 기본 글꼴 크기(100%)에 큰 영향을 미치지 않습니다.\n\n# 영향\n\n확장 가능한 글꼴을 지원하는 것은 호스트 및 시각 장애가 있는 손님들 및 큰 글꼴 크기와 브라우징 경험을 제어할 수 있는 사람들에게 혁명적인 차이를 만들어줄 투자입니다. 아래는 홈페이지가 블러된 시야를 가진 사람에게 기본 글꼴 크기(16px)가 어떻게 보이는지와 글꼴 크기를 두 배로 늘려(32px) 어떻게 보이는지 보여주는 두 가지 예시입니다. 두 번째 이미지가 훨씬 더 가독성이 높고 사용하기 편합니다.\n\n\n<div class=\"content-ad\"></div>\n\n폰트 크기 조정을 제품의 접근성 전략으로 선택한 것은 우리 플랫폼의 전반적인 사용자 경험을 현저히 향상시킨 여러 가지 이점을 가져왔습니다. 이 변경을 자동화하여 rem 단위로 변환하는 것으로 전환하는 일은 이러한 전환을 더 쉽게 만들어주었습니다. 이 변경 후 전체 사이트에서 우리의 전체 문제 수를 볼 때, 기존의 텍스트 크기 조정 문제 중 80% 이상이 해결되었습니다. 뿐만 아니라 이후 새로운 문제가 줄어들고 있습니다.\n\n결론적으로, 웹에서 텍스트 크기 조정을 향상시키기 위해 나아간 우리의 여정은 가치 있는 실용적인 교훈으로 가득 차 있었습니다. rem 단위를 전략적으로 적용하는 방법부터 도구 및 자동화의 역할까지, 각 교훈은 Airbnb의 사용자 경험을 향상시키는 데 중요한 한 걸음 위로 나아갈 수 있었습니다. 우리의 여정을 공유함으로써, 다른 사람들이 이 전환을 더욱 원활하게 이해하고 진행할 수 있기를 바랍니다. 우리의 작업은 계속되고 있으며, Airbnb의 접근성을 계속해서 발전시키는 데 헌신하고 있습니다. 만약 이러한 도전에 열정을 가지고 계시다면, Airbnb에서의 경력 기회를 살펴보시기를 권장합니다.\n\n감사의 말씀을 전합니다:\n\n- 조언과 기술 검토를 위해 Alan Pinto Souza, Dennis Wilkins, Jimmy Guo, Andrew Scheuermann에게\n- 초기 제품 파트너로서 Sterling DeMille, Riley Glusker, Ryan Booth에게\n- 접근 방식을 지원해준 Jordanna Kwok, Sarah Alley, JN Vollmer에게\n- 디자인 지원을 해준 Veronica Reyes, Jamie Cristal에게\n\n<div class=\"content-ad\"></div>\n\n모든 제품 이름, 로고 및 브랜드는 해당 소유자들의 소유물입니다. 이 웹사이트에서 사용된 모든 회사, 제품 및 서비스 이름은 식별 목적으로만 사용되었습니다. 이러한 이름, 로고 및 브랜드의 사용은 어떠한 보증을 시사하지 않습니다.","ogImage":{"url":"/assets/img/2024-05-17-RethinkingTextResizingonWeb_0.png"},"coverImage":"/assets/img/2024-05-17-RethinkingTextResizingonWeb_0.png","tag":["Tech"],"readingTime":12}],"page":"66","totalPageCount":151,"totalPageGroupCount":8,"lastPageGroup":20,"currentPageGroup":3},"__N_SSG":true}