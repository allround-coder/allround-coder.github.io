{"pageProps":{"posts":[{"title":"AWS 기반 클라우드 기반 생성형 AI 만드는 방법","description":"","date":"2024-05-17 04:21","slug":"2024-05-17-AWSBedrockCloud-basedGenerativeAI","content":"\n\n\n![AWS Bedrock](/assets/img/2024-05-17-AWSBedrockCloud-basedGenerativeAI_0.png)\n\nAmazon Bedrock은 클라우드에서 대형 언어 모델을 활용하는 견고한 솔루션입니다! 경험 많은 개발자, 데이터 과학자 또는 Generative AI의 시작부터 Amazon Bedrock은 끝까지 Generative AI 애플리케이션을 테스트하고 구현하는 이상적인 장소가 될 수 있습니다.\n이 튜토리얼을 통해 AWS Bedrock 설정 및 시작하는 프로세스를 간단하게 만드는 데 목표를 두었습니다. 이 튜토리얼에서는 Meta의 Llama-3-70B-Instruct 모델을 가져와 사용할 것입니다. 튜토리얼을 따라가기 전에 다음 사전 요구 사항을 충족해야 합니다:\n1. AWS 계정\n2. Visual Studio Code 또는 IDE\n3. Amazon Web Services의 기본 지식\n\n- IAM에서 새 사용자를 생성하고 \"AmazonBedrockFullAccess\" 정책을 연결합니다. 나중에 사용할 자격 증명이 AWS Bedrock 서비스에 액세스할 수 있도록 합니다. 자격 증명을 다운로드하고 안전하게 보관해야 합니다. 나중에 사용해야 합니다.\n\n2. AWS 콘솔에서 AWS Bedrock을 검색하고 지역을 신중하게 선택합니다. 현재 일부 대형 언어 모델은 특정 지역에서만 사용할 수 있습니다. 이 튜토리얼에서는 \"us-west-2\"를 선택하고 Meta의 \"Llama-3-70B-Instruct\" 모델에 액세스할 것입니다.\n\n\n<div class=\"content-ad\"></div>\n\n- 선택한 IDE(제 경우 VS Code)로 이동하여 CLI에서 IAM 자격 증명을 구성하세요. 이미 구성해 두었지만, 자격 증명을 요청받을 때 신중히 입력해주세요.\n\n2. 자격 증명을 설정한 후, Boto3를 사용하여 AWS Bedrock 서비스에서 모델을 호출하는 기본 코드를 작성하세요. 아래는 이 튜토리얼용 코드 스니펫이며, 필요에 따라 수정할 수 있습니다. 사용 사례에 맞게 모델 매개변수를 조정할 수도 있습니다.\n\n```js\nimport boto3\nimport json\n\nprompt_template=\"\"\"\nGenerative AI 엔지니어로 활동하여 Generative AI에 관한 멋진 사실 10가지를 말해주세요.\n\"\"\"\n\nbedrock=boto3.client(service_name=\"bedrock-runtime\", region_name=\"us-west-2\")\n\npayload={\n    \"prompt\":\"[INST]\" + prompt_template +\"[/INST]\",\n    \"max_gen_len\":2048,\n    \"temperature\":0.5,\n    \"top_p\":0.9\n}\n\nbody=json.dumps(payload)\nmodel_id = \"meta.llama3-70b-instruct-v1:0\"\nresponse = bedrock.invoke_model(\n    body=body,\n    modelId=model_id,\n    accept= \"application/json\",\n    contentType=\"application/json\"\n)\n\nresponse_body = json.loads(response.get(\"body\").read())\nresponse_text=response_body['generation']\nprint(response_text)\n```\n\n3. 코드를 실행하고 결과를 테스트하세요!\n예시 프롬프트: \"리오넬 메시가 시대 최고의 선수인 이유를 5가지 말해주세요. 답변을 100~150 단어로 요약해주세요.\"\n\n<div class=\"content-ad\"></div>\n\n![AWSBedrockCloud-basedGenerativeAI](/assets/img/2024-05-17-AWSBedrockCloud-basedGenerativeAI_1.png)\n\n클라우드 기반 생성적 AI를 시작하는 기본적인 튜토리얼입니다. 사용 사례는 무한합니다. 저도 복잡한 사용 사례와 그 가능한 해결책을 탐구하고 싶습니다. 궁금한 점이나 질문이 있으면 언제든 댓글에 남겨주세요!\n\n읽어 주셔서 감사합니다. 궁금한 점이 있거나 단순히 즐겁게 이야기 나누고 싶다면 망설임 없이 Linkedin에서 저에게 연락해주세요.","ogImage":{"url":"/assets/img/2024-05-17-AWSBedrockCloud-basedGenerativeAI_0.png"},"coverImage":"/assets/img/2024-05-17-AWSBedrockCloud-basedGenerativeAI_0.png","tag":["Tech"],"readingTime":3},{"title":"여러분의 RAG 어플리케이션 성능 향상을 위한 5가지 꿀팁","description":"","date":"2024-05-17 04:20","slug":"2024-05-17-5HacksToImproveYourRAGApplication","content":"\n\nRAG는 기업 및 비즈니스에서 Gen AI 기능을 사용자 지정 데이터와 통합하는 데 중요한 도구가 되었습니다.\n\n![image](/assets/img/2024-05-17-5HacksToImproveYourRAGApplication_0.png)\n\n다음은 RAG 애플리케이션을 개선하는 몇 가지 팁입니다.\n\n- 쿼리 보강\n- 문서 청킹\n- 결과 재랭킹\n- 임베딩 어댑터\n- 가상 문서 임베딩\n\n<div class=\"content-ad\"></div>\n\n쿼리 확장:\n\n관련 데이터를 검색하고 정확한 응답을 얻기 위해 프롬프트와 함께 보강하는 것이 중요합니다.\n\n단계:\n\n- 코사인 유사도나 유클리드 거리를 사용하여 벡터 임베딩 데이터베이스를 사용하여 사용자 쿼리를 기반으로 문서를 검색합니다.\n- 검색된 데이터/문서와 프롬프트를 결합합니다.\n- LLM(언어 모델)을 사용하여 하이브리드 데이터로부터 데이터를 생성합니다.\n\n<div class=\"content-ad\"></div>\n\n```python\nimport chromadb\nimport openai\n\ndef augmented_query_creator(user_query, retrieved_documents):\n    information = \"\\n\\n\".join(retrieved_documents)\n    prompt = (f'You are a movie critic.\\n'\n    f'Your users are asking questions about movie review.\\n'\n    f'You will be shown the user\\'s question, and the relevant information from the movie.\\n'\n    f'Answer the user\\'s question using only this information.\\n\\n'\n    f'Question: {query}. \\n Information: {information}')\n    return prompt\n\ndef generate_answer(prompt):\n    openai.api_key = \"YOUR_OPENAI_API_KEY\"  \n    response = openai.Completion.create(\n        engine=\"text-davinci-003\",  \n        prompt=prompt,\n        max_tokens=1024, \n        n=1,\n        stop=None,\n        temperature=0.7\n    )\n    return response.choices[0].text.strip()\n\nif __name__ == \"__main__\":\n    query = \"What is the review of the movie?\"\n    \n    # 1 Retrive relevant documents\n    results = chroma_collection.query(query_texts=[query], n_results=5)\n    retrieved_documents = results['documents'][0]\n    \n    # 2 Augmented query generation\n    augmented_query = augmented_query_creator(query,retrieved_documents)\n\n    # 3 Response for augmented query\n    result = generate_answer(augmented_query)\n```\n\n문서 청크 데이터 중복 :\n\n다양한 문서에 대한 벡터 데이터베이스를 구축할 때, 토큰 제한으로 인해 데이터 손실이 발생할 수 있습니다. 이 문제를 해결하기 위해 데이터를 작은 세그먼트로 분할하는 것이 해결책입니다.\n\n하지만 이러한 청크를 사용하더라도 한 문서와 다른 문서 사이의 의미와 연속성 손실이 발생할 수 있습니다. 이 문제를 완화하기 위해 데이터의 일관성과 흐름을 유지하기 위해 청크 사이에 중첩을 도입하는 것이 중요합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nfrom langchain.vectorstores import Chroma\nfrom langchain.embeddings import OpenAIEmbeddings  # 귀하의 선택한 임베딩 모델로 대체하십시오\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nfrom langchain.document_loaders import TextLoader\n\n# 문서 경로와 임베딩 모델 정의 (귀하의 것으로 대체하십시오)\ndocument_path = \"your_document.txt\"\nembedding_model = OpenAIEmbeddings\n\n# 청크 크기 및 선택적인 오버랩 설정\nchunk_size = 500\nchunk_overlap = 100\n\n# 문서를 로드하고 RecursiveCharacterTextSplitter로 분할합니다.\ntext_loader = TextLoader(document_path)\ndocuments = text_loader.load()\nsplitter = RecursiveCharacterTextSplitter(chunk_size=chunk_size, chunk_overlap=chunk_overlap)\ntexts = splitter.split_documents(documents)\n\n# 임베딩을 사용하여 ChromaDB 생성\npersist_directory = \"chroma_db\"\nchroma_collection = Chroma.from_documents(\n    documents=texts, embedding=embedding_model(), persist_directory=persist_directory\n)\n```\n\n재랭킹\n\n결과를 재랭킹하는 것은 검색된 문서를 검색기에 의해 검색된 후 특정 기준에 따라 다시 정렬하는 것을 의미합니다. 응답을 생성하기 전에 검색된 문서의 관련성을 더욱 정제하는 데 유용할 수 있습니다.\n\n우리는 문서의 관련성 순서를 변경하기 위해 코사인 유사성 대신 크로스 인코더 모델을 사용합니다.\n\n<div class=\"content-ad\"></div>\n\nStep 1: 크로스-인코더 모델을 로드합니다.\n\nStep 2: 관련성 점수를 변경하는 재랭크 함수입니다.\n\nStep 3: 문서를 정렬하고 반환합니다.\n\n```python\nfrom sentence_transformers import SentenceTransformer\n\n# ChromaDB와 크로스-인코더 모델을 로드합니다.\nchromadb = Chroma.load(\"chroma_db\")  \ncross_encoder = SentenceTransformer(\"all-mpnet-base-v2\")  \n\ndef re_rank_results(query, retrieved_chunks, k=3):\n  \n  scored_chunks = []\n  for chunk in retrieved_chunks:\n    score = cross_encoder.compute_similarity([query], [chunk])[0][0]\n    scored_chunks.append({\"chunk\": chunk, \"score\": score})\n\n  # 점수를 기준으로 (내림차순으로) 정렬하고 상위 k개 결과를 반환합니다.\n  sorted_chunks = sorted(scored_chunks, key=lambda x: x[\"score\"], reverse=True)\n  return sorted_chunks[:k]\n```\n\n<div class=\"content-ad\"></div>\n\n임베딩 어댑터:\n\n임베딩 어댑터는 초기 임베딩 프로세스와 검색 단계 간의 세세한 조정 단계로 작용하는 소규모 신경망 모듈입니다. 그 목적은 쿼리의 임베딩과 지식베이스에 저장된 문서 표현의 정렬을 개선하는 것입니다.\n\n단계 1: 임베딩 생성\n\n단계 2: 임베딩 어댑터로 섬세하게 조정하기\n\n<div class=\"content-ad\"></div>\n\n3단계: 개선된 검색\n\n```js\nfrom langchain.vectorstores import Chroma\nfrom langchain.text_embeddings import SentenceTransformerEmbeddings\nfrom langchain.text_encoders import IdentityEncoder  # 원본 텍스트 보존\nfrom langchain.document_loaders import TextLoader\n\n# 문서 경로 및 임베딩 모델 정의\ndocument_path = \"your_document.txt\"\nembedding_model = SentenceTransformerEmbeddings(\"all-mpnet-base-v2\")\n\n# 문서 로드\ntext_loader = TextLoader(document_path)\ndocuments = text_loader.load()\n\n# 텍스트 인코더를 사용하여 ChromaDB 생성 (선택 사항)\npersist_directory = \"chroma_db\"  \ntext_encoder = IdentityEncoder()  \n\nvectordb = Chroma.from_documents(\n    documents=documents,\n    embedding=embedding_model(),\n    text_encoder=text_encoder,\n    persist_directory=persist_directory\n)\n\n# 선택적 지속성\nvectordb.persist()\n\n# 텍스트 검색 예시\nquery = \"북극 해는 어디에 있나요?\"\n\n# 인코딩된 텍스트를 기반으로 검색 (임베딩 아님)\nresults = vectordb.search(query, k=5)  # 상위 5개 결과 가져오기\n\n# 검색된 문서 출력\nfor doc in results:\n    print(doc)\n\nprint(\"ChromaDB 검색 완료!\")\n```\n\n가상 문서 임베딩:\n\nHyDE는 대형 언어 모델(Large Language Models, LLMs)을 활용하여 문서로부터 정보 검색을 개선하는 기술입니다.\n\n<div class=\"content-ad\"></div>\n\nStep 1: Query 이해하기: 모든 것은 사용자 쿼리로 시작됩니다. HyDE는 이 쿼리를 입력으로 받습니다.\n\nStep 2: 가상 문서 생성: HyDE는 GPT-3과 같은 LLM을 사용하여 사용자 쿼리에 완벽한 답변이 될 것으로 믿는 가상 문서를 생성합니다. 이 문서에는 사실적인 정보 뿐만 아니라 창의적인 요소나 사용자 의도에 부합하는 설명이 포함될 수 있습니다.\n\nStep 3: 가설 인코딩: 가상 문서가 생성된 후, HyDE는 문서 자체를 사용하지 않습니다. 대신, 문서의 의미를 수학적 벡터 표현으로 인코딩합니다. 이 벡터는 가상 답변 내의 핵심 개념과 정보를 포착합니다.\n\nStep 4: 유사 문서 찾기: 이제 검색 과정이 시작됩니다. HyDE는 가상 문서를 나타내는 벡터를 사용하여 방대한 문서 컬렉션(보통 미리 인코딩된)을 검색합니다. 이것은 가상 문서의 벡터와 유사한 실제 문서를 탐색합니다. 유사성은 이 실제 문서들이 가상 답변과 유사한 방법으로 사용자 쿼리에 대응한다는 것을 나타냅니다.\n\n<div class=\"content-ad\"></div>\n\n5단계: 검색된 문서를 활용하기: HyDE 프로세스를 기반으로 가장 관련성 높은 것으로 간주된 이러한 검색된 문서는 이후 RAG 시스템에 공급됩니다. RAG 내의 LLM은 이 문서들을 사용하여 사용자의 초기 쿼리에 대한 더 포괄적이고 유익한 응답을 생성할 수 있습니다.\n\n참고 자료:\n\n- https://platform.openai.com/docs/assistants/overview\n- LinkedIn GitHub","ogImage":{"url":"/assets/img/2024-05-17-5HacksToImproveYourRAGApplication_0.png"},"coverImage":"/assets/img/2024-05-17-5HacksToImproveYourRAGApplication_0.png","tag":["Tech"],"readingTime":6},{"title":"AI 콘텍스트 Neurosymbolic RAG 내용 정리","description":"","date":"2024-05-17 04:17","slug":"2024-05-17-ContextualAINeurosymbolicRAGandthePowerofKnowledgeGraphs","content":"\n\n지식 그래프를 활용한 검색 기반 생성 (RAG)은 실세계 LLM 응용 프로그램에 대한 중요한 AI 스택입니다.\n\nRAG는 언어 모델이 생성 과정 중 외부 지식을 검색하고 통합할 수 있게 하는 기술로, 엄청난 잠재력을 가지고 있습니다. 그러나 이 잠재력을 완전히 발휘하기 위해서는 협동 필터링 기술을 적용하여 심볼적 사전 추론으로 증강 프로세스를 제한해야 합니다.\n\n이를 달성하는 가장 유연하고 확장 가능한 접근 방식은 지식 그래프를 활용하는 것입니다. 이는 현실 세계 개체 및 관계의 구조화된 표현으로, 어떤 도메인에서 세계 이해를 지배하는 지식, 제약 및 논리적 규칙의 풍부한 연결을 포착합니다.\n\n지식 그래프의 심볼적 지지체 안에 RAG를 고정시킴으로써, 순수히 신경적인 접근 방식에 오랫동안 부족했던 견고한 추론, 컨텍스트 인식 생성, 향상된 설명 및 해석 가능성을 AI 시스템에 주입할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n또한, 이 신경-기호론 RAG 패러다임은 선량한 데이터 플라이휠 효과를 제시합니다.\n\nAI 시스템이 물리적 증강을 위해 지식 그래프를 활용하는 동안 생성하는 통찰과 결과물은 다시 지식 그래프로 피드백되어 지식 그래프를 계속 풍부하게 하고 정제하는 구조화된 지식 베이스로 이어질 수 있습니다.\n\n이 반복적인 과정은 연속적인 학습과 개선을 촉진할 뿐만 아니라, 최종 추론 접근법에서 큰 언어 모델(LLMs)을 정교조정하기 위한 길을 열어 그들의 맥락에 민감한 능력을 더욱 향상시킵니다.\n\n또한, LLMs가 생성 프로세스 중에 다양한 관련 예시를 제공받는 많은 예시 내 문맥 학습의 파워를 활용함으로써, 우리는 신경-기호론 RAG의 이점을 확대시키고 AI 시스템이 풍부한 맥락화 된 지식과 추론 패턴으로부터 학습하도록 할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# I. 순수한 신경망 접근 방식의 제한\n\n신경망은 다양한 작업에서 놀라운 성공을 거두었지만, 종종 인간 수준의 지능에 필요한 견고한 추론 능력과 기본적인 지식이 부족합니다. 순수한 신경망 접근 방식의 주요 제한 사항 중 일부는 다음과 같습니다:\n\n## A. 견고한 추론 및 기본적인 지식의 부족:\n\n특히 대형 언어 모델(LLM)은 데이터의 통계적 패턴을 캡처하는 데 뛰어나지만, 사람들이 가진 합성성, 인과관계, 시간성 및 상식 추론을 통합하는 데 어려움을 겪습니다. 이는 복잡한 시나리오에서 일관성이 없거나 비논리적인 결과물로 이어질 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## B. 규범화, 시간 이해 및 상식 추론에서의 과제:\n\n신경망은 익숙한 개념을 새로운 방식으로 결합해야 하는 합성적 규범화에 어려움을 겪기도 합니다. 또한 동역학을 해체하고 상급적 시뮬레이션을 실행하는 것도 어렵습니다. 이는 시간 이해와 상식적 추론에 중요합니다.\n\n## C. 구조화된 지식 통합의 필요성:\n\n기업이 심층적인 AI 발전을 추구하는 가운데, 인간의 지식을 구조화된 지타구로 인코딩하는 것이 필수적입니다. 비구조화된 데이터에서의 순수한 통계적 학습은 현실 세계를 조절하는 풍부한 관계, 제약 및 규칙을 포착하지 못합니다.\n\n<div class=\"content-ad\"></div>\n\n이러한 한계를 해결하기 위해 연구자들은 신경 기호 접근법을 채택해왔습니다. 이 방법은 신경망의 유연성과 학습 능력을 기호적 시스템의 구조화된 지식과 추론 능력과 결합합니다.\n\n## II. 지식 그래프: 세계의 구조화된 표현\n\n지식 그래프는 현실 세계의 사실과 관계를 구조화된 기계 가독성 형식으로 표현하는 강력한 방법입니다. 비구조화된 데이터 소스와 달리, 지식 그래프는 정보를 연결된 개체 및 관계의 네트워크로 구성하여 인간의 이해를 기반으로 하는 복잡한 의미론과 논리를 포착합니다.\n\n### A. 지식 그래프의 정의:\n\n<div class=\"content-ad\"></div>\n\n지식 그래프는 지식의 그래프 기반 표현으로, 노드는 엔티티(예: 사람, 장소, 개념)를 나타내고 엣지는 이러한 엔티티 간의 관계(예: 출생지, 근무처, 친구)를 나타냅니다.\n\n## B. 지식 그래프의 비구조화된 데이터에 대한 장점:\n\n지식 그래프는 텍스트 말뭉치와 같은 비구조화된 데이터 소스보다 몇 가지 장점을 제공합니다:\n\n- 관계 및 제약 조건의 명시적 표현\n- 다양한 소스에서 지식 통합\n- 논리적 추론과 추론 용이성 제공\n- 지식의 쿼리 및 탐색 용이성을 제공\n\n<div class=\"content-ad\"></div>\n\n## C. 다양한 도메인에서의 지식 그래프의 다양한 응용:\n\n지식 그래프는 다음과 같은 다양한 도메인에서 응용되어 왔습니다:\n\n- 생명 과학 및 생물 의학 (예: 약물-타겟 상호작용, 질병 온톨로지 표현)\n- 기업 지식 관리 (예: 조직 구조, 업무 흐름, 정책 수립 캡처)\n- 학술 및 과학 연구 (예: 게재물, 저자, 학회, 연구 주제 연결)\n- 추천 시스템 및 맞춤형 어시스턴스 (예: 사용자 선호도, 제품 카탈로그, 콘텐츠 메타데이터 표현)\n\n지식 그래프의 구조화된 특성을 활용함으로써, AI 시스템은 다양한 지식의 풍부한 직물에 접근하여 보다 견고한 추론 및 세간적인 이해를 가능케 합니다.\n\n<div class=\"content-ad\"></div>\n\n# III. 검색 보강 생성 (RAG): 언어 모델 강화\n\n검색 보강 생성 (RAG)은 대형 언어 모델 (LLM)의 능력을 향상시키는 데 중요한 방법으로 등장한 기술입니다. RAG 시스템은 LLM의 생성 능력과 생성 과정 중 외부 소스에서 관련 정보를 검색하고 통합하는 능력을 결합합니다.\n\n## A. RAG 및 해당 변형에 대한 개요:\n\nRAG 시스템은 다양한 방법을 통해 LLM을 보강할 수 있습니다. 이 방법에는 이와 같은 것들이 포함됩니다:\n\n<div class=\"content-ad\"></div>\n\n- 쿼리 기반: 검색된 콘텐츠가 LLM 프롬프트로 직접 공급됩니다.\n- 잠재: LLM이 검색된 개체의 잠재 임베딩과 상호 작용합니다.\n- 로짓: 검색 출력물이 생성 로짓으로 결합됩니다.\n- 추론적: 일부 생성 계산이 검색 출력물로 대체됩니다.\n\n## B. 비구조화 데이터 소스를 사용하는 RAG의 한계:\n\n대부분의 기존 RAG 시스템은 검색 소스로 비구조화된 텍스트 말뭉치를 사용합니다. 이는 유용한 문맥 정보를 제공할 수 있지만, 견고한 추론과 이해에 필요한 풍부하고 구조화된 지식이 부족한 경우가 많습니다.\n\n## C. 지식 그래프 증강 RAG (논리 RAG)의 잠재력:\n\n<div class=\"content-ad\"></div>\n\n외부 지식 원천으로 지식 그래프를 통합함으로써, RAG 시스템은 실세계 엔티티, 관계 및 제약 조건의 구조화된 표현을 활용할 수 있습니다. 이 접근 방식은 종종 \"논리 RAG\"라고 불리며, 복잡한 추론 및 컨텍스트 인식 생성을 용이하게 하는 더 고급 검색 패러다임을 가능하게 합니다.\n\n# IV. 신호신경 기호 RAG: 신경적 유연성과 심볼 지식의 결합\n\n신호신경 AI는 신경망과 심볼적 추론 시스템의 강점을 결합하려는 신흥 분야입니다.\n\nRAG의 맥락에서 신호신경적 접근법은 신경망의 유연성과 학습 능력을 구조화된 지식 및 논리 추론 능력과 통합하는 것을 목표로 합니다. 종종 지식 그래프 형태로 이루어집니다.\n\n<div class=\"content-ad\"></div>\n\n## A. 뉴로 심볼릭 접근:\n\n신경망과 상징적 추론을 통합: 뉴로심볼릭 AI는 상징적 추론과 신경망을 결합하는 다양한 방법을 탐구하여, 서로 보완적인 강점을 활용합니다.\n\nRAG의 경우, 이는 신경망을 사용하여 언어 생성 및 지식 검색을 수행하고, 지식 그래프 상에서 상징적 추론을 활용하여 구조화되고 맥락을 갖춘 지식을 제공하는 것을 의미합니다.\n\n## B. 지식 그래프와 논리 검색 패러다임:\n\n<div class=\"content-ad\"></div>\n\n논리적인 지식 그래프를 통한 검색에 대해 여러 패러다임이 제안되었습니다. 문맥을 고려하고 추론을 기반으로 한 지식 검색을 가능케 합니다:\n\n- 그래프 알고리즘: 구조적 쿼리와 제약 조건을 일치시키기 위해 원시 지식 그래프 알고리즘을 직접 활용합니다(예: 약물과 상호 작용하는 개체를 찾아 약물 조합을 권장하는 경우).\n- Entity embeddings: 관계와 제약 조건을 포함하는 개체 표현을 학습함으로써(예: 상호작용, 대상 및 효과에 따라 약물을 임베딩), 임베딩 공간 일치를 통한 검색을 가능하게 합니다.\n\n![image](/assets/img/2024-05-17-ContextualAINeurosymbolicRAGandthePowerofKnowledgeGraphs_0.png)\n\n3. Hybrid methods: 학습된 표현을 사용하여 상징적 알고리즘을 결합합니다(예: 중요한 제약 조건에 따라 검색된 개체를 필터링하는 경우).\n\n<div class=\"content-ad\"></div>\n\n## C. Contextual and grounded AI benefits of neurosymbolic RAG:\n\nThrough the integration of knowledge graphs into the RAG process, neurosymbolic approaches offer numerous advantages:\n\n1. **Robust reasoning and grounded understanding:** Knowledge graphs offer a structured foundation for capturing real-world limitations, rules, and connections. This capability enhances robust and grounded reasoning.\n\n2. **Context-aware generation:** By retrieving relevant entities and relationships from knowledge graphs, rich contextual information is provided for language generation tasks. This results in more coherent and meaningful outputs.\n\n<div class=\"content-ad\"></div>\n\n가독성 및 해석력: 지식 그래프의 상징적 특성과 관계의 명시적 표현은 신호기호 RAG 시스템의 해석력과 가독성을 향상시킬 수 있습니다.\n\n도메인 전문지식을 활용: 도메인별 지식 그래프는 전문지식을 활용하고 확립된 온톨로지를 통합하여 RAG 시스템에 통합할 수 있게 해줍니다.\n\n연구자와 개발자는 신경망의 강점과 상징적 추론을 결합하여 더욱 유연하고 맥락에 민감하며 기반을 둔 생성이 가능한 AI 시스템을 만들 수 있습니다, 이는 네이로신호 기호 RAG를 통해 더욱 인간과 유사한 지능을 달성할 수 있는 발판을 마련합니다.\n\n![ContextualAINeurosymbolicRAGandthePowerofKnowledgeGraphs_1.png](/assets/img/2024-05-17-ContextualAINeurosymbolicRAGandthePowerofKnowledgeGraphs_1.png)\n\n<div class=\"content-ad\"></div>\n\n# V. 지식 그래프 내에서 협력 필터링을 결합한 예시와 문맥 학습에서의 검색\n\n신경 기호론 RAG의 유망한 응용 사례 중 하나는 지능적인 협력 필터링을 위해 지식 그래프를 활용하는 것이며, 이는 채용 및 인재 매칭을 위한 후보자-요구 사항 점수화의 한 예입니다.\n\n## A. 후보자-요구 사항 점수화에 협력 필터링 적용하기:\n\n추천 시스템에서의 협력 필터링 기술은 후보자를 직무 요구 사항에 대해 점수화하는 데 적용될 수 있으며, 후보자와 요구 사항의 유사성을 고려합니다. 이 접근 방식은 후보자 정보, 공석 정보, 기술, 요구 사항 및 점수를 지식 그래프 내에 저장하는 것을 포함합니다.\n\n<div class=\"content-ad\"></div>\n\n## B. 지식 그래프를 활용한 지능적인 유사성 계산:\n\n이 방법의 핵심은 후보자와 요구 사항 간의 유사성을 지능적으로 계산하는 것으로, 지식 그래프 내의 구조화된 지식을 활용합니다:\n\n- 기술 온톨로지 및 계층 구조: 기술 계층 구조와 근접성을 기반으로 유사성을 계산하기 위한 기술 온톨로지를 개발하며, 기술의 중요성과 맥락을 고려하여 직무 요구 사항에 대한 계산을 고려합니다.\n- 맥락적 일치와 개인화: 기술이 언급된 맥락을 고려하고, 고객이 고유한 요구에 기반해 후보자 속성에 대한 개인화된 가중치와 선호도를 설정할 수 있도록 합니다.\n- 경험, 교육, 그리고 도메인 전문 지식 활용: 후보자의 경험 수준, 고위권, 교육, 자격증, 산업, 그리고 도메인 전문 지식을 유사성 계산에 통합하여 보다 포괄적인 평가를 제공합니다.\n\n## C. 사용자 피드백을 통한 지속적인 개선과 설명력:\n\n<div class=\"content-ad\"></div>\n\n시스템은 사용자 피드백을 기반으로 유사성 계산을 지속적으로 개선하는 피드백 루프를 구현할 수 있습니다.\n\n또한, 유사한 후보-요구사항 쌍을 활용한 집중된 대조 분석은 후보자의 점수에 영향을 미친 주요 요소를 강조함으로써 설명 가능성을 제공할 수 있습니다.\n\n협력 필터링 기술과 지식 그래프 기반의 유사성 계산을 결합하여, 이 접근법은 체계적인 지식 표현과 추론의 힘을 활용하여 보다 정보화되고 문맥에 맞게 해석 가능한 후보-요구사항 점수를 제공하고자 합니다.\n\n# VI. 응용 및 현실 세계 사용 사례\n\n<div class=\"content-ad\"></div>\n\nNeurosymbolic RAG with Knowledge Graphs has the potential to unlock a wide range of applications and real-world use cases, spanning various domains and industries. Here are some examples:\n\n## A. 질문 응답 및 자연어 이해:\n\n지식 그래프를 RAG 시스템에 통합함으로써 이러한 시스템은 자연어 질문에 더 정확하고 맥락적인 응답을 제공할 수 있습니다. 이는 고객 서비스, 가상 어시스턴트 및 교육 애플리케이션과 같은 도메인에서 특히 유용할 수 있습니다.\n\n## B. 추천 시스템 및 개인화 어시스턴트:\n\n<div class=\"content-ad\"></div>\n\n지식 그래프를 증강한 RAG는 권장 시스템과 개인화된 어시스턴트를 개선하여 사용자 선호도, 제품 속성 및 맥락 제약의 더 섬세한 이해를 가능케 합니다. 이는 더 관련성 높고 맞춤형 권장 사항을 제공하여 사용자 만족도와 참여도를 향상시킬 수 있습니다.\n\n### C. 생명과학 및 과학 연구:\n\n생명과학 및 과학 지식 그래프는 RAG 시스템에 통합되어 연구자들이 문헌 탐색, 가설 생성 및 약물 발견과 같은 다양한 작업을 지원할 수 있습니다. 생물학적 프로세스, 분자 상호작용 및 과학 문헌의 구조화된 지식을 활용함으로써, 이러한 시스템은 더 통찰력 있고 실질적인 권장 사항과 분석을 제공할 수 있습니다.\n\n### D. 기업 의사결정 지원 및 업무 자동화:\n\n<div class=\"content-ad\"></div>\n\n지식 그래프는 기업 내의 조직 구조, 정책, 워크플로 및 도메인 특정 지식을 포착할 수 있습니다. 이러한 지식 그래프를 RAG 시스템에 통합하면 더 지능적인 의사 결정 지원, 자동 추론 및 워크플로 최적화를 가능하게 하여 효율성을 증가시키고 더 나은 결정을 내릴 수 있게 도와줄 수 있습니다.\n\n# VII. 과제 및 미래 방향\n\n뇌 심볼릭 RAG와 지식 그래프를 결합하는 것은 상당한 잠재력을 지니고 있지만, 더 탐구해야 할 여러 가지 도전과 미래 방향이 있습니다:\n\n## A. 지식 그래프 구축 및 유지 관리:\n\n<div class=\"content-ad\"></div>\n\n높은 품질의 지식 그래프를 구축하고 유지하는 것은 복잡하고 자원 소모적인 작업입니다. 종종 상당한 도메인 전문 지식과 수동으로 관리하는 작업이 필요합니다. 자동화된 지식 그래프 구축 및 정제 기술은 이러한 시스템의 널리 통용되는 채택을 위해 중요할 것입니다.\n\n## B. 확장성과 계산 복잡성:\n\n대규모 지식 그래프를 통합하고 이를 토대로 논리적 추론을 수행하는 것은 계산적으로 비용이 많이 들 수 있습니다. 특히 실시간 응용프로그램에서 그렇습니다. 효율적인 알고리즘 개발과 하드웨어 가속기를 활용하는 것이 중요할 것입니다. 이것이 신경 기호 주의적 RAG 시스템의 확장성을 보장하기 위해 필요합니다.\n\n## C. 신경 기호 주의 모델의 해석 가능성과 투명성:\n\n<div class=\"content-ad\"></div>\n\n심볼릭 구성 요소가 뇌 심볼릭 RAG 시스템의 해석 가능성을 향상시킬 수 있지만, 신경 구성 요소는 여전히 불투명성과 투명성의 부족을 도입할 수 있습니다. 이러한 혼합 모델이 내린 결정을 해석하고 설명하는 기술은 신뢰를 구축하고 인간-인공지능 협업을 원활하게 하는 데 중요할 것입니다.\n\n## D. 다중 모달 데이터 및 상식적 추론 통합:\n\n지식 그래프는 구조화된 지식을 포착할 수 있지만, 다중 모달 데이터(예: 이미지, 비디오, 오디오) 및 상식적 추론 능력이 뇌 심볼릭 RAG 시스템에 통합되는 것은 여전히 도전입니다. 다중 모달 지식 표현 및 추론의 발전은 정말로 지능적이고 맥락에 민감한 인공지능 시스템을 만드는 데 중요할 것입니다.\n\n이러한 도전에도 불구하고, 뇌 심볼릭 RAG 및 지식 그래프 통합 분야는 맥락적이고 뿌리있는 AI의 미래를 형성하는 데 엄청난 잠재력을 가지고 있습니다. 이 분야에서 계속되는 연구, 협업 및 혁신은 인공지능의 전체 잠재력을 발휘하고, 인간과 유사한 지능으로 세계를 인지하고 조작할 수 있는 시스템을 가능하게 하는 데 중요할 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\n지능적이고 맥락에 따라 인공 지능 시스템을 탐색하는 과정에서 신경 기호론적 접근, 추출 증강 생성 (RAG), 그리고 지식 그래프 통합이 미래의 유망한 방향으로 떠오르고 있습니다. 신경망의 유연성과 학습 능력을 기호적 시스템의 구조화된 지식과 추론 능력과 결합함으로써 신경 기호론적 RAG는 세계를 더욱 흔들리지 않고 인간과 비슷한 방식으로 이해하고 추론할 수 있는 AI 시스템을 구축하기 위한 강력한 프레임워크를 제공합니다.\n\n지식 그래프는 현실 세계 개체와 관계의 구조화된 표현을 제공하여 RAG 시스템에 의해 공유될 수 있는 풍부한 지식 천연물을 제공합니다. 그래프 알고리즘, 엔티티 임베딩, 그리고 혼합 방법과 같은 논리적 검색 패러다임을 통해 신경 기호론적 RAG는 견고한 추론, 맥락에 의한 생성, 그리고 향상된 설명과 해석 가능성을 활성화할 수 있습니다.\n\n지식 그래프와 함께하는 신경 기호론적 RAG의 응용은 질의 응답, 추천 시스템, 생명과학 연구, 그리고 기업 의사 결정 지원을 포함한 다양한 분야에 걸쳐 있습니다. 구조화된 지식과 논리적 추론을 활용함으로써 이러한 시스템은 더 정확하고 맥락적이며 통찰력 있는 결과물을 제공하여 실제로 지적이고 터무니없는 AI 솔루션으로 향하게 됩니다.\n\n<div class=\"content-ad\"></div>\n\n그러나 신경 기호 RAG의 완전한 잠재력을 실현하려면 지식 그래프 구축 및 유지, 확장성 및 계산 복잡성, 해석 가능성 및 투명성, 다중 모달 데이터 및 상식 추론과 같은 도전을 극복해야 합니다. 이러한 영역에서 계속된 연구, 협업 및 혁신이 문맥적이고 기초가 있는 AI의 미래를 결정하는 데 중요할 것입니다.","ogImage":{"url":"/assets/img/2024-05-17-ContextualAINeurosymbolicRAGandthePowerofKnowledgeGraphs_0.png"},"coverImage":"/assets/img/2024-05-17-ContextualAINeurosymbolicRAGandthePowerofKnowledgeGraphs_0.png","tag":["Tech"],"readingTime":10},{"title":"글로벌 자동화론","description":"","date":"2024-05-17 04:15","slug":"2024-05-17-TheGlobalAutomatonFallacy","content":"\n\n## 기술 세계가 어리석어지고 있는가요?\n\n![이미지](/assets/img/2024-05-17-TheGlobalAutomatonFallacy_0.png)\n\n자동화는 인간 제어 없이 작동하는 작업이나 프로세스입니다.\n\n자동화는 자동기구, 프로세스 또는 기계/로봇을 가리킵니다.\n\n<div class=\"content-ad\"></div>\n\n글로벌 자동화 기계란 i) 사람이 할 수 있는 일을 할 수 있는 로봇이고, ii) 다른 로봇을 제어하는 프로세스를 만들 수 있으며, iii) 다른 로봇을 만들 수 있는 로봇을 가리킵니다.\n\n글로벌 자동화 기계론은 창조자에게 긍정적인 경제적 결과를 가져다줄 수 있는 글로벌 자동화 기계가 조만간 존재할 것이라는 신념입니다.\n\n# 수요는 무엇인가요?\n\n건축 학생에게 전문 지도를 제공할 수 있는 글로벌 자동화 기계가 존재한다고 가정해봅시다. 더불어, 건물 크기, 선호도, 위치 등에 대한 일부 입력을 사용하여 건축가, 디자이너 또는 취미로 건축도면을 작성할 수 있습니다. 또한 건축 자재를 재료로 사용하여 작업을 완료하는 데 측정된 건설 자재만 필요한 대형 3D 프린터에 연결할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n이 자동화 도구를 만든 사람은 다음과 같이 스스로에게 물어봐야합니다: 그가 하는 일은 무엇일까요? 건축에 관한 모든 것을 '알아서' 가르치는 것인가요? 그림을 그리는 것인가요? 아니면 건축을 하는 것인가요?\n\n첫 번째 문제(수요의 문제)는 건축의 '전체 자동화 도구'를 만들려고 한다는 것은 각각의 '작업'이 잠재적인 고객들이 신뢰하기 전에 많은 '훈련', '시험', '평가' 및 '증명'이 필요한 만큼 복잡하다는 것입니다.\n\n두 번째 문제(수요의 문제)는 가격 책정이 반드시 복잡해져야 한다는 점입니다. 왜냐하면 '만능 인재' 자동화 도구는 단일 작업의 전문가가 아니라 시장 가격과 비교할 수 있는 작업 하나만에 뛰어난 전문가가 아니기 때문입니다.\n\n세 번째 문제(수요의 문제)는 창조자가 잠재적 투자자와 고객 양측에게 '전체 자동화 도구'의 가치나 유틸리티를 마케팅하거나 합리화해야 한다는 어려운 과제를 직면하게 될 것입니다. 투자자들에게 창조자가 해결해야 할 필요성이나 문제를 어떻게 정당화할 것인가요? 고객들에게는 창조자가 제품/서비스의 혜택이나 인간 대체품 사용에 따른 전환 비용을 어떻게 정당화할 것인가요?\n\n<div class=\"content-ad\"></div>\n\n# 공급은 무엇인가요?\n\n어떤 '글로벌 자동화' 가능한 창조자가 직면해야 할 현실은 동기부여, 비용, 의도, 합리화 및 기회 비용입니다.\n\n첫 번째 문제(공급의 문제)는 동기부여의 문제입니다. 동기부여는 전염병과 매우 유사합니다. 그것의 부재나 보유는 회사 전체에 빠르게 퍼질 수 있습니다. 특히 충분한 자금이 없어 사람들에게 직장이나 직업을 교체하도록 \"동기부여\"할 여력이 없는 스타트업에게는 그렇습니다. 그러나 '건축 학생들을 위한 최고의 과왕 자동화', 건축가들을 위한 '최고의 디자이너 자동화' 또는 건축가들을 위한 '최고의 건설 자동화'를 구축하는 목표가 명확하지 않으면, 동기부여를 얻기가 어려울 것입니다. 드물게 그런 동기부여를 찾았다 하더라도, 손에 쥔 과제는 평균 이상이어야 하며, 세 가지 매우 복잡한 작업에서 (실제 필요나 원하는 것을 충족시키지 않을 수도 있는) 더 좋은 것을 만드는 작업에 관여하게 될 것입니다.\n\n두 번째 문제(공급의 문제)는 비용 문제입니다. 양산 비용은 지역 자동화에 초점을 맞추거나 인간 대체품을 고용하는 것과 대조적으로 매우 방해가 될 가능성이 높습니다.\n\n<div class=\"content-ad\"></div>\n\n공급의 세 번째 문제는 의도나 비전입니다. 만약 창업 창조자가 더 빠르고 저렴하며 더 나은 그리고 우아한 사무실 건물에 대해 실제로 중요하게 생각하는 것이라고 깨달았다면 어떨까요? 그런 경우에는 첫 번째 두 로컬 자동화 장치가 무의미할 뿐만 아니라 동일한 목표를 달성하기 위해 자동화 장치를 만들지 않고도 가능성이 있습니다.\n\n공급의 네 번째 문제는 (내부) 합리화입니다. 후자가 인간 대체품보다 실제로 빠르고 저렴하며 더 나은지 아니면 우아한지 의문을 제기해볼 수 있습니다. (건축) 교육, 설계 및 건설 과제를 수행하는 대신에 (가능한) 프랑켄슈타인을 '창조'하는 시간을 왜 소비해야 할까요? 이 시간, 돈 및 재능을 효과적으로 사용하는 것인가요?\n\n다른 관련된 합리화 문제는 전문성 또는 (내가 싫어하는 단어인) 특수화입니다. 사람이 자동화 장치를 만드는 전문가일까요, 아니면 건축 및 건설에 관련된 모든 것에 대해 전문가일까요? '잘 했어요' 작업을 어떻게 평가하고, 그것이 '평균 이상'일지 여부를 누가 평가할까요? 이들은 모두 집중과 최적화를 요구하는 복잡하고 가치 있는 요소이므로 지속적인 기간 동안 집중과 최적화가 필요합니다. 또한 제품을 개선하거나 고객에게 유혹적인 혜택을 제공하여 고객이 전환하거나 행동을 변경하도록 유도하려면 두 가지 몬스터 작업을 동시에 수행하는 것이 경제적(또는 심리적)으로 최적일까요?\n\n공급의 다섯 번째 문제는 기회 비용입니다. (건축) 자동화장치와 더 빠르고 저렴하며 더 나은 그리고 우아한 건물/건축을 위한 시장이 있다고 가정했을 때, 더 크고 비용 효율적인 시장을 평가해볼 수 없을까요? 두 가지 옵션 간의 시장 진입 시간은 어떻게 되는가요? 자동화 장치를 만든 후 몇 년이 지나면 시장 요인, 취향, 법률 및 경쟁사가 어떻게 변하는가요? 이러한 자동화 장치가 예기치 않은 블랙 스완 사건에 대한 사용자 정의 또는 안티프래질윤을 갖추고 있는가요? 한편, 자동화장치를 구축하는 데 들어가는 비용과 복잡성은 예상된 이점을 가져다줄 정당한 노력을 정당화하기에도 충분하지 않을 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n모든 그 자원들, 모든 그 시간들, 모든 그 돈들, 그리고 모든 그 재능들은 더 유익하고 더 효과적이며 더 혁신적이며 더 유익하며 더 흥미로운 일들에 사용될 수 있었을 텐데요.\n\n![이미지](/assets/img/2024-05-17-TheGlobalAutomatonFallacy_1.png)","ogImage":{"url":"/assets/img/2024-05-17-TheGlobalAutomatonFallacy_0.png"},"coverImage":"/assets/img/2024-05-17-TheGlobalAutomatonFallacy_0.png","tag":["Tech"],"readingTime":4},{"title":"홈 랩 DNS 업데이트 테크니티움, 파이홀","description":"","date":"2024-05-17 04:14","slug":"2024-05-17-HomeLabDNSUpdateTechnitiumPi-Hole","content":"\n\n이번 아침에는 Pi Hole DNS 서버를 다른 Technitium 설치로 대체하기로 결정했어요. 그래서 이제 HA를 위해 두 개의 Technitium DNS 서버를 사용하고 있어요.\n\n우분투 23.10 서버 이미지를 설치한 후, Technitium의 웹사이트에서 이 편리한 한 줄 명령어를 제공하네요:\n\n```js\ncurl -sSL https://download.technitium.com/dns/install.sh | sudo bash\n```\n\n<div class=\"content-ad\"></div>\n\n거기서 고정 IP, 관리자 비밀번호를 설정하고 원래의 Technitium DNS 서버에서 설정을 가져왔습니다. 최근 블로그 게시물에서 이에 대한 내용을 다뤘어요.\n\nTechnitium 웹 인터페이스로 돌아와서 설정 페이지의 가져오기/내보내기 기능을 사용하여 주 서버의 설정을 백업하고 보조 서버에 복원했어요:\n\n![image](/assets/img/2024-05-17-HomeLabDNSUpdateTechnitiumPi-Hole_1.png)\n\n백업 인터페이스를 통해 캡처할 항목을 선택할 수 있어요:\n\n<div class=\"content-ad\"></div>\n\n마찬가지로 복원 페이지에서 가져오길 원하는 것을 묻습니다:\n\n![capture](/assets/img/2024-05-17-HomeLabDNSUpdateTechnitiumPi-Hole_3.png)\n\n그 후에 정적 IP를 적용하고 모든 것이 예상대로 작동하는지 확인하기 위해 다시 부팅했습니다. 이제 두 개의 다른 라즈베리 파이 장치에서 두 개의 Technitium DNS 서버가 실행 중입니다.\n\n<div class=\"content-ad\"></div>\n\n내 원래 계획은 라즈베리 파이 서버에 어떤 종류의 microk8s 설치를 사용하고 Kubernetes가 컨테이너를 실행하도록 하는 것이었습니다. 그러나 외부에서 k8s가 포트 53에서 듣도록 하는 데 어려움이 있었기 때문에, 일단 그 계획을 포기하기로 결정했습니다. 다시 시도하지 않을 것 같고, 대신 내장형 (잘, 쉽게 설치 가능한) core-dns 기능을 사용할 것입니다. 그 목적으로는 K8s가 과도한 것이었을 것입니다.\n\n업데이트된 홈 랩 인벤토리 다이어그램이 도착했습니다. 곧 발행될 예정이니 기대해주세요!","ogImage":{"url":"/assets/img/2024-05-17-HomeLabDNSUpdateTechnitiumPi-Hole_0.png"},"coverImage":"/assets/img/2024-05-17-HomeLabDNSUpdateTechnitiumPi-Hole_0.png","tag":["Tech"],"readingTime":2},{"title":"손으로 만든 꿈 일기장으로 나를 더 강하게 만드는 방법","description":"","date":"2024-05-17 04:12","slug":"2024-05-17-HowtoEmpowerYourselfwithaHandmadeDreamJournal","content":"\n\n## DIY\n\n![image](/assets/img/2024-05-17-HowtoEmpowerYourselfwithaHandmadeDreamJournal_0.png)\n\nIn the documentary *The Way of the Dream*, Dr. Marie-Louise von Franz says:\n\nThis is one of those remarkable statements that really hit home when I first heard it, and that’s because I’ve always believed dreams are a source of information and inspiration.\n\n<div class=\"content-ad\"></div>\n\n꿈을 기억하든 말든, 그것들은 오랫동안 의식의 수수께끼적인 문으로 간주되어 왔습니다. 당신의 가장 깊은 욕망, 두려움, 그리고 해결되지 않은 갈등을 엿볼 수 있는 곳이죠.\n\n예를 들어, 문학의 최고 수작 중 하나인 구일가메쉬 서사시에서 이를 확인할 수 있습니다. 이 서사시는 고대 메소포타미아로 거슬러 올라가는 18세기 경의 작품으로, 꿈이 나타나는 구원의 역할을 보여줍니다.\n\n구일가메쉬라는 주인공은 꿈 속에서 신들과 신화적인 존재들과 마주치며, 그것들은 그의 심리와 인간의 본성의 깊은 면을 대변합니다.\n\n# 꿈 일지의 역할\n\n<div class=\"content-ad\"></div>\n\n과거에 꿈이 인도나 초자연적인 메시지를 위해 사용되었다면, 어떤 사람들에게는 꿈의 초현실적이고 단편적인 성질은 이전 날에 받은 정보를 회상하거나 무작위로 의미 없는 영화처럼 떼어져 있는 장면들을 재생하는 것처럼 느껴집니다.\n\n하지만 많은 사람들이 모르는 것은 기억하든 말든, 꿈이 우리의 심리적 안녕과 자아 발견의 여정에서 중요한 역할을 한다는 것입니다.\n\n이러한 이유로, 나는 그것들을 기록하는 것이 중요하다고 믿으며, 여기서 수제 꿈 일기장이 필요한 이유가 됩니다.\n\n침대 옆 탁자 옆에 꿈 일기장을 두는 것은 귀하의 꿈 세계의 복잡성에 몰입하여 내면의 신비를 풀어내고, 특별한 통찰력을 얻어 깨어 있는 삶을 형성할 수 있도록 도와줄 것입니다.\n\n<div class=\"content-ad\"></div>\n\n하지만 저희가 저널 내용을 살펴보기 전에, 꿈과 그것을 기록하는 이젠을 말씀드리겠습니다. 하루를 시작하기 전에 깨어나자마자 꿈을 기록하는 이점에 대해 알려드릴게요.\n\n# 당신과 꿈의 관계\n\n저는 항상 꿈을 많이 꾸었어요.\n\n어린 시절 꿈을 기억합니다. 그 꿈들은 무서웠고 끔찍했어요. 때로는 제 자신을 바꾸기도 했고, 때로는 길거리나 삶의 위기에 처했을 때 도와주기도 했죠.\n\n<div class=\"content-ad\"></div>\n\n가끔은 죽은 친구들과 가족들이 방문하는데, 다행히 자주는 아니지만 그들이 나에게 남긴 인상은 때때로 몇 년 동안도 계속 남아 있다.\n\n바쁜 꿈 속 삶은 처음에 융기안 심리학에 이끌려 그 심리학만이 나에게 내면을 탐색하고 이해의 여정에 도움이 되는 필요한 도구를 제공했다는 이유 중 하나입니다. 그 과정에서 상징과 의미의 층을 발견하고, 내 진정한 잠재력을 발휘하는 열쇠를 간직하고 있다.\n\n나의 꿈을 탐험하고, 다른 사람들의 꿈을 도와가며, 내 존재적 위기를 극복하며 하는 활동 중 가장 즐기는 일이 되었습니다.\n\n# 꿈을 쓰기 전에\n\n<div class=\"content-ad\"></div>\n\n디지털 산만함이 가득한 세상에서, 내면에 대한 탐구라는 예술은 종종 잊혀지곤 합니다.\n\n그래서 나에게 꿈을 기억하는 노력을 하는 것이 중요하다고 느꼈습니다. 잠에서 깨어나자마자 뇌가 좀비 모드로 돌아가기보다는 꿈을 기억하는 노력을 하는 것이 중요하다고 느꼈습니다. \"오늘 난 해야만 하는데\"라는 모드가 아닌 상태에서 폰에 계속 나타나는 알림을 확인하는 것이죠.\n\n항상 쉽지는 않지만, 정신이 번쩍 들 때, 꿈의 내용을 기억하고 정리하여 매일의 일상과 걱정이 다시 밀려들기 전에 적어두려고 노력합니다.\n\n가끔은 핸드폰을 사용하기도 하는데, 그 시간에 눈에 맞는 적절한 빛이 필요하기 때문입니다. 하지만 나에게는 꿈을 노트에 적는 것이 가장 마음에 드는 방식입니다.\n\n<div class=\"content-ad\"></div>\n\n저는 최근 이에 더 깐깐해졌어요.\n\n저번 꿈 일지의 페이지가 다 떨어지자, 대체품을 찾기 시작했는데, 감성을 자극하는 것을 찾을 수 없어서, 예전 사업에서 남은 재료로 제 나만의 꿈 일지를 만들기로 결심했어요.\n\n# 수제 꿈 일지\n\n언어학교를 폐쇄하면서, 색종이, 리본, 접착제, 반짝임, 스티커, 마커 등 다양한 문구용품과 관련 용품이 많이 남았어요.\n\n<div class=\"content-ad\"></div>\n\n내 남편과 나는 많은 물건들을위한 집을 찾았어요. 가장 중요하고 가슴 아픈 도네이션들은 우리가 아프리카로 보낸 맞춤형 학교 가방들이었어요. 심지어 이에 대해 Medium에 기사를 썼어요.\n\n하지만 그 뒤로는 나머지 문구류에 대해는 다른 이야기였어요. 어떤 정신적 내면 저항 때문에 계속 노력해야만 했어요. 문제 중 하나는 다른 문맥을 위해 의도된 재료를 재활용하고 싶어했던 것이었어요. 두 번째 문제는 창의적 과정을 즐기면서도 죄책감을 느끼지 않기 위한 노력을 하는 것이었어요.\n\n코바늘 자수와 마찬가지로, 수공으로 만든 꿈 일기장을 만들면서 다시 어린 시절의 나와 연결되고 오랫동안 소홀히 하고 있던 능력들을 재발견할 수 있었어요.\n\n내 고딕 감성이 가득한 맞춤형 꿈 일기장을 만들어내고, 내 정신 속의 아테나를 통해 창의력을 몇 시간 동안 이끄는 경험으로 이어진 깜짝 놀라운 경험이었어요.\n\n<div class=\"content-ad\"></div>\n\n하지만 이 운동이 당신에게 어떻게 도움이 될 수 있는지 봅시다.\n\n# 정신적 렌즈를 통해 장인 정신을 받아들이다\n\n매일 밤 꾸는 꿈의 저장소 이상으로, 손수 꿈 일지를 만드는 것은 당신의 개인 성장과 자기 연결에 강력한 다리 역할을 할 수 있습니다. 여기에는 몇 가지 주요 이점이 있습니다:\n\n- 내면적 연결: 원하는 튜토리얼을 따라가고 싶은 재료를 선택하며, 다음 몇 일 동안 꿈을 기록할 방법을 찾는 것 외에는 다른 목적이 없이 꿈 일지를 만들어가는 과정에 참여하여, 내면적 생각에 촉각적으로 관여함으로써 소유의식 및 투자 의식을 향상시키는 데 도움이 됩니다.\n- 상징적 탐구: 정신 분석심리학은 꿈에서 상징과 원형의 중요성을 강조합니다. 꿈 일지를 손으로 만들면 개인적인 상징과 공감할 수 있는 요소들이 통합되어 무의식적 정보를 의식에 끌어 올릴 수 있어요.\n- 반영적 실천: 꿈 일지를 만들면서, 꿈 세계와 꿈에서 가장 반복되는 주제, 상징 및 서술적 패턴에 대한 깊은 이해를 도울 메시지들과 더 연결되고 내면적으로 더 깨어나게될 기초를 마련하게 됩니다. 더 큰 자기 인식과 통찰력을 통해 길을 제시.\n- 그림자의 통합: 정신 분석 심리학은 종종 억압되거나 부인되는 개성의 무의식적 측면을 통합하는 중요성을 강조합니다. 꿈 일지를 손수 만드는 것은 그림자 자료를 탐색하고 직면하는 안전한 공간으로서 기능할 수 있습니다.\n- 창의적 표현: 당신의 꿈 일지를 맞추는 데 필요한 모든 다양한 능력을 통합함으로써 정신적 과정, 욕망, 패턴 인식, 조직, 조화 능력에 접근합니다. Canva와 같은 도구를 사용하면 디자인 능력을 탐험하게 됩니다. 이는 다양하고 많각적인 창조자들에게 깊은 만족감을 줄 수 있습니다.\n- 신성한 공간: 꿈 일지를 만드는 것은 단순히 어떤 종류의 노트북에 꿈을 기록하는 행위를 신성하거나 의식주적인 운동으로 바꿀 수 있습니다. 의도와 중요성을 꿈 일지에 불어넣음으로써, 당신은 당신의 정신 심오한 깊이를 탐험하고 영적 성장을 촉진하기 위한 특별한 공간을 창조하게 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# 마지막으로\n\n만약 꿈이 당신에게 중요하고 자아 인식의 여정에 있다면, 수제 저널의 태블릿 특성은 당신에게 친밀감을 심어줄 것입니다.\n\n게다가, 꿈을 더 깊은 수준에서 상호 작용할 수 있는 신성한 공간을 형성할 것입니다.\n\n수제 꿈 저널 만드는 것은 자아 발견 여정을 시작하는 첫걸음이 될 수 있습니다. 그 저널의 페이지는 당신의 최고의 동반자가 되어주며, 꿈 뿐만 아니라 당신의 본질을 반영할 거울이 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n꿈 일기를 만드는 것은 당신의 내면 세계와의 심오한 연결을 통해 시작하는 첫걸음일 뿐입니다. 꿈을 규칙적으로 적어가며 전문가의 도움을 받아 그것들을 분석하는 것이 진정 변화가 시작되는 곳입니다.\n\n제가 하는 일과 다른 이들이 여정으로 전환하는 데 어떻게 도움을 주는지 더 알고 싶다면, 제 소개 페이지를 방문해주세요:","ogImage":{"url":"/assets/img/2024-05-17-HowtoEmpowerYourselfwithaHandmadeDreamJournal_0.png"},"coverImage":"/assets/img/2024-05-17-HowtoEmpowerYourselfwithaHandmadeDreamJournal_0.png","tag":["Tech"],"readingTime":5},{"title":"Rust 2 공부 내용 정리","description":"","date":"2024-05-17 04:11","slug":"2024-05-17-NielslearnsRust2GettingstartedwithAVRRust","content":"\n\n저는 러스트를 배우기 위해 내 임베디드 Java 가상 머신을 러스트로 이식하는 여정을 문서화하는 시리즈의 두 번째 부분입니다.\n\n# 개발 컨테이너에 러스트 설치\n\n이 첫 번째 단계는 Rust를 설치하는 것인데, rustup을 사용하면 간단합니다:\n\n```bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n<div class=\"content-ad\"></div>\n\n하지만 안정적이고 반복 가능한 방식으로 하자면 개발 컨테이너를 사용하는 게 좋겠죠. 개발 컨테이너는 VS Code가 코드를 빌드, 실행 및 디버깅하기 위해 생성하는 컨테이너입니다. 모든 개발 작업은 컨테이너에서 이루어지며, 데스크톱에서 실행 중인 VS Code는 단순히 컨테이너에서 실행 중인 다른 VS Code 인스턴스와 통신하는 UI 역할을 합니다:\n\n![image](/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_0.png)\n\n(출처)\n\n이점은 더 나은 격리와 명확히 정의된 개발 환경입니다. 이 프로젝트에만 사용되는 로컬 도구를 로컬에 설치할 필요가 없으며, 이 리포지토리를 내려받는 모든 사람이 동일한 컨테이너를 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n개발 컨테이너를 만드는 것은 매우 쉬워요. 필요한 것은 .devcontainer/devcontainer.json 파일(.devcontainer.json도 가능) 하나 뿐인데, 이 파일 안에는 VS Code가 컨테이너를 빌드하는 데 필요한 정보들이 들어가 있어요.\n\n미리 만들어진 이미지를 사용하거나, 자체 Dockerfile을 지정하여 컨테이너를 빌드할 수 있어요. 저는 후자를 사용하고 있고, 제 devcontainer.json은 이렇게 생겼어요:\n\n```js\n{\n    \"build\": { \"dockerfile\": \"Dockerfile\" },\n\n    \"customizations\": {\n        \"vscode\": {\n            \"extensions\": [\"rust-lang.rust-analyzer\"]\n        }\n    }\n}\n```\n\ndev 컨테이너에서 실행 중인 VS Code 인스턴스에는 기본적으로 어떤 확장도 설치되어 있지 않아요. 로컬로 설치된 확장 목록에서 간단히 클릭하여 추가하거나, json 파일에서 명시하여 자동으로 추가할 수 있어요. 형식은 `provider`.`extension`이고, 실제 이름은 UI에서 매우 명확하지 않지만 ~/.vscode/extensions 디렉토리에서 쉽게 찾을 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n도커 파일도 꽤 간단합니다:\n\n```js\nFROM rust:1.78\n\nRUN apt update\nRUN apt -y install gcc-avr avr-libc default-jre\n\nRUN cargo install cargo-generate\n```\n\nRust 프로젝트는 사용할 수 있는 도커 이미지를 제공하며, 보통의 Rust 개발에는 충분할 수 있습니다. 그러나 이 프로젝트의 목표는 임베디드 CPU용 Java VM을 빌드하는 것이며, 이 경우 Atmel AVR ATmega 128에 대해 작업하기 위해 몇 가지 추가 패키지를 설치해야 합니다.\n\ncargo는 Rust의 빌드 매니저이며, .NET에서는 dotnet, Scala에서는 sbt, Golang에서는 go와 같은 역할을 합니다. 마지막 줄은 새로운 프로젝트를 템플릿을 기반으로 생성할 수 있도록 하는 크레이트를 설치합니다. 이를 다음 섹션에서 사용할 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# AVR용 러스트\n\n여기서는 작동하는 러스트 설치 방법을 소개해 드릴게요. Cargo를 사용하여 새 프로젝트를 만들고 실행할 수 있습니다:\n\n![이미지](/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_1.png)\n\n하지만 이것은 저의 로컬 아키텍처에 맞게 빌드되었는데, 저희는 Atmel AVR ATmega128을 위해 빌드하고 싶어요.\n\n<div class=\"content-ad\"></div>\n\n행운이다! 많은 사람들이 AVR을 개발하기 위해 Rust를 사용하고 있어서, 이 동영상을 포함하여 도움이 되는 다양한 자료들이 있습니다. 이 동영상은 새 프로젝트를 설정하기 위한 cargo generate 템플릿을 소개하고 있습니다.\n\n\ncargo generate --git https://github.com/Rahix/avr-hal-template.git\n\n\n이 명령은 우리 프로젝트를 위해 템플릿을 구성하는 상호작용적인 흐름을 시작합니다. 이 경우에는 프로젝트 이름과 대상 보드에 대해 두 가지 질문만 있습니다. 실제 보드를 사용하지는 않고 대신 시뮬레이터에서 VM을 실행할 것이기 때문에, 제가 선택한 것은 아두이노 메가 1280입니다. \n\n![NielslearnsRust2GettingstartedwithAVRRust_2 이미지](/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_2.png)\n\n\n<div class=\"content-ad\"></div>\n\n지금은 ATmega128을 위해 구성된 프로젝트가 있습니다.\n\nCargo에 빌드하라고 요청하면, 흥미로운 일이 발생합니다:\n\n![이미지](/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_3.png)\n\nRust의 새 버전을 다운로드 중입니다! Dockerfile이 1.78을 지정했는데도 불구하고 1.79의 nightly 빌드를 받고 있습니다. 왜 이런 일이 발생했을까요?\n\n<div class=\"content-ad\"></div>\n\n여러 개의 Rust 도구 체인을 나란히 설치할 수 있다는 것이 밝혀졌어요. rustup 도구체인 목록을 보면 설치된 도구 체인을 확인할 수 있어요:\n\n![이미지](/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_4.png)\n\n개발 컨테이너의 기본 버전은 1.78이지만, 우리가 만든 프로젝트 내부에서 동일한 명령을 실행하면 2024-03-22의 nightly 빌드로 재정의돼요.\n\n이 일이 발생하는 이유는 템플릿에 rust-toolchain.toml이 포함돼 있어서 특정 버전을 요청했기 때문이에요.\n\n<div class=\"content-ad\"></div>\n\n```json\n[toolchain]\nchannel = \"nightly-2024-03-22\"\ncomponents = [\"rust-src\"]\nprofile = \"minimal\"\n```\n\n프로젝트를 nightly 빌드에서 시작하는 것이 조금 이상해 보이지만, 템플릿에서 생성된 코드는 1.78에서 컴파일되지 않습니다. 그래서 일단 여기에 남겨둔 채로 나중에 안정 버전으로 옮길 수 있는지 확인해 보겠습니다.\n\n# 코드 실행하기\n\nCargo도 프로그램을 실행할 수 있지만, 현재 버전에서 시도하면 다음과 같은 오류가 발생합니다:\n\n<div class=\"content-ad\"></div>\n\nmd\n![이미지](/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_5.png)\n\n템플릿은 생성된 실행 파일을 대상 장치로 보내는 도구인 ravedude를 사용하도록 구성되어 있지만 우리는 물리적 장치가 없으므로 수정된 Avrora 시뮬레이터의 버전을 대신 사용할 것입니다.\n\ncargo run을 실행하면 생성된 프로젝트의 capevm/.cargo/config.toml 파일에 있는 설정된 내용이 실행됩니다. 현재 이 파일은 다음과 같은 내용을 포함하고 있습니다:\n\n```js\n[target.'cfg(target_arch = \"avr\")']\nrunner = \"ravedude mega1280 -cb 57600\"\n```\n\n\n<div class=\"content-ad\"></div>\n\n생성된 Rust 코드를 Avrora에서 실행하려면 다음과 같이 변경했어요:\n\n```js\n[target.'cfg(target_arch = \"avr\")']\nrunner = \"java -jar ../avrora/avrora-beta-1.7.117.jar -monitors=memory,stack -single\"\n```\n\n지금은 Avrora 시뮬레이터를 컴파일한 파일(단일 .jar 파일)을 직접 저장소에 넣었어요. 이 Avrora 버전은 실행 중인 프로그램을 모니터링할 수 있도록 다양한 프로브로 확장되었지만, 이러한 세부사항은 훨씬 나중에 의미가 있을 거예요. 해당 수정 사항이 포함된 소스코드는 원본 CapeVM 저장소에 있어요.\n\n# AVR “Hello, world”\n\n<div class=\"content-ad\"></div>\n\n아래는 AVR을 위한 \"Hello, world\" 동등물을 생성하는 템플릿입니다:\n\n```rust\n#![no_std]\n#![no_main]\n\nuse panic_halt as _;\n\n#[arduino_hal::entry]\nfn main() -> ! {\n    let dp = arduino_hal::Peripherals::take().unwrap();\n    let pins = arduino_hal::pins!(dp);\n    let mut led = pins.d13.into_output();\n\n    loop {\n        led.toggle();\n        arduino_hal::delay_ms(1000);\n    }\n}\n```\n\nmain 함수의 서명인 `fn main() -> !`는 흥미롭습니다: ! 반환 유형은 함수가 종료되지 않음을 나타냅니다.\n\n이것은 여전히 내게는 이해하기 어렵지만 코드에서 강요된 #[arduino_hal::entry] 속성에 의해 시행됩니다. Rust의 좋은 점 중 하나는 \"F12\"(정의로 이동)로 거의 모든 것을 조회하여 구현을 볼 수 있다는 것이며, arduino_hal::entry에는 syn::Type::Never(_)가 반환 유형인 !을 포함하는 이 코드 조각이 포함되어 있습니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n// 함수 시그니처를 확인합니다\nlet valid_signature = f.sig.constness.is_none()\n    && f.vis == syn::Visibility::Inherited\n    && f.sig.abi.is_none()\n    && f.sig.inputs.is_empty()\n    && f.sig.generics.params.is_empty()\n    && f.sig.generics.where_clause.is_none()\n    && f.sig.variadic.is_none()\n    && match f.sig.output {\n        syn::ReturnType::Default => false,\n        syn::ReturnType::Type(_, ref ty) => matches!(**ty, syn::Type::Never(_)),\n    };\n```\n\n대부분의 임베디드 CPU 응용 프로그램에는 매우 유용합니다. OS가 없기 때문에 프로그램이 종료되는 방법이 정말 없습니다. 디바이스에서 계속 실행되어야 합니다. 정말 할 일이 남지 않았다면, 디바이스를 절전 상태로 전환하고 깨우는 트리거를 기다리는 것이 가장 좋습니다.\n\n이 루프는 여기서 끝없이 단일 핀을 토글하지만, 실제 보드가 없기 때문에 아직 테스트할 방법이 없습니다. 코드를 시뮬레이터에서 실행하고, Ctrl-C를 눌러 중지한 후에 Avrora가 config.toml에서 활성화한 -monitors에 따라 프로그램이 무엇을 수행했는지에 대한 정보를 출력할 것입니다:\n\n<img src=\"/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_6.png\" />\n\n\n<div class=\"content-ad\"></div>\n\n좋아요, 작동이 되네요! 하지만 아직 결과물이 그렇게 유용하진 않네요.\n\n마지막 목표는 네이티브 코드로 컴파일되어 실행되고 성능을 측정하기 위해 여러 벤치마크를 실행하고 확인하는 JVM을 구축하는 것입니다. 이를 위해 더 자세한 출력이 필요하므로, 다음 게시물에서는 디버그 출력 및 다른 계산 도구를 추가하는 방법에 대해 다뤄볼 예정입니다.\n\n이 단계에서의 코드 상태는 여기 Github에서 찾을 수 있습니다.\n\n원문은 2024년 5월 6일에 https://nielsreijers.github.io에서 최초로 게시되었습니다.","ogImage":{"url":"/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_0.png"},"coverImage":"/assets/img/2024-05-17-NielslearnsRust2GettingstartedwithAVRRust_0.png","tag":["Tech"],"readingTime":7},{"title":"3D 스캐닝의 다양한 분야에서의 응용","description":"","date":"2024-05-17 04:09","slug":"2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning","content":"\n\n![image](/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_0.png)\n\n## Table of contents\n\n- Introduction\n- Manufacturing\n  - Product Design\n  - Quality Control\n  - Reverse Engineering\n- Healthcare\n  - Medical Devices and Prosthetics\n  - Surgical Planning\n- Education\n  - Cultural Heritage Preservation\n  - Research\n- Entertainment\n  - Movies\n  - Gaming\n- Conclusion\n\n# Introduction\n\n<div class=\"content-ad\"></div>\n\n지난 몇 년 동안 3D 스캐닝은 다양한 산업에서 혁명적인 기술로 등장했습니다. 전문 카메라와 센서를 사용하여 3D 스캐너는 현실 세계 객체의 물리적 측정치와 형태를 캡쳐하여 자세한 디지털 3D 모델을 만듭니다. 이 데이터는 공학 분석, 품질 검사, 역공학, 3D 프린팅 등과 같이 다양한 응용 프로그램에 활용될 수 있습니다. 3D 스캐닝은 효율성 증가, 비용 절감, 품질 향상, 시장 진입 속도 향상 등 다양한 장점을 제공합니다.\n\n이 기사에서는 다양한 산업 및 분야에서 3D 스캐닝 기술의 주요 응용 분야를 소개합니다.\n\n## 제조업\n\n3D 스캐닝은 제조업 분야에서 프로토 타입 제작, 품질 관리, 역공학 등 다양한 활동에 널리 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_1.png)\n\n## 제품 디자인\n\n3D 스캐너를 사용하면 기존 물체의 3D 데이터를 정확하게 캡처할 수 있습니다. 이를 통해 제조업체는 이러한 데이터를 활용하여 3D 모델링을 하고 디지털 프로토타입을 만들 수 있습니다. 클레이 모델 및 몰드를 스캔함으로써 여러 디자인 변형을 디지털로 테스트할 수 있습니다. 이는 비용을 절약하고 제품 개발 주기를 크게 단축시킵니다.\n\n## 품질 통제\n\n\n<div class=\"content-ad\"></div>\n\n엄격한 품질 요구사항으로 인해 제조 단위에서 검사에 이상적인 솔루션인 3D 스캔이 가능해집니다. 제조된 부품의 중요한 치수를 3D CAD 모델과 대조하여 이상을 조기에 감지할 수 있습니다. 이를 통해 불량품이 더 나가는 것을 방지하여 품질을 향상시키고 낭비를 최소화할 수 있습니다.\n\n## 역공학\n\n기존 물체를 3D 스캔을 사용하여 3D 프린트 가능한 파일이나 편집 가능한 파일로 디지털화하면 역공학 응용 프로그램에 유용합니다. 이를 통해 유산품의 수리, 예비 부품 재생산 또는 기존 제품의 설계 개선이 가능해집니다. 스캐너를 사용한 역공학은 각 부분의 치수를 수동으로 측정하는 것보다 더 빠르고 저렴합니다.\n\n# 헬스케어\n\n<div class=\"content-ad\"></div>\n\n의료 분야에서 3D 스캐닝은 많은 이점을 제공합니다. 그 중 가장 중요한 것은 스캐너에 의해 캡처된 정확한 해부학적 데이터를 기반으로 한 맞춤 솔루션을 가능하게 한다는 점입니다.\n\n![의료기기 및 보청기](/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_2.png)\n\n## 의료 기기 및 보청기\n\n3D 스캐닝을 활용하면 보청기나 인공 장기와 같은 의료기기 개발이 가능하며, 각 환자의 해부 요구에 맞게 맞춤형으로 제작할 수 있습니다. 이와 같은 맞춤화는 더 나은 착용감과 편의성, 결과를 제공합니다. 보청기 설계에 사용되는 스캐너는 고정밀도 및 속도, 환자 안전에 중점을 둔 비접촉식입니다.\n\n<div class=\"content-ad\"></div>\n\n## 수술 계획\n\n의료 스캐닝을 통해 장기의 3D 디지털 모델을 작성하면, 복잡한 수술을 위한 수술 전 계획에 완벽하게 도움이 됩니다. 정확한 해부학적 시각화는 잠재적인 합병증을 미리 파악하고, 최적의 수술 전략을 결정하며, 정밀성을 향상시키고 수술 시간을 줄이는 데 도움이 됩니다. 또한 수술 중에 장치 크기 측정을 위한 구체적인 측정에도 도움이 됩니다.\n\n## 교육\n\n현대 3D 스캐너의 비침습적인 스캐닝 능력은 소중한 유물에 손상을 입히지 않으면서 교육 분야에서 혁신적인 응용 프로그램을 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n아래는 Markdown 형식으로 table tag를 수정한 내용입니다.\n\n\n![이미지](/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_3.png)\n\n## 문화유산 보존\n\n많은 박물관들이 화석, 조각품, 유물 등과 같은 소중한 문화 자산의 디지털화와 보존을 위해 3D 스캐닝 기술을 활용하고 있습니다. 고정도의 3D 모델은 상호작용적인 경험을 만들어내고 매우 소중한 실제 물체들의 다루임을 최소화하면서 대중적 액세스를 넓힙니다.\n\n## 연구\n\n\n<div class=\"content-ad\"></div>\n\n과학 기관은 인류학, 고고학, 생물학 등 다양한 분야에서 연구 노력을 더욱 발전시키기 위해 3D 스캐닝을 활용합니다. 스캐너 데이터를 통해 정확한 측정, 주요 특성의 디지털 카탈로그 작성, 형태학 분석을 통해 진화 증거 발견 및 해부학적 이상 현상 도출이 가능해집니다. 연구자들은 협업 플랫폼을 통해 온라인에서 서로의 스캔을 공유하고 검토할 수도 있습니다.\n\n## 엔터테인먼트\n\n3D 스캐닝은 엔터테인먼트 산업에 혁신적인 가능성을 열어주었습니다. 물리적 자산과 인간의 3D 모델을 스캔하여 제작된 화려한 시각 효과 및 매우 현실적인 애니메이션을 통해 시청자 경험을 향상시키는 데 기여합니다.\n\n![3D 스캐닝의 다양한 산업 분야 응용](/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_4.png)\n\n<div class=\"content-ad\"></div>\n\n## 영화\n\n최고의 VFX 스튜디오들이 가상 제작 및 대형 영화에서 사실적인 디지턤 캐릭터를 만들기 위해 3D 스캐닝을 널리 활용하고 있습니다. 화면 속 배우들의 노화 및 젊어지기, 스턴트 리그 제거를 위한 해부학적 조정, 디지턤 의상 제작 등의 효과는 배우들의 바디 스캐닝과 온셋 스캔 시스템을 통해 촬영된 장면들이 필요합니다.\n\n## 게임\n\n게임 개발자들은 오늘날 AAA 비디오 게임에서 초고화질 환경과 가상 세계를 만들기 위해 스캔된 3D 모델을 활용합니다. SLAM 기술을 사용한 포토그래메트리 릭은 가상 캐릭터를 애니메이션화하기 위한 스캔 데이터를 제공하여, 삶 같은 외모, 표현 및 움직임을 전달하여 증강 현실 경험을 향상시킵니다.\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\n3D 스캐닝은 다양한 업종의 기업들에게 광범위한 응용 분야를 가진 혁명적인 기술임이 입증되었습니다. 3D 스캐너의 고도로 정확한 물리적 개체 데이터를 수정 가능한 디지털 형식으로 캡처하는 능력은 기업이 디자인, 품질, 맞춤 및 혁신에 대한 접근 방식을 변화시키고 있습니다. 스캐닝 하드웨어 및 소프트웨어 솔루션이 더 큰 능력으로 계속 발전함에 따라, 더 많은 산업에 혜택을 줄 것으로 기대되며 생산성 향상에 기여할 것으로 기대됩니다.\n\n본 게시물은 원본이 3dprintjunction.com에 게시되었습니다.\n저희의 작업을 지원해 주신 모든 분들에게 감사드리며 3dprintjunction.com에서 더 많은 이와 같은 기사들을 확인해 보시기 바랍니다.","ogImage":{"url":"/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_0.png"},"coverImage":"/assets/img/2024-05-17-ApplicationsAcrossIndustriesintheMultifacetedWorldof3DScanning_0.png","tag":["Tech"],"readingTime":4},{"title":"기술 생태계가 혁신을 억눌했을까요","description":"","date":"2024-05-17 04:07","slug":"2024-05-17-HastheTechEcosystemStifledInnovation","content":"\n\n벽으로 둘러싸인 정원, 독점 표준, 기술 제품 간의 협력 부족에 대한 고찰\n\n![이미지](/assets/img/2024-05-17-HastheTechEcosystemStifledInnovation_0.png)\n\n모든 것이 연결되어 있다는 것의 가치는 무엇일까요? 현재의 기술 환경을 살펴볼 때 이는 공정한 질문입니다. 마치 모든 제품이 더 많은 제품을 구매하도록 장려하는 제품 체인의 한 부분으로 만들어졌다는 것 같습니다. 기술 제조업체들은 이를 '생태계'라고 부릅니다. 그들의 제품군이 함께 사용할 때 더 좋다고 합니다. 그리고 우리는 이에 동의했습니다. 누군가 새 iPhone을 구매하면 이 사람이 Apple Watch와 AirPods도 구매할 가능성이 높습니다. 왜 그럴까요? 왜냐하면 Apple이 생태계를 제품의 참된 잠재력을 발휘하는 열쇠로 마케팅했기 때문입니다. 그렇다면 공으로하지 못하는 좋은 제품은 어디에 있을까요?  \n\n# 생태계의 매력\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-05-17-HastheTechEcosystemStifledInnovation_1.png\" />\n\n협력하여 작동하는 제품이 왜 바람직한지 쉽게 이해할 수 있습니다. 파일과 책임을 한 장치에서 다른 장치로 전달할 수 있다는 것은 마법 같은 느낌입니다. 핸드폰에서 노래를 듣고 그것을 스마트 스피커로 보낼 수 있는 능력은 단순히 미래 같은 느낌을 줍니다. iPhone의 사진 앨범을 AirDrop으로 MacBook으로 보낼 수 있는 능력은 매우 편리하며 편리하며 편리한 기능입니다.\n\n이것이 생태계의 매력입니다: 간단함. Apple Watch는 시장에서 최고의 스마트워치로 극찬을 받고 있습니다. 그러나 단일로만 iPhone과 작동하도록 설계되었기 때문에 극도로 제한적입니다. Samsung은 훌륭한 시계를 만들지만, 갤럭시 폰과 함께 사용하지 않는 한 모든 기능이 잠겨 있습니다. 한 번 생태계에 참여하면, 다른 제조업체 장치와 상호 운용 가능한 것이 아니라 자사의 장치와 호환되게 설계된 제품을 구입해야 하기 때문에 떠나기 어렵습니다.\n\n이러한 의미에서 생태계는 매우 자본주의적인 아이디어입니다. 이는 사람들이 동일한 회사에서 제품을 구매하도록 하고, 다른 제품으로 떠나기 어렵게 만들어 두기 위해 설계되었습니다. 이 아이디어는 기술 결정 과정을 훨씬 간단하게 만듭니다. 선택한 브랜드를 결정하고 자신의 설정을 향상시킬 다음 제품을 출시할 때까지 기다릴 것입니다. 간단히 말해, 생태계는 많은 사람들에게 안전한 선택이 됩니다.\n\n<div class=\"content-ad\"></div>\n\n# 생태계의 몰락\n\n![이미지](/assets/img/2024-05-17-HastheTechEcosystemStifledInnovation_2.png)\n\n이 모든 것은 Apple과 같은 기업이 이미 확립된 사용자 기반과 충실한 팬층을 보유하고 있다면 좋습니다. 그러나 시장에서 혁신하려고 하고 이름을 알리려는 기업은 어떻게 해야 할까요? 많은 경우, 이러한 기업들은 생태계의 개념에 맞지 않기 때문에 출발조차 못 합니다. Sonos와 같은 회사를 생각해보십시오. 이 회사는 집에서의 오디오 산업에서 잠재력을 막는 폐쇄 정책에 반발하여 거대 기술기업과 전쟁에 휘말렸습니다.\n\n지금은 특정 제품 세그먼트가 생태계에 의해 정의되어 있습니다. 스마트워치는 거의 항상 생태계의 일부이며 그것이 아닌 제품은 속한 기업에게 빨리 흡수되고 있습니다. 같은 방식으로 이어폰 시장에서도 특정 기능이 특정 휴대폰에서만 제공되는 경향을 보이고 있습니다. 이로 인해 충전 방법과 페어링 기술에 관한 표준의 부재로 인해 소유권 트렌드가 생겨났습니다.\n\n<div class=\"content-ad\"></div>\n\n기술 분야의 다른 측면에서도 이를 볼 수 있습니다. 애플은 최근 Apple Pay에 Apple Pay Later라는 기능을 소개했습니다. 이 기능을 통해 사용자들은 이자 없이 4회 할부로 상품을 결제할 수 있게 되었습니다. 익숙한 소리인가요? Klarna, Afterpay, 그리고 Affirm과 같은 기업들이 이미 몇 년 동안 이러한 서비스를 제공해왔기 때문입니다. 그러나 애플 버전은 이러한 서비스들이 할 수 없었던 Apple Pay에 통합되어 있어서, 시장에 비교적 늦게 진입했음에도 불구하고 애플이 이 분야에서 뚜렷한 우위를 차지하고 있습니다. 이 기업들은 어떻게 경쟁을 꿈꿀 수 있을까요? 말도 안 되겠죠. 아마도 이들이 일찍이 마비될 것으로 예상됩니다.\n\n새로운 기업들이 새로운 제품을 발표할 때에도 가능한 통합을 강조해야 합니다. Carl Pei가 Nothing Phone을 공개할 때, 그는 얼마나 Nothing이 폰과 이어버드 주변의 생태계를 만들어 가고 있는지 빨리 언급했습니다. 어떤 새로운 제품을 언급할 때 이 용어는 필수적입니다. 제품이 제공하는 기능이 아니라 그 통합적인 부분이 중요하며, 결국 기술 분야가 영원히 두 기업에 의해 지배될 것처럼 느껴지게 해 줍니다.\n\n# 미래의 불확실한 길\n\n[![image](/assets/img/2024-05-17-HastheTechEcosystemStifledInnovation_3.png)](#)\n\n<div class=\"content-ad\"></div>\n\n생태계 구축의 요소 중 일부는 보다 일반적인 접근 방식을 취해왔습니다. 예를 들어 Google은 제품과 서비스를 웹 기반으로 만들어 어떤 기기에서도 웹 브라우저를 통해 사용할 수 있도록 했습니다. Google 문서나 Google 사진과 같은 서비스를 사용하는 것은 한 기기에서 다음으로 쉽게 이어질 수 있으며, 회사는 심지어 Android 메시징 앱을 위한 웹 기반 클라이언트도 제공했습니다. 이 클라이언트는 Chrome OS, Windows 및 Mac에서 사용할 수 있습니다. 음악 스트리밍 서비스인 Spotify는 Spotify Connect 기능을 활용하여 다양한 오디오 장치에 연결할 수 있는 오디오 생태계를 만들었습니다.\n\n기술 세계를 표준으로 통합하는 노력이 있었습니다. 우리는 Matter 표준을 통해 스마트 홈 산업에서 어떤 서비스 공급 업체를 하나의 우산 아래로 모으려는 움직임을 본 적이 있습니다. 그러나 궁극적인 문제는 기업들이 항상 경쟁 우위를 찾고 있다는 것입니다. 그들이 이를 달성하는 방법은 상호 운용성의 정신이 아닌 폐쇄형 프로토콜을 통한 것입니다.\n\n사실 많은 사람들은 생태계에 갇혀 있다는 사실에 대해 신경 쓰지 않습니다. 왜냐하면 우리는 기술 동맹에 대해 어느 정도 본능적으로 뭉클해졌기 때문입니다. 우리의 가전제품에 쓴 돈이 타당하다는 필요성 때문에 기술 애호가들은 팀으로 나뉘게 됩니다. 기술을 즐기는 사람으로서 이러한 동적을 보는 것은 실망스럽습니다. 왜냐하면 이로 인해 사람들이 기술을 특별하게 만드는 것, 혁신이 왜 아름다운지 잊게 되기 때문입니다.\n\n기술 동맹주의가 우리 기술 애호가들로 하여금 비애호가에게 독설적인 인상을 준 것입니다. 우리는 사랑하는 브랜드들을 인정해달라고 요구하는 대신 이러한 브랜드들로부터 더 많은 것을 요구해야 합니다. 결과는 그 동안 독자주의를 격려하며 이 선호도에 힘입어 경쟁을 최소화시키고 충성도를 극대화시키며, 이를 통해 혁신이 미미한 채 수익을 꽂아들 수 있게 합니다. 본질적으로 생태계는 기술의 물이며, 열려 있고 흥미로운 것을 흉내내어 폐쇄적이고 진부한 것으로 만들었습니다. 그러나 불편하게도, 이 유행은 수익성이 있기 때문에 계속될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n만약 이 글을 즐기셨다면 스마트폰, 컴퓨터 및 기술 분야에 대한 더 많은 논평을 찾고 계시다면 저희 Hexagon을 구독해보시기를 고려해보세요. 매주 금요일 아침 새로운 글이 발송됩니다.","ogImage":{"url":"/assets/img/2024-05-17-HastheTechEcosystemStifledInnovation_0.png"},"coverImage":"/assets/img/2024-05-17-HastheTechEcosystemStifledInnovation_0.png","tag":["Tech"],"readingTime":4},{"title":"알고리즘을 이해하라는 관객을 이해하라의 현대적인 동등물이에요","description":"","date":"2024-05-17 04:05","slug":"2024-05-17-KnowYourAlgorithmIstheModernEquivalentofKnowYourAudience","content":"\n\n## 무모한 작가\n\n![이미지](/assets/img/2024-05-17-KnowYourAlgorithmIstheModernEquivalentofKnowYourAudience_0.png)\n\n웹 페이지, 잡지, 신문의 편집자로 일해 온 경험이 있습니다. 수만 명의 팔로워를 모아왔지만, 하루아침에 모든 조회수가 사라졌습니다. 다른 경우에는 계정 프로필의 혜택 없이도 내 작품이 바이럴로 확산되기도 했습니다.\n\n이 모든 것이 작가로서의 성공이 본인의 통제를 벗어나는 여러 요소들에 의해 결정된다는 결론을 내게 합니다. 때로는 내 작품이 일부러 억압되는 것 같기도 하고, 때로는 모든 이점을 갖게 되기도 합니다.\n\n<div class=\"content-ad\"></div>\n\n사회 정의 문제에 대한 목소리를 내는 것은 나에게 중요합니다. 많은 뉴스 소스들이 문제의 모든 면을 충분히 제시하지 못하고 있다고 생각합니다. 저는 작가로서, 자격이 있다면 생산적이고 사회적으로 책임 있는 의견을 제공하는 것이 내 의무라고 생각합니다.\n\n작품을 제출하는 곳에 상관없이, 작가들은 기존 유통 메커니즘의 요구를 준수하는 방법을 배워야 합니다.\n\n이것은 첫 번째 표에 긁힌 첫 돌 판까지 계속되어 왔습니다. 심지어 고등학교 영어 수업에서도 이미 학생들이 \"숨겨진\" 의미에 대해 이야기하고 있었죠.\n\n역사적으로 작가들은 동료들 사이에서 인기 없는 사회적으로 유익한 아이디어를 전달하는 데 아주 능숙함을 입증했습니다.\n\n<div class=\"content-ad\"></div>\n\n만약 작가들이 자신의 시대의 시각에 영향을 미치기를 원한다면, 배포 메커니즘의 작동 방식을 확실하게 이해하는 것이 중요합니다. 이제 우리는 품질 높은 작품의 창작에만 초점을 맞추는 여유가 없어요. 우리는 사람들이 볼 가능성도 있는 매력적인 작품을 써야 합니다.\n\n# 글쓰기가 낚시와 같은 이유\n\n어떤 복잡한 시스템에서는 보이는 것 이상의 요소들이 작용하고 있습니다. 부정확한 가정을 하지 않는 것이 중요합니다.\n\n현대의 글쓰기 시장을 낚시와 비교해보세요:\n\n<div class=\"content-ad\"></div>\n\n- 작가는 누가 낚시줄을 던지는 사람입니다.\n- 독자들은 물고기입니다.\n- 제목은 미끼입니다.\n- 첫 단락은 낚시바늘입니다.\n- 한 번 물고기를 잡았다면, 글의 품질이 물고기를 잡느냐 못 잡느냐를 결정합니다.\n\n이제 제일 중요한 요소입니다:\n\n- 배포 알고리즘은 호수입니다.\n\n멋진 미끼를 사용하여 좋은 줄로 죽은 호수로 던진다면, 아무 효과를 얻을 수 없습니다. 물고기를 잡지 못할 때 항상 장비에 문제가 있는 것으로 가정하는 것은 어리석습니다.\n\n<div class=\"content-ad\"></div>\n\n분배 메커니즘은 제어할 수 없는 것일지라도, 그것에 대해 고민하지 않을 여유는 없습니다. 모래위에 시온을 던지고 싶지 않으시죠.\n\n# 선택은 누가 하는 걸까요?\n\n문학에서 고전적인 궁정쇼 캐릭터인 광대는 종종 유머의 막장 아래 강력한 인물들에 대한 비판을 숨기는 데 사용됩니다. 어떤 연극에서는 그 광대들이 머리를 잃는 경우도 있습니다.\n\n현실에서도 작가들 역시 머리를 잃을 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n출판 업계에서 몇몇 사람들은 궁극적으로 독자들이 어떤 작품이 성공할지를 선택한다고 주장하기도 합니다. 그러나 배경에는 독자들이 선택할 수 있는 옵션을 조작하는 힘이 작용하고 있음을 일축하는 것은 어리석은 일입니다.\n\n우리가 읽는 기사와 책부터 우리가 시청하는 영화와 프로그램, 듣는 음악까지 모든 것은 관문 과정을 거쳐 배포 채널로 들어갑니다. 우리는 사회에 해를 끼칠 수 있는 아이디어를 걸러 내렸다는 노력이 있음을 받아 들이지만, 작업 중인 프로세스가 효과적인지, 혹은 유익한 아이디어도 나쁜 것과 함께 걸러내고 있을지를 항상 의심해야 합니다.\n\n# 기존 매개변수 인식하기\n\n나는 (어쩌면 어리석게도) 대부분의 작가들이 세상에 긍정적인 영향을 주려는 선량한 사람들이라고 믿습니다. 그러므로 그들은 때때로 이미 존재하는 배포 제한을 인식하지 못할 수도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n거의 모든 소셜 미디어나 뉴스 피드는 허용되지 않는 콘텐츠 유형을 기술하는 이용 약관을 가지고 있습니다. 이로는 비하적인 댓글, 폭력을 부추기는 발언 등이 포함됩니다. 대부분의 작가들은 이러한 매개변수에 대해 크게 고민하지 않을 것이라고 생각합니다. 왜냐하면 그들이 쓸 내용은 아니기 때문이죠.\n\n그러나 중요한 점은 모든 플랫폼이 이러한 이용 약관을 설정한 이유를 이해하는 것입니다. 모든 작가는 이를 인식하든 인식하지 않든 이미 설정된 매개변수 안에서 작업하고 있다는 것을 이해하는 것이 중요합니다.\n\n그리고 개인적으로 금지된 유형의 콘텐츠를 쓰지 않을지라도 모든 작가가 그런 기준에 자신을 두고 있는 것은 아니라는 점을 알아두는 것도 중요합니다.\n\n# 적대적 글쓰기 억제의 필요성\n\n<div class=\"content-ad\"></div>\n\n사람들은 \"언급의 자유\" 개념에 대해 이야기하며, 그것을 모든 형태에서 고귀하다고 만들기도 합니다. 그러나 규칙적인 사람들이 떠나는 순간 얼마나 악랄한 토론이 될 수 있는지를 깨달을만한 시간을 많이 쏟을 필요가 없습니다.\n\n중재자가 없으면 대화는 모욕, 적의, 폭력 요구로 전개됩니다 (그런 것들만 말하는 것입니다). 방치된 경우, 집단행동의 심리가 발달할 수 있습니다. 사람들은 서로의 악행에 영향을 받아 끔찍한 일을 저지를 겁니다.\n\n미디어는 강력합니다.\n\n문제는 역사가 이러한 시나리오가 매우 유익하다는 것을 보여준다는 점입니다. 이것이 큰 출판사들이 \"돈을 벌기 위해\" 사업을 한다고 말하는 사람들에 대해 의식이 부족하다고 도전하는 이유 중 하나입니다. 이 발언은 이미 고의적으로 억압되고 있는 글쓰기 유형에 대한 인식 부족을 나타냅니다.\n\n<div class=\"content-ad\"></div>\n\n\n대모적 환멸에 빠지는 것은 권력과 영향력을 얻는 매우 효과적인 방법입니다. 하지만 아무도 \"나는 대모자가 되기를 염원한다\"고 말하지는 않습니다. 대신, 그들은 \"나는 양심의 자유를 옹호하는 챔피언이다\"라고 말함으로써 그들의 야망을 숨깁니다. 이는 양심의 자유를 옹호하는 모든 챔피언이 사악한 목적을 가지고 있다는 의미는 아닙니다. 그들 중 일부는 진심이며, 양심의 자유에는 방어자가 필요합니다.\n\n내가 설명하고자 하는 점은 이 주제가 대부분의 작가들이 현재 인식하고 있는 것보다 훨씬 복잡하다는 것입니다. 또한 작가들은 이윤을 위해 적의 분위기 조장에 아무런 도덕적 망설임이 없는 플랫폼에서 일할 때 조심해야 합니다.\n\n나는 \"돈을 벌고 싶다\"는 이유만으로 부도덕한 행동이 정당화될 수 없다고 믿습니다.\n\n# 유익한 아이디어가 억압되고 있는가?\n\n<div class=\"content-ad\"></div>\n\n위에서 언급한 주장은 상당히 흥미로운 것 같아요. “언론의 자유를 지키는 챔피언”이라 주장하는 사람이 사실 독재자가 되고 싶어하는 것일 수도 있죠. 하지만 또 다른 경우에는 그냥 아이들이 ‘죽은 살인자의 죄’를 검열되지 않은 상태로 볼 수 있기를 원하는 사람일 수도 있어요.\n\n요즘에는 “가끔은 다수의 의견에 저항해야 한다”는 메시지가 담긴 미미를 많이 보게 됐어요.\n\n그렇죠, 맞아요. 하지만 “다수의 의견”이 어떤 것을 의미하는지를 모른다면, 이 메시지가 좋은 것인지 나쁜 것인지 알 수가 없어요.\n\n유해한 아이디어를 억제하기 위한 다양한 매커니즘이 존재하는 것은 우리가 알고 있죠. 대다수 플랫폼들은 정당하게 유해한 언어를 게시하는 것을 허용하지 않을 거예요. 그러나 다시 말하지만, 작가들은 모든 플랫폼이 오직 “나쁜” 아이디어만을 억제할 것이라고 가정해서는 안 됩니다.\n\n<div class=\"content-ad\"></div>\n\n사실 그 가정은 책임감이 없다고 할 수 있어요.\n\n사회에 도움이 될 수 있는 아이디어들이 종종 적대적인 것으로 오해를 받기도 합니다. 예를 들어, 반 흑인 인종주의를 비판하고 싶어 하는 작가가 \"분열적\"이라고 불리거나 \"백인에 대한 반인종주의자\"로 신고될 수도 있어요.\n\n우리는 조작에 취약한 불완전한 시스템을 가지고 있어요.\n\n스크롤하는 뉴스 피드에서는 사회 프로그래밍이 많이 작용하고 있어요. 그 중 일부는 책임감 있는 것이 있고, 일부는 그렇지 않을 수도 있어요.\n\n<div class=\"content-ad\"></div>\n\n작가로서 여러분은 자신에게 다음과 같은 질문을 하고 있어야 합니다. \"내가 볼 수 있는 이 기사가 어떤 메커니즘을 통해 여기에 왔을까요?\" 다음으로 고민해야 할 것은 그 기사를 더 큰 사회적 이점을 제공할 수 있는 기사로 대체하는 방법입니다.\n\n# 더 큰 시야의 장점\n\n저는 Green Bay Packers를 다루는 작은 출판물을 위해 글을 썼었습니다. 여러분이 발언의 플랫폼을 얻게 되면 눈에 띄는 것은 품질 좋은 의견을 제공하는 데 책임을 져야 한다는 점입니다. 지역 바에서 의자에 앉아 팀을 향해 불평하는 것과 잡지에 의견을 표현하는 것은 전혀 다른 문제입니다.\n\n팬으로서 나는 경기장에서 뛰는 선수들에 관심이 있었습니다. 하지만 팀을 다루는 전문 작가로서는 게임의 재정적 측면에 대해 보다 주의 깊게 살펴봐야 한다는 것을 깨달았습니다. 놀랍게도, 회계사가 명예의 전당급 쿼터백을 갖는 것만큼이나 NFL 프랜차이즈의 성공에 중요한 역할을 한다는 것을 발견했습니다. 이를 인식하지 못하면 시즌이 어떻게 진행되고 있는지에 대한 가치 있는 통찰을 제공할 수 없습니다.\n\n<div class=\"content-ad\"></div>\n\n렉퍼가 팀이 선수를 영입할 때마다 그 선수를 영입하길 원해요. 그러나 전문가들은 대중에게 왜 그것이 불가능한지 설명해야 합니다.\n\n당연히 독자들로부터 무지한 의견을 인증하고 반복해야 한다는 압박을 느낄 수 있어요. 이를 수긍한다면 커뮤니티에 도움이 되지 않아요. 독자들이 콘텐츠를 선택하는 데 항상 신뢰할 수 없는 이유의 한 예시입니다.\n\n마찬가지로, 작가들은 글 산업의 모든 측면을 포함한 더 포괄적인 시각을 개발해야 해요. 바텐더 자리에서 일어나 경기에 참여해야 합니다.\n\n# 작가들의 의무\n\n<div class=\"content-ad\"></div>\n\n\"독자가 궁극적으로 선택한다는 생각은 사실이 아닙니다. 네, 독자는 어떤 기사를 클릭할지 선택하지만, 그 선택지는 그들에게 제공된 심사숙고한 선택지에서 옵션을 고를 뿐입니다. 많은 아이디어가 억압되어 왔고, 그것은 사회에 이로움이나 해로움을 주는 것을 고려해요.\n\n영향력 있는 작가들은 배포 메커니즘의 제약을 극복해야만 대중에 긍정적인 영향을 미칠 수 있어요.\n\n긍정적인 사회 변화의 주체가 되고 싶다면, 당신의 메시지가 눈에 띄도록 하는 법을 배워야 합니다. 클릭을 얻는 데만 초점을 맞추기보다 선택지 중 하나가 되는 것에도 집중해야 해요.\n\n그래서 '최고의 작품이 항상 선보인다'라고 말하는 것은 부정확해요. 기사가 얼마나 훌륭하게 제작되었는지는 중요하지 않아요, 만약 그것이 배포 채널에 들어가지 않는다면요. 사람들은 '열심히 일하면 항상 보상을 받을 수 있다'고 말하지만, 그게 사실은 아니에요. 땅에서 구멍을 파는 데 하루종일 투자할 수 있겠죠. 그것은 열심히 일하는 것이지만, 구멍을 파는 것 외에는 보상이 없어요.\"\n\n<div class=\"content-ad\"></div>\n\n가끔은 글쓰기를 할 때 허용 메시지를 숨기기 위해 큰 노력을 기울여야 하거나, 분명히 사회적 피해를 초래하는 보편적인 견해에 대항하는 반박을 제공해야 할 수도 있습니다. 작가들은 또한 메시지를 동적이고 재미잌면서 유효한 방식으로 제공해야 하며 배포 메커니즘에도 매력을 줘야 합니다. 마지막으로, 여러분의 작품은 자체로 주목을 끌 수 있어야 합니다.\n\n그 중 어느 하나를 무시할 여유가 없습니다.\n\n결국, 모든 작가가 물어야 할 질문은: 어떻게 사회에 가장 큰 혜택을 제공하는 배포 메커니즘을 개발할 수 있을까? 이미 해당 메커니즘이 존재한다고 가정하는 것은 어리석은 일입니다.","ogImage":{"url":"/assets/img/2024-05-17-KnowYourAlgorithmIstheModernEquivalentofKnowYourAudience_0.png"},"coverImage":"/assets/img/2024-05-17-KnowYourAlgorithmIstheModernEquivalentofKnowYourAudience_0.png","tag":["Tech"],"readingTime":6}],"page":"72","totalPageCount":151,"totalPageGroupCount":8,"lastPageGroup":20,"currentPageGroup":3},"__N_SSG":true}