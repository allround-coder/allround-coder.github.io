{"pageProps":{"post":{"title":"Javascript scrollIntoView 메소드 사용 방법","description":"","date":"2024-06-22 15:32","slug":"2024-06-22-JavascriptscrollIntoViewmethod","content":"\n\n\n![scrollIntoView method](/assets/img/2024-06-22-JavascriptscrollIntoViewmethod_0.png)\n\nscrollIntoView는 요소를 뷰포트 안으로 부드럽게 스크롤할 수 있는 자바스크립트 메소드입니다. 이 메소드는 이미 보이는 뷰포트에 요소가 없다면 요소를 보이게 만듭니다. 사용자가 어떤 작업을 수행하거나 애니메이션 효과로 요소를 보여줄 때 유용합니다.\n\nscrollIntoView 메소드는 문서 객체 모델(DOM)의 Element 인터페이스의 일부입니다.\n\nelement.scrollIntoView();\nelement.scrollIntoView([scrollIntoViewOptions]);\n\n<div class=\"content-ad\"></div>\n\nscrollIntoView의 문법에는 2 가지 유형이 있습니다.\n\n이 메소드는 기본 옵션으로 요소를 보이도록 스크롤하는 데 사용됩니다.\n\n이는 요소가 이미 보이지 않은 경우 요소가 포함되어 있는 요소의 맨 위나 뷰포트로 스크롤됩니다.\n\nscrollIntoViewOptions는 뷰포트에서 요소를 스크롤하는 여러 옵션을 지정하는 선택적 객체 속성입니다.\n\n<div class=\"content-ad\"></div>\n\n다음과 같은 속성이 있습니다.\n\n이 속성은 아래 유형을 통해 스크롤의 동작을 정의하는 데 사용됩니다.\n\n가능한 값은\n\n- auto(기본값): 스크롤 동작에 따라 요소를 스크롤합니다.\n- smooth: 부드럽고 애니메이션 효과로 요소를 스크롤합니다.\n- instant: 즉시 요소를 스크롤하여 단일 점프와 동일합니다.\n\n<div class=\"content-ad\"></div>\n\n이 속성은 가시 영역 내 요소의 수직 정렬을 정의하는 데 사용됩니다.\n\n가능한 값은\n\n- start(기본): 요소를 시작 위치에 스크롤합니다.\n- center: 요소를 중앙에 스크롤합니다.\n- end: 요소를 끝에 스크롤합니다.\n- nearest: 수직으로 가장 가까운 가장자리로 스크롤합니다.\n\n이 속성은 가시 영역 내 요소의 수평 정렬을 정의하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n다음은 가능한 값들입니다\n\n- start(기본): 요소를 시작 위치에 스크롤합니다.\n- center: 요소를 중앙에 스크롤합니다.\n- end: 요소를 끝에 스크롤합니다.\n- nearest: 수평으로 가장 가까운 가장자리로 스크롤합니다.\n\n## 예시\n\n여기에 scrollIntoView의 다양한 속성 조합에 따라 생성된 3가지 예시가 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 1. scrollIntoView() 기본\n\n이것은 요소를 보이는 뷰포인트로 스크롤합니다.\n\n<!DOCTYPE html>\n<html>\n    <style>\n        #container {\n            height: 250px;\n            overflow: auto;\n        }\n        #scroll-div {\n            margin: 500px;\n            height: 800px;\n            background-color: pink;\n        }\n    </style>\n\n    <body>\n        <h1>Javascript scrollIntoView</h1>\n\n        <button onclick=\"myFunction()\">요소로 스크롤하려면 클릭</button>\n\n        <div id=\"container\">\n            <div id=\"scroll-div\">\n                <p>텍스트1</p>\n                <p>텍스트2</p>\n                <p>텍스트3</p>\n            </div>\n        </div>\n\n        <script>\n            function myFunction() {\n                const element = document.getElementById('scroll-div');\n                element.scrollIntoView();\n            }\n        </script>\n    </body>\n</html>\n\n# 2. scrollIntoView() 수직으로\n\n<div class=\"content-ad\"></div>\n\n아래 코드는 요소를 수직으로 화면 안에 스크롤합니다.\n\n<!DOCTYPE html>\n<html>\n    <style>\n        #scroll-div {\n            margin-top: 100px;\n            padding-right: 100%;\n            height: 800px;\n            background-color: pink;\n            overflow: auto;\n        }\n    </style>\n\n    <body>\n        <h1>Javascript scrollIntoView</h1>\n\n        <button onclick=\"myFunction()\">요소를 스크롤하려면 클릭하세요</button>\n\n        <div id=\"scroll-div\">텍스트</div>\n\n        <script>\n            function myFunction() {\n                const element = document.getElementById('scroll-div');\n                element.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'end',\n                    inline: 'nearest',\n                });\n            }\n        </script>\n    </body>\n</html>\n\n# 3 .scrollIntoView() 수평 방향\n\n이것은 요소를 수평으로 화면 안에 스크롤합니다.\n\n<div class=\"content-ad\"></div>\n\n<!DOCTYPE html>\n<html>\n    <style>\n        #scroll-div {\n            margin-left: 100%;\n            padding-right: 100%;\n            height: 800px;\n            background-color: pink;\n            overflow: auto;\n        }\n    </style>\n\n    <body>\n        <h1>Javascript scrollIntoView</h1>\n\n        <button onclick=\"myFunction()\">Click to scroll the element</button>\n\n        <div id=\"scroll-div\">Text</div>\n\n        <script>\n            function myFunction() {\n                const element = document.getElementById('scroll-div');\n                element.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'nearest',\n                    inline: 'start',\n                });\n            }\n        </script>\n    </body>\n</html>\r\n\n참고: scrollIntoView 메서드는 요소의 CSS에 많이 의존합니다. 요소에 대한 스크롤 간격에 대한 유효한 CSS를 제공했을 경우에만 예상대로 작동합니다.\n\n이 글을 읽어주셔서 감사합니다. 이 글이 요소 스크롤에 도움이 되기를 바랍니다.","ogImage":{"url":"/assets/img/2024-06-22-JavascriptscrollIntoViewmethod_0.png"},"coverImage":"/assets/img/2024-06-22-JavascriptscrollIntoViewmethod_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-22-JavascriptscrollIntoViewmethod_0.png\" alt=\"scrollIntoView method\"></p>\n<p>scrollIntoView는 요소를 뷰포트 안으로 부드럽게 스크롤할 수 있는 자바스크립트 메소드입니다. 이 메소드는 이미 보이는 뷰포트에 요소가 없다면 요소를 보이게 만듭니다. 사용자가 어떤 작업을 수행하거나 애니메이션 효과로 요소를 보여줄 때 유용합니다.</p>\n<p>scrollIntoView 메소드는 문서 객체 모델(DOM)의 Element 인터페이스의 일부입니다.</p>\n<p>element.scrollIntoView();\nelement.scrollIntoView([scrollIntoViewOptions]);</p>\n<p>scrollIntoView의 문법에는 2 가지 유형이 있습니다.</p>\n<p>이 메소드는 기본 옵션으로 요소를 보이도록 스크롤하는 데 사용됩니다.</p>\n<p>이는 요소가 이미 보이지 않은 경우 요소가 포함되어 있는 요소의 맨 위나 뷰포트로 스크롤됩니다.</p>\n<p>scrollIntoViewOptions는 뷰포트에서 요소를 스크롤하는 여러 옵션을 지정하는 선택적 객체 속성입니다.</p>\n<p>다음과 같은 속성이 있습니다.</p>\n<p>이 속성은 아래 유형을 통해 스크롤의 동작을 정의하는 데 사용됩니다.</p>\n<p>가능한 값은</p>\n<ul>\n<li>auto(기본값): 스크롤 동작에 따라 요소를 스크롤합니다.</li>\n<li>smooth: 부드럽고 애니메이션 효과로 요소를 스크롤합니다.</li>\n<li>instant: 즉시 요소를 스크롤하여 단일 점프와 동일합니다.</li>\n</ul>\n<p>이 속성은 가시 영역 내 요소의 수직 정렬을 정의하는 데 사용됩니다.</p>\n<p>가능한 값은</p>\n<ul>\n<li>start(기본): 요소를 시작 위치에 스크롤합니다.</li>\n<li>center: 요소를 중앙에 스크롤합니다.</li>\n<li>end: 요소를 끝에 스크롤합니다.</li>\n<li>nearest: 수직으로 가장 가까운 가장자리로 스크롤합니다.</li>\n</ul>\n<p>이 속성은 가시 영역 내 요소의 수평 정렬을 정의하는 데 사용됩니다.</p>\n<p>다음은 가능한 값들입니다</p>\n<ul>\n<li>start(기본): 요소를 시작 위치에 스크롤합니다.</li>\n<li>center: 요소를 중앙에 스크롤합니다.</li>\n<li>end: 요소를 끝에 스크롤합니다.</li>\n<li>nearest: 수평으로 가장 가까운 가장자리로 스크롤합니다.</li>\n</ul>\n<h2>예시</h2>\n<p>여기에 scrollIntoView의 다양한 속성 조합에 따라 생성된 3가지 예시가 있습니다.</p>\n<h1>1. scrollIntoView() 기본</h1>\n<p>이것은 요소를 보이는 뷰포인트로 스크롤합니다.</p>\n<pre><code>&#x3C;body>\n    &#x3C;h1>Javascript scrollIntoView&#x3C;/h1>\n\n    &#x3C;button onclick=\"myFunction()\">요소로 스크롤하려면 클릭&#x3C;/button>\n\n    &#x3C;div id=\"container\">\n        &#x3C;div id=\"scroll-div\">\n            &#x3C;p>텍스트1&#x3C;/p>\n            &#x3C;p>텍스트2&#x3C;/p>\n            &#x3C;p>텍스트3&#x3C;/p>\n        &#x3C;/div>\n    &#x3C;/div>\n\n    &#x3C;script>\n        function myFunction() {\n            const element = document.getElementById('scroll-div');\n            element.scrollIntoView();\n        }\n    &#x3C;/script>\n&#x3C;/body>\n</code></pre>\n<h1>2. scrollIntoView() 수직으로</h1>\n<p>아래 코드는 요소를 수직으로 화면 안에 스크롤합니다.</p>\n<pre><code>&#x3C;body>\n    &#x3C;h1>Javascript scrollIntoView&#x3C;/h1>\n\n    &#x3C;button onclick=\"myFunction()\">요소를 스크롤하려면 클릭하세요&#x3C;/button>\n\n    &#x3C;div id=\"scroll-div\">텍스트&#x3C;/div>\n\n    &#x3C;script>\n        function myFunction() {\n            const element = document.getElementById('scroll-div');\n            element.scrollIntoView({\n                behavior: 'smooth',\n                block: 'end',\n                inline: 'nearest',\n            });\n        }\n    &#x3C;/script>\n&#x3C;/body>\n</code></pre>\n<h1>3 .scrollIntoView() 수평 방향</h1>\n<p>이것은 요소를 수평으로 화면 안에 스크롤합니다.</p>\n<pre><code>&#x3C;body>\n    &#x3C;h1>Javascript scrollIntoView&#x3C;/h1>\n\n    &#x3C;button onclick=\"myFunction()\">Click to scroll the element&#x3C;/button>\n\n    &#x3C;div id=\"scroll-div\">Text&#x3C;/div>\n\n    &#x3C;script>\n        function myFunction() {\n            const element = document.getElementById('scroll-div');\n            element.scrollIntoView({\n                behavior: 'smooth',\n                block: 'nearest',\n                inline: 'start',\n            });\n        }\n    &#x3C;/script>\n&#x3C;/body>\n</code></pre>\n<p>참고: scrollIntoView 메서드는 요소의 CSS에 많이 의존합니다. 요소에 대한 스크롤 간격에 대한 유효한 CSS를 제공했을 경우에만 예상대로 작동합니다.</p>\n<p>이 글을 읽어주셔서 감사합니다. 이 글이 요소 스크롤에 도움이 되기를 바랍니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}