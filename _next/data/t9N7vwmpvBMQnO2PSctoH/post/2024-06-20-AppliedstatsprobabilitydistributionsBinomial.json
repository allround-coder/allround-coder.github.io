{"pageProps":{"post":{"title":"응용 통계 확률 분포 - 이항분포","description":"","date":"2024-06-20 02:13","slug":"2024-06-20-AppliedstatsprobabilitydistributionsBinomial","content":"\n\n<img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_0.png\" />\n\n통계의 하나의 목표는 주어진 모집단의 어떤 변수의 분포에 대한 추론(또는 결론)을 샘플이라고 하는 그 일부분의 데이터를 바탕으로 내리는 것입니다.\n\n샘플 데이터와 모집단 간의 링크는 확률적 모델에 의존하는데, 즉, 모집단의 (알려지지 않은) 분포를 나타내는 모델에 의해 달려 있습니다.\n\n이 절차를 통계 추론이라고 합니다.\n\n<div class=\"content-ad\"></div>\n\n만약 모집단에 대해 정의된 변수 X의 확률 분포가 특정 확률 모델에 의해 설명될 수 있다고 가정한다면, 우리의 문제는 해당 모델에 의해 표현된 특정 확률 분포의 매개변수를 추정하는 것으로 간소화됩니다. 이항 분포의 경우, 이러한 매개변수는 다음과 같습니다:\n\n- n = 시도의 횟수.\n- p = 각 시도의 성공 확률.\n\n이제 이항 분포를 소개했으니, 조금 더 깊이 파보겠나요? 이 이론적 소개 이후, 실제 응용 사례가 나오면 모든 것이 명확해지고 재미있어질 것입니다!\n\n# 이항 분포: 이론\n\n<div class=\"content-ad\"></div>\n\n이항 분포의 특정 수학 함수를 사용하면 두 가지 결과가 있는 어떤 실생활 이벤트의 결과를 예측할 수 있습니다.\n\n표기법: B(n, p) → n = 시도 횟수; p = 각 시도에서 성공할 확률.\n\n예: X ~ B(10, 0.6) → \"변수 X는 10번의 시도와 각각의 시도에서 성공 확률이 0.6인 이항 분포를 따릅니다.\"\n\n![이항분포 이미지](/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_1.png)\n\n<div class=\"content-ad\"></div>\n\n더 정확한 예측을 위해 기대값과 표준편차를 계산할 수 있습니다. 이 경우:\n\n- E(X) = n . p\n- σ² = E(X²) — E(X)² = n . p . (1 — p)\n\n변수 X가 이항 확률 변수가 되려면:\n\n- 각 시행이 독립되어야 합니다.\n- 각 시행은 \"성공\" 또는 \"실패\"로 표현할 수 있어야 합니다.\n- 고정된 횟수의 시행이 있어야 합니다.\n- 각 시행에서의 성공 확률이 일정해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n# 이항 분포: 실습\n\n## 예시 1\n\n가게에서 매주 주문의 10%가 반품된다고 가정해 봅시다. 매주 3개 이상의 반품이 발생할 확률이 높다면, 임시 보조 직원을 고용해야 합니다. 이번 주에 가게에서 50건의 매출이 있었다고 가정해 봅시다. 임시 보조 직원을 고용해야할 확률은 어떻게 되나요?\n\nX = 반품 수량.\n\n<div class=\"content-ad\"></div>\n\nn = 50번의 구매.\n\np = 환불 확률 (성공) = 10%.\n\nq (1-p) = 환불하지 않을 확률 (실패) = 1-10% = 90%.\n\n```js\nfrom scipy.stats import binom\n\n# p = 성공 확률\n# n = 시도 횟수\n# k = 성공 횟수\n\nn = 50\np = 0.1\nk = 2\n\nprint('2개 이하의 환불 누적 확률:', \n  binom.cdf(k, n, p)) # P(X=0) + P(X=1) + P(X=2)\nprint('정확히 2개의 환불이 일어날 확률:', \n  binom.pmf(k, n, p)) # P(X=3)\nprint('3개 이상의 환불이 일어날 확률:', \n  1 - binom.cdf(k, n, p)) # k를 0, 1, 2로 포함\nprint('3개 이상의 환불이 일어날 확률:', \n  binom.sf(k, n, p)) # 1 - cdf\n```\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_2.png)\n\n예시를 확장해서 X=1, X=2, X=3, …, X=50 성공 시 확률을 정확히 계산해보자. 이를 위해 단순히 확률질량함수를 사용하면 된다. 왜냐하면 이는 이산형 변수이기 때문이다.\n\n```js\nimport plotly.graph_objects as go\nfrom scipy.stats import binom\n\nn = 50\np = 0.1\nk = np.arange(0, n+1)\npmf = binom.pmf(k, n, p) # 확률 질량 함수\n\nfig = go.Figure(data=[go.Bar(x=k, y=pmf)])\nfig.update_layout(title=\"이항 분포 (n=50, p=0.1)\",\n                  xaxis_title=\"성공 횟수\",\n                  yaxis_title=\"확률\",\n                  font=dict(size=18),\n                  width=700,\n                  title_x=0.5,\n                  height=400,\n                  template=\"simple_white\")\nfig.show()\n```\n\n이 코드는 기사 초반에 보았던 그래프를 나타낼 것입니다. 빠르고 매우 유용하죠?\n\n\n<div class=\"content-ad\"></div>\n\n## 예시 2\n\n은행 거래에서 사기 발생 확률.\n\n저는 캐글에서 데이터셋을 수집했는데, 이 데이터셋은 한 은행의 거래 내역을 포함하고 있습니다. 그 중 하나의 변수는 해당 거래가 사기인지 아닌지를 나타냅니다. 이 변수의 빈도 분포를 확인해보겠습니다.\n\n![transactions](/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_3.png)\n\n<div class=\"content-ad\"></div>\n\n거래에 대한 데이터를 모두 가정한다면, 사기 및 비 사기의 각각의 발생 확률은 다음과 같습니다:\n\n```js\n비 사기의 확률 = (value_counts[0] / len(df_fraud))\n사기의 확률 = (value_counts[1] / len(df_fraud))\n\nprint('사기가 아닐 확률은:', 비 사기의 확률)\nprint('사기 확률은:', 사기의 확률)\n```\n\n<img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_4.png\" />\n\n이는 각 거래에서 사기를 저지를 확률입니다. 불균형은 예상대로 발생하며, 우리는 훨씬 더 많은 합법적인 거래를 가지고 있습니다. 중요한 점은 은행에서 많은 일일 거래가 있고 분명 그 중 하나는 사기일 것이라는 것입니다. 이 은행의 평균 일일 거래를 확인해봅시다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_5.png\" />\n\n```js\nmean_transactions_per_day = transactions_per_day.mean()\nprint(\"평균 거래 횟수(하루):\", \n  round(mean_transactions_per_day, 0))\n```\n\n<img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_6.png\" />\n\n이제 가장 중요한 부분으로 들어가 봅시다. 이제 비즈니스 문제를 활용하여 궁금증에 답할 수 있습니다. 예를 들어, 50번의 시도에서 1, 2, 3, ... 50건의 사기 사례를 발견할 확률은 얼마인가요?\n\n<div class=\"content-ad\"></div>\n\n```python\n## 파이썬을 사용하여 확률 분포 그래프 그리기\r\n\r\nimport plotly.graph_objects as go\r\nfrom scipy.stats import binom\r\n\r\nn = 50\r\np = fraud_probability # 0.05\r\nk = np.arange(0, n + 1)\r\npmf = binom.pmf(k, n, p)\r\n\r\nfig = go.Figure(data=[go.Bar(x=k, y=pmf)])\r\nfig.update_layout(title=f\"이항 분포 (n={n}, p={fraud_probability})\",\r\n                  xaxis_title=\"성공 횟수\",\r\n                  yaxis_title=\"확률\",\r\n                  font=dict(size=18),\r\n                  width=700,\r\n                  title_x=0.5,\r\n                  height=400,\r\n                  template=\"simple_white\")\r\nfig.show()\r\n```\r\n\r\n<img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_7.png\" />\r\n\r\n그리고 한 가지 더 예시를 드리면:\r\n\r\n```python\r\nprint(f'3333번 시도 중 200번 이상 사기가 발생할 확률은:', \r\n              binom.sf(200, 3333, 0.05))\r\n```\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_8.png\" />\n\n이곳에서 가능한 한 이론에서 벗어나서 이항 확률 분포의 이론을 실제로 어떻게 활용하는지 보여 주었습니다. 이제 당신이 일상생활에서 이를 식별하고 데이터가 전달하는 내용에 기초하여 올바르게 적용하여 문제를 해결하고 올바른 결정을 내릴 수 있도록 해야 합니다!\n\n# 크레딧\n\nWheelan, Charles. Naked Statistics: Stripping the Dread from the Data. W.W. Norton & Company, 2013.\n\n<div class=\"content-ad\"></div>\n\nSpiegelhalter, David. The Art of Statistics: How to Learn from Data. Basic Books, 2019.","ogImage":{"url":"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_0.png"},"coverImage":"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_0.png","tag":["Tech"],"readingTime":6},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>통계의 하나의 목표는 주어진 모집단의 어떤 변수의 분포에 대한 추론(또는 결론)을 샘플이라고 하는 그 일부분의 데이터를 바탕으로 내리는 것입니다.</p>\n<p>샘플 데이터와 모집단 간의 링크는 확률적 모델에 의존하는데, 즉, 모집단의 (알려지지 않은) 분포를 나타내는 모델에 의해 달려 있습니다.</p>\n<p>이 절차를 통계 추론이라고 합니다.</p>\n<p>만약 모집단에 대해 정의된 변수 X의 확률 분포가 특정 확률 모델에 의해 설명될 수 있다고 가정한다면, 우리의 문제는 해당 모델에 의해 표현된 특정 확률 분포의 매개변수를 추정하는 것으로 간소화됩니다. 이항 분포의 경우, 이러한 매개변수는 다음과 같습니다:</p>\n<ul>\n<li>n = 시도의 횟수.</li>\n<li>p = 각 시도의 성공 확률.</li>\n</ul>\n<p>이제 이항 분포를 소개했으니, 조금 더 깊이 파보겠나요? 이 이론적 소개 이후, 실제 응용 사례가 나오면 모든 것이 명확해지고 재미있어질 것입니다!</p>\n<h1>이항 분포: 이론</h1>\n<p>이항 분포의 특정 수학 함수를 사용하면 두 가지 결과가 있는 어떤 실생활 이벤트의 결과를 예측할 수 있습니다.</p>\n<p>표기법: B(n, p) → n = 시도 횟수; p = 각 시도에서 성공할 확률.</p>\n<p>예: X ~ B(10, 0.6) → \"변수 X는 10번의 시도와 각각의 시도에서 성공 확률이 0.6인 이항 분포를 따릅니다.\"</p>\n<p><img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_1.png\" alt=\"이항분포 이미지\"></p>\n<p>더 정확한 예측을 위해 기대값과 표준편차를 계산할 수 있습니다. 이 경우:</p>\n<ul>\n<li>E(X) = n . p</li>\n<li>σ² = E(X²) — E(X)² = n . p . (1 — p)</li>\n</ul>\n<p>변수 X가 이항 확률 변수가 되려면:</p>\n<ul>\n<li>각 시행이 독립되어야 합니다.</li>\n<li>각 시행은 \"성공\" 또는 \"실패\"로 표현할 수 있어야 합니다.</li>\n<li>고정된 횟수의 시행이 있어야 합니다.</li>\n<li>각 시행에서의 성공 확률이 일정해야 합니다.</li>\n</ul>\n<h1>이항 분포: 실습</h1>\n<h2>예시 1</h2>\n<p>가게에서 매주 주문의 10%가 반품된다고 가정해 봅시다. 매주 3개 이상의 반품이 발생할 확률이 높다면, 임시 보조 직원을 고용해야 합니다. 이번 주에 가게에서 50건의 매출이 있었다고 가정해 봅시다. 임시 보조 직원을 고용해야할 확률은 어떻게 되나요?</p>\n<p>X = 반품 수량.</p>\n<p>n = 50번의 구매.</p>\n<p>p = 환불 확률 (성공) = 10%.</p>\n<p>q (1-p) = 환불하지 않을 확률 (실패) = 1-10% = 90%.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">from</span> scipy.<span class=\"hljs-property\">stats</span> <span class=\"hljs-keyword\">import</span> binom\n\n# p = 성공 확률\n# n = 시도 횟수\n# k = 성공 횟수\n\nn = <span class=\"hljs-number\">50</span>\np = <span class=\"hljs-number\">0.1</span>\nk = <span class=\"hljs-number\">2</span>\n\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'2개 이하의 환불 누적 확률:'</span>, \n  binom.<span class=\"hljs-title function_\">cdf</span>(k, n, p)) # <span class=\"hljs-title function_\">P</span>(X=<span class=\"hljs-number\">0</span>) + <span class=\"hljs-title function_\">P</span>(X=<span class=\"hljs-number\">1</span>) + <span class=\"hljs-title function_\">P</span>(X=<span class=\"hljs-number\">2</span>)\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'정확히 2개의 환불이 일어날 확률:'</span>, \n  binom.<span class=\"hljs-title function_\">pmf</span>(k, n, p)) # <span class=\"hljs-title function_\">P</span>(X=<span class=\"hljs-number\">3</span>)\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'3개 이상의 환불이 일어날 확률:'</span>, \n  <span class=\"hljs-number\">1</span> - binom.<span class=\"hljs-title function_\">cdf</span>(k, n, p)) # k를 <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>로 포함\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'3개 이상의 환불이 일어날 확률:'</span>, \n  binom.<span class=\"hljs-title function_\">sf</span>(k, n, p)) # <span class=\"hljs-number\">1</span> - cdf\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_2.png\" alt=\"image\"></p>\n<p>예시를 확장해서 X=1, X=2, X=3, …, X=50 성공 시 확률을 정확히 계산해보자. 이를 위해 단순히 확률질량함수를 사용하면 된다. 왜냐하면 이는 이산형 변수이기 때문이다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> plotly.<span class=\"hljs-property\">graph_objects</span> <span class=\"hljs-keyword\">as</span> go\n<span class=\"hljs-keyword\">from</span> scipy.<span class=\"hljs-property\">stats</span> <span class=\"hljs-keyword\">import</span> binom\n\nn = <span class=\"hljs-number\">50</span>\np = <span class=\"hljs-number\">0.1</span>\nk = np.<span class=\"hljs-title function_\">arange</span>(<span class=\"hljs-number\">0</span>, n+<span class=\"hljs-number\">1</span>)\npmf = binom.<span class=\"hljs-title function_\">pmf</span>(k, n, p) # 확률 질량 함수\n\nfig = go.<span class=\"hljs-title class_\">Figure</span>(data=[go.<span class=\"hljs-title class_\">Bar</span>(x=k, y=pmf)])\nfig.<span class=\"hljs-title function_\">update_layout</span>(title=<span class=\"hljs-string\">\"이항 분포 (n=50, p=0.1)\"</span>,\n                  xaxis_title=<span class=\"hljs-string\">\"성공 횟수\"</span>,\n                  yaxis_title=<span class=\"hljs-string\">\"확률\"</span>,\n                  font=<span class=\"hljs-title function_\">dict</span>(size=<span class=\"hljs-number\">18</span>),\n                  width=<span class=\"hljs-number\">700</span>,\n                  title_x=<span class=\"hljs-number\">0.5</span>,\n                  height=<span class=\"hljs-number\">400</span>,\n                  template=<span class=\"hljs-string\">\"simple_white\"</span>)\nfig.<span class=\"hljs-title function_\">show</span>()\n</code></pre>\n<p>이 코드는 기사 초반에 보았던 그래프를 나타낼 것입니다. 빠르고 매우 유용하죠?</p>\n<h2>예시 2</h2>\n<p>은행 거래에서 사기 발생 확률.</p>\n<p>저는 캐글에서 데이터셋을 수집했는데, 이 데이터셋은 한 은행의 거래 내역을 포함하고 있습니다. 그 중 하나의 변수는 해당 거래가 사기인지 아닌지를 나타냅니다. 이 변수의 빈도 분포를 확인해보겠습니다.</p>\n<p><img src=\"/assets/img/2024-06-20-AppliedstatsprobabilitydistributionsBinomial_3.png\" alt=\"transactions\"></p>\n<p>거래에 대한 데이터를 모두 가정한다면, 사기 및 비 사기의 각각의 발생 확률은 다음과 같습니다:</p>\n<pre><code class=\"hljs language-js\">비 사기의 확률 = (value_counts[<span class=\"hljs-number\">0</span>] / <span class=\"hljs-title function_\">len</span>(df_fraud))\n사기의 확률 = (value_counts[<span class=\"hljs-number\">1</span>] / <span class=\"hljs-title function_\">len</span>(df_fraud))\n\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'사기가 아닐 확률은:'</span>, 비 사기의 확률)\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">'사기 확률은:'</span>, 사기의 확률)\n</code></pre>\n<p>이는 각 거래에서 사기를 저지를 확률입니다. 불균형은 예상대로 발생하며, 우리는 훨씬 더 많은 합법적인 거래를 가지고 있습니다. 중요한 점은 은행에서 많은 일일 거래가 있고 분명 그 중 하나는 사기일 것이라는 것입니다. 이 은행의 평균 일일 거래를 확인해봅시다.</p>\n<pre><code class=\"hljs language-js\">mean_transactions_per_day = transactions_per_day.<span class=\"hljs-title function_\">mean</span>()\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"평균 거래 횟수(하루):\"</span>, \n  <span class=\"hljs-title function_\">round</span>(mean_transactions_per_day, <span class=\"hljs-number\">0</span>))\n</code></pre>\n<p>이제 가장 중요한 부분으로 들어가 봅시다. 이제 비즈니스 문제를 활용하여 궁금증에 답할 수 있습니다. 예를 들어, 50번의 시도에서 1, 2, 3, ... 50건의 사기 사례를 발견할 확률은 얼마인가요?</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-comment\">## 파이썬을 사용하여 확률 분포 그래프 그리기</span>\r\n\r\n<span class=\"hljs-keyword\">import</span> plotly.graph_objects <span class=\"hljs-keyword\">as</span> go\r\n<span class=\"hljs-keyword\">from</span> scipy.stats <span class=\"hljs-keyword\">import</span> binom\r\n\r\nn = <span class=\"hljs-number\">50</span>\r\np = fraud_probability <span class=\"hljs-comment\"># 0.05</span>\r\nk = np.arange(<span class=\"hljs-number\">0</span>, n + <span class=\"hljs-number\">1</span>)\r\npmf = binom.pmf(k, n, p)\r\n\r\nfig = go.Figure(data=[go.Bar(x=k, y=pmf)])\r\nfig.update_layout(title=<span class=\"hljs-string\">f\"이항 분포 (n=<span class=\"hljs-subst\">{n}</span>, p=<span class=\"hljs-subst\">{fraud_probability}</span>)\"</span>,\r\n                  xaxis_title=<span class=\"hljs-string\">\"성공 횟수\"</span>,\r\n                  yaxis_title=<span class=\"hljs-string\">\"확률\"</span>,\r\n                  font=<span class=\"hljs-built_in\">dict</span>(size=<span class=\"hljs-number\">18</span>),\r\n                  width=<span class=\"hljs-number\">700</span>,\r\n                  title_x=<span class=\"hljs-number\">0.5</span>,\r\n                  height=<span class=\"hljs-number\">400</span>,\r\n                  template=<span class=\"hljs-string\">\"simple_white\"</span>)\r\nfig.show()\n</code></pre>\n<p>그리고 한 가지 더 예시를 드리면:</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f'3333번 시도 중 200번 이상 사기가 발생할 확률은:'</span>, \r\n              binom.sf(<span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">3333</span>, <span class=\"hljs-number\">0.05</span>))\n</code></pre>\n<p>이곳에서 가능한 한 이론에서 벗어나서 이항 확률 분포의 이론을 실제로 어떻게 활용하는지 보여 주었습니다. 이제 당신이 일상생활에서 이를 식별하고 데이터가 전달하는 내용에 기초하여 올바르게 적용하여 문제를 해결하고 올바른 결정을 내릴 수 있도록 해야 합니다!</p>\n<h1>크레딧</h1>\n<p>Wheelan, Charles. Naked Statistics: Stripping the Dread from the Data. W.W. Norton &#x26; Company, 2013.</p>\n<p>Spiegelhalter, David. The Art of Statistics: How to Learn from Data. Basic Books, 2019.</p>\n</body>\n</html>\n"},"__N_SSG":true}