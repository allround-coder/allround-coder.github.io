{"pageProps":{"post":{"title":"ES 모듈 범위에서 __dirname이 정의되지 않았습니다 오류를 해결하는 방법","description":"","date":"2024-06-20 01:34","slug":"2024-06-20-Howtofix__dirnameisnotdefinedinESmodulescope","content":"\n\n## 상황\n\n난 예전 프로젝트를 CommonJS에서 ES 모듈로 이주하려고 할 때 이 오류를 만났어. 그리고 진입 파일이 전역 변수인 __dirname을 사용해. 이런 에러 메시지를 봤어:\n\nNode 스크립트에서 __dirname을 사용하면 현재 JavaScript 파일을 포함하는 디렉토리 경로를 받을 수 있어. 많은 Node.js 애플리케이션들이 이 전역 변수를 사용해.\n\nCommonJS 모듈에서 사용할 때(당신의 애플리케이션의 package.json 파일에 \"type\": \"module\"이 정의되지 않았을 때), __dirname은 문제없이 작동하겠지만, ES 모듈에서 사용하면 \"ES 모듈 스코프에서 __dirname이 정의되지 않았습니다\"라는 에러가 나타나.\n\n<div class=\"content-ad\"></div>\n\n## 해결책\n\n저는 ES 모듈에 관한 Node.js 문서를 살펴봤어요. 특히 import.meta 객체에 대해요. 또한, 필요한 것은 현재 스크립트/모듈이 포함된 디렉토리의 이름이니, Node.js의 path 모듈을 활용할 수 있어요. 또한 url 모듈에는 파일의 완전히 해결된 경로를 반환해주는 fileURLToPath 함수가 있어요.\n\n그래서, path 모듈과 url 모듈에서 fileURLToPath 함수를 함께 import 해야 해요:\n\n```js\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n```\n\n<div class=\"content-ad\"></div>\n\nCommonJS의 __dirname 기능을 복제하려면 다음을 수행하기만 하면 됩니다:\n\n```js\nconst __filename = fileURLToPath(import.meta.url); // 파일까지의 경로를 가져옵니다\nconst __dirname = path.dirname(__filename); // 디렉토리 이름 가져옵니다\n```\n\n이제 __dirname 변수가 스크립트에서 원하는 대로 작동할 것입니다. 스크립트에서 이를 확인하려면 정의 바로 다음에 로그를 남기면 됩니다:\n\n```js\nconsole.log(__dirname);\n```\n\n<div class=\"content-ad\"></div>\n\n여기 있어요! 도움이 되었으면 좋겣습니다.\n\n연결하고 싶다면, X 또는 LinkedIn에서 연락할 수 있어요.\n\n건배하며, 계속해서 해킹해보세요!!! 🥂","ogImage":{"url":"/assets/img/2024-06-20-Howtofix__dirnameisnotdefinedinESmodulescope_0.png"},"coverImage":"/assets/img/2024-06-20-Howtofix__dirnameisnotdefinedinESmodulescope_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>상황</h2>\n<p>난 예전 프로젝트를 CommonJS에서 ES 모듈로 이주하려고 할 때 이 오류를 만났어. 그리고 진입 파일이 전역 변수인 __dirname을 사용해. 이런 에러 메시지를 봤어:</p>\n<p>Node 스크립트에서 __dirname을 사용하면 현재 JavaScript 파일을 포함하는 디렉토리 경로를 받을 수 있어. 많은 Node.js 애플리케이션들이 이 전역 변수를 사용해.</p>\n<p>CommonJS 모듈에서 사용할 때(당신의 애플리케이션의 package.json 파일에 \"type\": \"module\"이 정의되지 않았을 때), __dirname은 문제없이 작동하겠지만, ES 모듈에서 사용하면 \"ES 모듈 스코프에서 __dirname이 정의되지 않았습니다\"라는 에러가 나타나.</p>\n<h2>해결책</h2>\n<p>저는 ES 모듈에 관한 Node.js 문서를 살펴봤어요. 특히 import.meta 객체에 대해요. 또한, 필요한 것은 현재 스크립트/모듈이 포함된 디렉토리의 이름이니, Node.js의 path 모듈을 활용할 수 있어요. 또한 url 모듈에는 파일의 완전히 해결된 경로를 반환해주는 fileURLToPath 함수가 있어요.</p>\n<p>그래서, path 모듈과 url 모듈에서 fileURLToPath 함수를 함께 import 해야 해요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'path'</span>;\n<span class=\"hljs-keyword\">import</span> { fileURLToPath } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'url'</span>;\n</code></pre>\n<p>CommonJS의 __dirname 기능을 복제하려면 다음을 수행하기만 하면 됩니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> __filename = <span class=\"hljs-title function_\">fileURLToPath</span>(<span class=\"hljs-keyword\">import</span>.<span class=\"hljs-property\">meta</span>.<span class=\"hljs-property\">url</span>); <span class=\"hljs-comment\">// 파일까지의 경로를 가져옵니다</span>\n<span class=\"hljs-keyword\">const</span> __dirname = path.<span class=\"hljs-title function_\">dirname</span>(__filename); <span class=\"hljs-comment\">// 디렉토리 이름 가져옵니다</span>\n</code></pre>\n<p>이제 __dirname 변수가 스크립트에서 원하는 대로 작동할 것입니다. 스크립트에서 이를 확인하려면 정의 바로 다음에 로그를 남기면 됩니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(__dirname);\n</code></pre>\n<p>여기 있어요! 도움이 되었으면 좋겣습니다.</p>\n<p>연결하고 싶다면, X 또는 LinkedIn에서 연락할 수 있어요.</p>\n<p>건배하며, 계속해서 해킹해보세요!!! 🥂</p>\n</body>\n</html>\n"},"__N_SSG":true}