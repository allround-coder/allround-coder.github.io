{"pageProps":{"post":{"title":"React 앱을 GitHub 저장소에 연결하기","description":"","date":"2024-05-12 21:52","slug":"2024-05-12-ConnectingaReactApptoaGitHubRepository","content":"\n\n![이미지](/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_0.png)\n\n이\n튜토리얼에서는 React 애플리케이션을 GitHub 저장소에 연결하는 방법을 배울 것입니다. 이 연결은 프로젝트에서 변경 사항을 추적하고 다른 사람들과 효과적으로 협업하는 데 중요합니다.\n\n다음은 시작하는 데 도움이 될 수 있는 단계별 가이드입니다:\n\n## 1. React 앱 만들기:\n\n\n\n비주얼 스튜디오 코드 터미널에서 다음 명령을 사용하여 React 애플리케이션을 시작하세요:\n\n```js\nnpx create-react-app my-react-app\n```\n\n앱의 디렉토리로 이동하세요:\n\n```js\ncd my-first-app\n```\n\n\n\n아래는 표의 내용입니다.\n\n| Order Number | Product Name | Quantity |\n|--------------|--------------|----------|\n| 1            | T-shirt      | 2        |\n| 2            | Jeans        | 1        |\n| 3            | Shoes        | 2        |\n\n\n\n한 번 시작하면 브라우저에서 앱이 작동하는 것을 볼 수 있을 거에요.\n\n![이미지](/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_2.png)\n\n### 3. GitHub 저장소 설정:\n\n선택한 이름으로 새 GitHub 저장소를 만드세요. 다른 설정은 기본값으로 둬두 돼요.\n\n\n\n\n![Connecting a React App to a GitHub Repository](/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_3.png)\n\nOnce created, you'll land on a new page.\n\n![Connecting a React App to a GitHub Repository](/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_4.png)\n\nRemember to copy the repository link.\n\n\n\n\n<img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_5.png\" />\n\n## 4. GitHub 저장소에 React 앱 연결하기:\n\nReact 애플리케이션의 디렉토리에서 새 터미널 탭을 열고 (필요시) 다음을 사용하여 앱 디렉토리로 이동하세요:\n\n```js\ncd my-first-app\n```\n\n\n\n기토 저장소를 초기화하세요\n\n```js\ngit init\n```\n\n아래 명령어를 사용하여 앱을 GitHub 저장소에 연결하세요. `<username>`을 여러분의 GitHub 사용자 이름으로 바꿔주세요:\n\n```js\ngit remote add origin https://github.com/<username>/my-first-app.git\n```\n\n\n\n내 경우에는\n\n```js\ngit remote add origin https://github.com/Brianhulela/my-first-app.git\n```\n\n![이미지](/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_6.png)\n\n명령이 실행을 완료하면 다음 명령으로 연결을 확인합니다:\n\n\n\n```js\ngit remote -v\n```\n\n저장소 이름을 확인할 수 있어야 합니다. 저의 경우에는 출력이 다음과 같았습니다:\n\n<img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_7.png\" />\n\n## 5. 변경 내용 준비 및 푸시:\n\n\n\n다음 명령을 실행하여 변경 내용을 커밋할 준비를 합니다:\n\n```js\ngit add .\ngit commit -m \"첫 번째 git 커밋\"\n```\n\n앱에 변경 사항이 없는 경우 커밋이 \"working tree clean\"을 반환할 수 있습니다.\n\n![이미지](/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_8.png)\n\n\n\n## 6. 저장소로 푸시하기:\n\n귀하의 앱을 GitHub 저장소로 푸시하려면 다음을 사용하십시오:\n\n```js\ngit push\n```\n\n\"upstream\" 브랜치에 관한 오류가 발생할 수 있습니다. 마스터 브랜치가 아직 업스트림으로 설정되지 않았기 때문입니다. 다음 단계에서 이를 수행하겠습니다.\n\n\n\n<img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_9.png\" />\n\n## 7. Upstream Branch 설정하기:\n\n다음 명령어를 사용하여 upstream branch를 설정하여 에러를 해결하세요:\n\n```js\ngit push --set-upstream origin master\n```\n\n\n\n<img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_10.png\" />\n\n## 7. GitHub에서 확인하기:\n\n마지막으로, React 애플리케이션이 성공적으로 푸시되었는지 확인하기 위해 GitHub 저장소를 확인하세요.\n\n<img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_11.png\" />\n\n\n\n이 단계를 따라하면 React 앱과 GitHub 저장소 간에 연결을 설정하여 효율적인 버전 관리와 협업이 가능해집니다.\n\n저장소: [https://github.com/Brianhulela/my-first-app](https://github.com/Brianhulela/my-first-app)","ogImage":{"url":"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_0.png"},"coverImage":"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_0.png\" alt=\"이미지\"></p>\n<p>이\n튜토리얼에서는 React 애플리케이션을 GitHub 저장소에 연결하는 방법을 배울 것입니다. 이 연결은 프로젝트에서 변경 사항을 추적하고 다른 사람들과 효과적으로 협업하는 데 중요합니다.</p>\n<p>다음은 시작하는 데 도움이 될 수 있는 단계별 가이드입니다:</p>\n<h2>1. React 앱 만들기:</h2>\n<p>비주얼 스튜디오 코드 터미널에서 다음 명령을 사용하여 React 애플리케이션을 시작하세요:</p>\n<pre><code class=\"hljs language-js\">npx create-react-app my-react-app\n</code></pre>\n<p>앱의 디렉토리로 이동하세요:</p>\n<pre><code class=\"hljs language-js\">cd my-first-app\n</code></pre>\n<p>아래는 표의 내용입니다.</p>\n<table>\n<thead>\n<tr>\n<th>Order Number</th>\n<th>Product Name</th>\n<th>Quantity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>T-shirt</td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Jeans</td>\n<td>1</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Shoes</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>한 번 시작하면 브라우저에서 앱이 작동하는 것을 볼 수 있을 거에요.</p>\n<p><img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_2.png\" alt=\"이미지\"></p>\n<h3>3. GitHub 저장소 설정:</h3>\n<p>선택한 이름으로 새 GitHub 저장소를 만드세요. 다른 설정은 기본값으로 둬두 돼요.</p>\n<p><img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_3.png\" alt=\"Connecting a React App to a GitHub Repository\"></p>\n<p>Once created, you'll land on a new page.</p>\n<p><img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_4.png\" alt=\"Connecting a React App to a GitHub Repository\"></p>\n<p>Remember to copy the repository link.</p>\n<h2>4. GitHub 저장소에 React 앱 연결하기:</h2>\n<p>React 애플리케이션의 디렉토리에서 새 터미널 탭을 열고 (필요시) 다음을 사용하여 앱 디렉토리로 이동하세요:</p>\n<pre><code class=\"hljs language-js\">cd my-first-app\n</code></pre>\n<p>기토 저장소를 초기화하세요</p>\n<pre><code class=\"hljs language-js\">git init\n</code></pre>\n<p>아래 명령어를 사용하여 앱을 GitHub 저장소에 연결하세요. <code>&#x3C;username></code>을 여러분의 GitHub 사용자 이름으로 바꿔주세요:</p>\n<pre><code class=\"hljs language-js\">git remote add origin <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/&#x3C;username>/my-first-app.git</span>\n</code></pre>\n<p>내 경우에는</p>\n<pre><code class=\"hljs language-js\">git remote add origin <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/Brianhulela/my-first-app.git</span>\n</code></pre>\n<p><img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_6.png\" alt=\"이미지\"></p>\n<p>명령이 실행을 완료하면 다음 명령으로 연결을 확인합니다:</p>\n<pre><code class=\"hljs language-js\">git remote -v\n</code></pre>\n<p>저장소 이름을 확인할 수 있어야 합니다. 저의 경우에는 출력이 다음과 같았습니다:</p>\n<h2>5. 변경 내용 준비 및 푸시:</h2>\n<p>다음 명령을 실행하여 변경 내용을 커밋할 준비를 합니다:</p>\n<pre><code class=\"hljs language-js\">git add .\ngit commit -m <span class=\"hljs-string\">\"첫 번째 git 커밋\"</span>\n</code></pre>\n<p>앱에 변경 사항이 없는 경우 커밋이 \"working tree clean\"을 반환할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-12-ConnectingaReactApptoaGitHubRepository_8.png\" alt=\"이미지\"></p>\n<h2>6. 저장소로 푸시하기:</h2>\n<p>귀하의 앱을 GitHub 저장소로 푸시하려면 다음을 사용하십시오:</p>\n<pre><code class=\"hljs language-js\">git push\n</code></pre>\n<p>\"upstream\" 브랜치에 관한 오류가 발생할 수 있습니다. 마스터 브랜치가 아직 업스트림으로 설정되지 않았기 때문입니다. 다음 단계에서 이를 수행하겠습니다.</p>\n<h2>7. Upstream Branch 설정하기:</h2>\n<p>다음 명령어를 사용하여 upstream branch를 설정하여 에러를 해결하세요:</p>\n<pre><code class=\"hljs language-js\">git push --set-upstream origin master\n</code></pre>\n<h2>7. GitHub에서 확인하기:</h2>\n<p>마지막으로, React 애플리케이션이 성공적으로 푸시되었는지 확인하기 위해 GitHub 저장소를 확인하세요.</p>\n<p>이 단계를 따라하면 React 앱과 GitHub 저장소 간에 연결을 설정하여 효율적인 버전 관리와 협업이 가능해집니다.</p>\n<p>저장소: <a href=\"https://github.com/Brianhulela/my-first-app\" rel=\"nofollow\" target=\"_blank\">https://github.com/Brianhulela/my-first-app</a></p>\n</body>\n</html>\n"},"__N_SSG":true}