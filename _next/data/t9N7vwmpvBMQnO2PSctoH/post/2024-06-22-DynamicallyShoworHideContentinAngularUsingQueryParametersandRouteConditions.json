{"pageProps":{"post":{"title":"Angular에서 쿼리 매개변수와 경로 조건을 사용해 동적 콘텐츠 표시 및 숨기기 방법","description":"","date":"2024-06-22 03:38","slug":"2024-06-22-DynamicallyShoworHideContentinAngularUsingQueryParametersandRouteConditions","content":"\n\n현대 웹 애플리케이션에서는 현재 경로나 쿼리 매개변수에 따라 동적 콘텐츠가 필요한 경우가 일반적입니다. 이 게시물에서는 Angular 애플리케이션에서 쿼리 매개변수 및 경로 조건을 사용하여 요소를 조건부로 표시하는 방법을 보여드리겠습니다. 홈 페이지에서는 검색 창이 표시되지만 프로필 페이지에서는 숨겨지는 실제 예제를 통해 안내해 드리겠습니다.\n\n# 단계 1: 라우트 정의\n\napp-routing.module.ts에서 라우트를 정의하세요:\n\n```js\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n```\n\n<div class=\"content-ad\"></div>\n\n# 단계 2: 컴포넌트 생성\n\n이제 HomeComponent와 ProfileComponent를 생성하세요.\n\nHomeComponent\n\n```js\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n```\n\n<div class=\"content-ad\"></div>\n\nProfileComponent\n\n```js\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n```\n\n# 내용을 동적으로 표시하거나 숨기기\n\n홈페이지에서는 검색 창을 표시하고 프로필 페이지에서는 숨기고 싶습니다. 이를 위해 Angular의 ActivatedRoute 및 Router 서비스를 사용하여 라우트 변경을 감지하고 조건에 따라 검색 창을 표시할 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# 단계 3: Navbar 컴포넌트 업데이트\n\nNavbarComponent를 경로 변경에 반응하도록 업데이트하세요.\n\n```js\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  showSearchBar: boolean = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.router.events.subscribe(() => {\n      this.showSearchBar = this.router.url !== '/profile';\n    });\n  }\n}\n```\n\n# 단계 4: Navbar 템플릿 업데이트\n\n<div class=\"content-ad\"></div>\n\n```js\n<nav>\n  <!-- other nav elements -->\n  <div *ngIf=\"showSearchBar\">\n    <input type=\"text\" placeholder=\"Search...\">\n  </div>\n</nav>\n```\n\n# 설명\n\n- 라우트 정의: 홈 및 프로필 페이지를 위한 라우트를 정의합니다.\n- 컴포넌트: HomeComponent 및 ProfileComponent를 위한 기본 컴포넌트가 생성되었습니다.\n- 네비게이션 바 컴포넌트:\n\n<div class=\"content-ad\"></div>\n\n- NavbarComponent는 Angular의 Router 서비스를 사용하여 라우트 변경을 구독합니다.\n- 현재 URL을 확인하여 검색 창을 표시하거나 숨길지 여부를 결정합니다.\n- URL이 /profile인 경우 showSearchBar를 false로 설정하여 검색 창을 숨깁니다. 그 외의 경우에는 true로 설정됩니다.","ogImage":{"url":"/assets/img/2024-06-22-DynamicallyShoworHideContentinAngularUsingQueryParametersandRouteConditions_0.png"},"coverImage":"/assets/img/2024-06-22-DynamicallyShoworHideContentinAngularUsingQueryParametersandRouteConditions_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>현대 웹 애플리케이션에서는 현재 경로나 쿼리 매개변수에 따라 동적 콘텐츠가 필요한 경우가 일반적입니다. 이 게시물에서는 Angular 애플리케이션에서 쿼리 매개변수 및 경로 조건을 사용하여 요소를 조건부로 표시하는 방법을 보여드리겠습니다. 홈 페이지에서는 검색 창이 표시되지만 프로필 페이지에서는 숨겨지는 실제 예제를 통해 안내해 드리겠습니다.</p>\n<h1>단계 1: 라우트 정의</h1>\n<p>app-routing.module.ts에서 라우트를 정의하세요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">NgModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">RouterModule</span>, <span class=\"hljs-title class_\">Routes</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/router'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">HomeComponent</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./home/home.component'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProfileComponent</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./profile/profile.component'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">NotFoundComponent</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./not-found/not-found.component'</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">routes</span>: <span class=\"hljs-title class_\">Routes</span> = [\n  { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">''</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">HomeComponent</span> },\n  { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'profile'</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">ProfileComponent</span> },\n  { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'**'</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">NotFoundComponent</span> }\n];\n\n@<span class=\"hljs-title class_\">NgModule</span>({\n  <span class=\"hljs-attr\">imports</span>: [<span class=\"hljs-title class_\">RouterModule</span>.<span class=\"hljs-title function_\">forRoot</span>(routes)],\n  <span class=\"hljs-attr\">exports</span>: [<span class=\"hljs-title class_\">RouterModule</span>]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AppRoutingModule</span> { }\n</code></pre>\n<h1>단계 2: 컴포넌트 생성</h1>\n<p>이제 HomeComponent와 ProfileComponent를 생성하세요.</p>\n<p>HomeComponent</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Component</span>, <span class=\"hljs-title class_\">OnInit</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n@<span class=\"hljs-title class_\">Component</span>({\n  <span class=\"hljs-attr\">selector</span>: <span class=\"hljs-string\">'app-home'</span>,\n  <span class=\"hljs-attr\">templateUrl</span>: <span class=\"hljs-string\">'./home.component.html'</span>,\n  <span class=\"hljs-attr\">styleUrls</span>: [<span class=\"hljs-string\">'./home.component.css'</span>]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HomeComponent</span> implements <span class=\"hljs-title class_\">OnInit</span> {\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) { }\n\n  <span class=\"hljs-title function_\">ngOnInit</span>(): <span class=\"hljs-keyword\">void</span> {\n  }\n\n}\n</code></pre>\n<p>ProfileComponent</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Component</span>, <span class=\"hljs-title class_\">OnInit</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n@<span class=\"hljs-title class_\">Component</span>({\n  <span class=\"hljs-attr\">selector</span>: <span class=\"hljs-string\">'app-profile'</span>,\n  <span class=\"hljs-attr\">templateUrl</span>: <span class=\"hljs-string\">'./profile.component.html'</span>,\n  <span class=\"hljs-attr\">styleUrls</span>: [<span class=\"hljs-string\">'./profile.component.css'</span>]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProfileComponent</span> implements <span class=\"hljs-title class_\">OnInit</span> {\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) { }\n\n  <span class=\"hljs-title function_\">ngOnInit</span>(): <span class=\"hljs-keyword\">void</span> {\n  }\n\n}\n</code></pre>\n<h1>내용을 동적으로 표시하거나 숨기기</h1>\n<p>홈페이지에서는 검색 창을 표시하고 프로필 페이지에서는 숨기고 싶습니다. 이를 위해 Angular의 ActivatedRoute 및 Router 서비스를 사용하여 라우트 변경을 감지하고 조건에 따라 검색 창을 표시할 것입니다.</p>\n<h1>단계 3: Navbar 컴포넌트 업데이트</h1>\n<p>NavbarComponent를 경로 변경에 반응하도록 업데이트하세요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Component</span>, <span class=\"hljs-title class_\">OnInit</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Router</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/router'</span>;\n\n@<span class=\"hljs-title class_\">Component</span>({\n  <span class=\"hljs-attr\">selector</span>: <span class=\"hljs-string\">'app-navbar'</span>,\n  <span class=\"hljs-attr\">templateUrl</span>: <span class=\"hljs-string\">'./navbar.component.html'</span>,\n  <span class=\"hljs-attr\">styleUrls</span>: [<span class=\"hljs-string\">'./navbar.component.css'</span>]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">NavbarComponent</span> implements <span class=\"hljs-title class_\">OnInit</span> {\n  <span class=\"hljs-attr\">showSearchBar</span>: boolean = <span class=\"hljs-literal\">true</span>;\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">private router: Router</span>) { }\n\n  <span class=\"hljs-title function_\">ngOnInit</span>(): <span class=\"hljs-keyword\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">router</span>.<span class=\"hljs-property\">events</span>.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">() =></span> {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">showSearchBar</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">router</span>.<span class=\"hljs-property\">url</span> !== <span class=\"hljs-string\">'/profile'</span>;\n    });\n  }\n}\n</code></pre>\n<h1>단계 4: Navbar 템플릿 업데이트</h1>\n<pre><code class=\"hljs language-js\">&#x3C;nav>\n  &#x3C;!-- other nav elements -->\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> *<span class=\"hljs-attr\">ngIf</span>=<span class=\"hljs-string\">\"showSearchBar\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Search...\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span></span>\n</code></pre>\n<h1>설명</h1>\n<ul>\n<li>라우트 정의: 홈 및 프로필 페이지를 위한 라우트를 정의합니다.</li>\n<li>컴포넌트: HomeComponent 및 ProfileComponent를 위한 기본 컴포넌트가 생성되었습니다.</li>\n<li>네비게이션 바 컴포넌트:</li>\n</ul>\n<ul>\n<li>NavbarComponent는 Angular의 Router 서비스를 사용하여 라우트 변경을 구독합니다.</li>\n<li>현재 URL을 확인하여 검색 창을 표시하거나 숨길지 여부를 결정합니다.</li>\n<li>URL이 /profile인 경우 showSearchBar를 false로 설정하여 검색 창을 숨깁니다. 그 외의 경우에는 true로 설정됩니다.</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}