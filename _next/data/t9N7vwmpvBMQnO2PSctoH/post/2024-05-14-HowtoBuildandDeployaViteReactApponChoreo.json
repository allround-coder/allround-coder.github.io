{"pageProps":{"post":{"title":"Choreo에서 Vite  React 앱을 만들고 배포하는 방법","description":"","date":"2024-05-14 10:19","slug":"2024-05-14-HowtoBuildandDeployaViteReactApponChoreo","content":"\n\n더블육을 전에 WSO2가 주굜한 코딩 대회에 참여했어요 (choreo.dev/cybertruck). 거기서 제가 경험해 본 내부 개발자 플랫폼인 Choreo를 탐험할 수 있었어요. 이 챌린지의 목표는 개인 개발자들이 Choreo를 경험할 수 있도록 하는 거에요.\n\nChoreo가 뭔데요?\n\n\"Choreo는 디지털 경험을 만드는 방식을 재정의하는 내부 개발자 플랫폼이에요. Choreo는 클라우드 네이티브 애플리케이션을 원활하게 디자인하고 개발하고 배포하고 관리할 수 있게 해 주어 혁신을 불러 일으키면서 시장 진입 시간을 줄여 줘요.\"\n\n그래서 오늘은 Vite+ React 앱을 Choreo에 빌드하고 배포하는 방법에 대해 설명할게요.\n\n\n\n시작하기 전에 다음 사항이 있는지 확인하세요:\n\n\n- Github 계정\n- Choreo 계정(https://console.choreo.dev/로 이동하여 가입하고 조직을 생성하세요.)\n \n\n앱 생성\n\n터미널을 열고 다음 명령어를 실행하세요:\n\n\n\n```js\nnpm create vite@latest my-project -- --template react\n```\n\n프로젝트 디렉토리로 이동하여 필요한 종속성을 설치하세요\n\n```js\ncd my-project\nnpm install\n```\n\n설치 프로세스를 완료한 후, IDE를 사용하여 프로젝트에 일부 변경을 가하실 수 있습니다. 이 데모에서 제가 한 작업은 다음과 같습니다.\n\n\n\n```js\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <h1>Choreo 데모</h1>\n    </>\n  );\n}\n\nexport default App;\n```\n\n프로젝트를 수정한 후에 GitHub에 새 저장소를 만들고 프로젝트를 푸시하세요. Choreo 무료 평가판에서는 공개 저장소만 배포할 수 있습니다. 따라서 저장소 가시성을 공개로 설정해주세요.\n\n이제 Choreo에서 빌드하고 배포해봅시다.\n\n먼저, 조직 홈페이지를 볼 수 있는 console.choreo.dev로 이동해주세요.\n\n\n\n\n홈페이지에서 + 프로젝트 생성을 클릭하고, 프로젝트 이름을 입력한 후 \"새 프로젝트 생성\"을 클릭하면 새 프로젝트가 생성됩니다.\n\n프로젝트를 생성한 후, \"단일 구성 요소 생성\" 섹션 아래의 웹 애플리케이션 카드를 클릭하고 구성 요소의 이름과 설명을 입력하세요.\n\nGitHub 저장소를 이 구성 요소에 연결하려면 \"GitHub로 승인\"을 클릭하고, 이를 위해 생성한 저장소를 선택하세요.\n\n\n\n깃허브 레포지토리를 연결한 후, 데모와 관련된 필수 정보를 선택하십시오.\n\n```js\nBuildpack : React\nProject directory : /\nBuild command : npm run build \nBuild path : /dist\nNode version : 20(또는 사용 중인 버전)\n```\n\n<img src=\"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_1.png\" />\n\n이제 생성 버튼을 클릭하면 컴포넌트가 성공적으로 생성됩니다.\n\n\n\n컴포넌트가 성공적으로 생성되면 대시보드의 왼쪽 사이드바에서 빌드 섹션으로 이동하여 '최신 버전 빌드'를 클릭하세요.\n\n![이미지](/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_2.png)\n\n빌드 프로세스가 완료되면 응용 프로그램을 배포할 수 있습니다.\n\n그러려면 배포 섹션으로 이동하여 설정 카드에서 '구성 및 배포'를 클릭하세요.\n\n\n\n![이미지](/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_3.png)\n\n이후에 왼쪽에 시트가 열리며 여기에서 파일 마운트와 인증 설정을 추가할 수 있습니다. 본 데모에서는 파일 마운트나 인증을 추가하지 않겠습니다. 이 부분은 건너뛰셔도 됩니다. (인증 패널에서 'Choreo Manage Authentication'을 끄는 것을 잊지 마세요)\n\n이제 배포 버튼을 클릭하여 애플리케이션을 개발 환경에 배포할 수 있습니다. 수 분 후에 배포 상태가 성공적으로 완료되었음을 확인할 수 있습니다.\n\n![이미지](/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_4.png)\n\n\n\n웹 애플리케이션을 성공적으로 호스팅했는지 확인하려면 개발 카드의 웹 앱 URL을 클릭해주세요.\n\n이제 Vite + React 앱을 Choreo에 성공적으로 배포했습니다.\n\n원하신다면 개발 환경 카드의 '프로모트' 버튼을 클릭하여 프로덕션 환경으로 승격시킬 수 있습니다. 게다가, 프로덕션 환경에서 애플리케이션에 대한 짧은 URL 접두사를 설정할 수도 있습니다.\n\n![이미지](/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_5.png)\n\n\n\n위의 데모에 대한 내 GitHub 레포를 확인해볼 수 있어요:\n\nhttps://github.com/chamals3n4/Vite-Choreo\n\n간단히 말해서, 오늘은 Vite + React 앱을 Choreo에 빌드하고 배포하는 방법을 배웠어요. Choreo를 사용하면 클라우드 네이티브 앱을 쉽게 배포할 수 있어요.\n\nChoreo에 대한 자세한 정보 및 고급 개념은 그들의 문서에서 찾을 수 있어요.\n\n\n\nhttps://wso2.com/choreo/docs/\n\n본 글을 읽어 주셔서 감사합니다. 즐거운 코딩 하세요!!","ogImage":{"url":"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_0.png"},"coverImage":"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>더블육을 전에 WSO2가 주굜한 코딩 대회에 참여했어요 (choreo.dev/cybertruck). 거기서 제가 경험해 본 내부 개발자 플랫폼인 Choreo를 탐험할 수 있었어요. 이 챌린지의 목표는 개인 개발자들이 Choreo를 경험할 수 있도록 하는 거에요.</p>\n<p>Choreo가 뭔데요?</p>\n<p>\"Choreo는 디지털 경험을 만드는 방식을 재정의하는 내부 개발자 플랫폼이에요. Choreo는 클라우드 네이티브 애플리케이션을 원활하게 디자인하고 개발하고 배포하고 관리할 수 있게 해 주어 혁신을 불러 일으키면서 시장 진입 시간을 줄여 줘요.\"</p>\n<p>그래서 오늘은 Vite+ React 앱을 Choreo에 빌드하고 배포하는 방법에 대해 설명할게요.</p>\n<p>시작하기 전에 다음 사항이 있는지 확인하세요:</p>\n<ul>\n<li>Github 계정</li>\n<li>Choreo 계정(<a href=\"https://console.choreo.dev/%EB%A1%9C\" rel=\"nofollow\" target=\"_blank\">https://console.choreo.dev/로</a> 이동하여 가입하고 조직을 생성하세요.)</li>\n</ul>\n<p>앱 생성</p>\n<p>터미널을 열고 다음 명령어를 실행하세요:</p>\n<pre><code class=\"hljs language-js\">npm create vite@latest my-project -- --template react\n</code></pre>\n<p>프로젝트 디렉토리로 이동하여 필요한 종속성을 설치하세요</p>\n<pre><code class=\"hljs language-js\">cd my-project\nnpm install\n</code></pre>\n<p>설치 프로세스를 완료한 후, IDE를 사용하여 프로젝트에 일부 변경을 가하실 수 있습니다. 이 데모에서 제가 한 작업은 다음과 같습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"./App.css\"</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">App</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Choreo 데모<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/></span></span>\n  );\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">App</span>;\n</code></pre>\n<p>프로젝트를 수정한 후에 GitHub에 새 저장소를 만들고 프로젝트를 푸시하세요. Choreo 무료 평가판에서는 공개 저장소만 배포할 수 있습니다. 따라서 저장소 가시성을 공개로 설정해주세요.</p>\n<p>이제 Choreo에서 빌드하고 배포해봅시다.</p>\n<p>먼저, 조직 홈페이지를 볼 수 있는 console.choreo.dev로 이동해주세요.</p>\n<p>홈페이지에서 + 프로젝트 생성을 클릭하고, 프로젝트 이름을 입력한 후 \"새 프로젝트 생성\"을 클릭하면 새 프로젝트가 생성됩니다.</p>\n<p>프로젝트를 생성한 후, \"단일 구성 요소 생성\" 섹션 아래의 웹 애플리케이션 카드를 클릭하고 구성 요소의 이름과 설명을 입력하세요.</p>\n<p>GitHub 저장소를 이 구성 요소에 연결하려면 \"GitHub로 승인\"을 클릭하고, 이를 위해 생성한 저장소를 선택하세요.</p>\n<p>깃허브 레포지토리를 연결한 후, 데모와 관련된 필수 정보를 선택하십시오.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Buildpack</span> : <span class=\"hljs-title class_\">React</span>\n<span class=\"hljs-title class_\">Project</span> directory : /\n<span class=\"hljs-title class_\">Build</span> command : npm run build \n<span class=\"hljs-title class_\">Build</span> path : /dist\n<span class=\"hljs-title class_\">Node</span> version : <span class=\"hljs-number\">20</span>(또는 사용 중인 버전)\n</code></pre>\n<p>이제 생성 버튼을 클릭하면 컴포넌트가 성공적으로 생성됩니다.</p>\n<p>컴포넌트가 성공적으로 생성되면 대시보드의 왼쪽 사이드바에서 빌드 섹션으로 이동하여 '최신 버전 빌드'를 클릭하세요.</p>\n<p><img src=\"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_2.png\" alt=\"이미지\"></p>\n<p>빌드 프로세스가 완료되면 응용 프로그램을 배포할 수 있습니다.</p>\n<p>그러려면 배포 섹션으로 이동하여 설정 카드에서 '구성 및 배포'를 클릭하세요.</p>\n<p><img src=\"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_3.png\" alt=\"이미지\"></p>\n<p>이후에 왼쪽에 시트가 열리며 여기에서 파일 마운트와 인증 설정을 추가할 수 있습니다. 본 데모에서는 파일 마운트나 인증을 추가하지 않겠습니다. 이 부분은 건너뛰셔도 됩니다. (인증 패널에서 'Choreo Manage Authentication'을 끄는 것을 잊지 마세요)</p>\n<p>이제 배포 버튼을 클릭하여 애플리케이션을 개발 환경에 배포할 수 있습니다. 수 분 후에 배포 상태가 성공적으로 완료되었음을 확인할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_4.png\" alt=\"이미지\"></p>\n<p>웹 애플리케이션을 성공적으로 호스팅했는지 확인하려면 개발 카드의 웹 앱 URL을 클릭해주세요.</p>\n<p>이제 Vite + React 앱을 Choreo에 성공적으로 배포했습니다.</p>\n<p>원하신다면 개발 환경 카드의 '프로모트' 버튼을 클릭하여 프로덕션 환경으로 승격시킬 수 있습니다. 게다가, 프로덕션 환경에서 애플리케이션에 대한 짧은 URL 접두사를 설정할 수도 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-14-HowtoBuildandDeployaViteReactApponChoreo_5.png\" alt=\"이미지\"></p>\n<p>위의 데모에 대한 내 GitHub 레포를 확인해볼 수 있어요:</p>\n<p><a href=\"https://github.com/chamals3n4/Vite-Choreo\" rel=\"nofollow\" target=\"_blank\">https://github.com/chamals3n4/Vite-Choreo</a></p>\n<p>간단히 말해서, 오늘은 Vite + React 앱을 Choreo에 빌드하고 배포하는 방법을 배웠어요. Choreo를 사용하면 클라우드 네이티브 앱을 쉽게 배포할 수 있어요.</p>\n<p>Choreo에 대한 자세한 정보 및 고급 개념은 그들의 문서에서 찾을 수 있어요.</p>\n<p><a href=\"https://wso2.com/choreo/docs/\" rel=\"nofollow\" target=\"_blank\">https://wso2.com/choreo/docs/</a></p>\n<p>본 글을 읽어 주셔서 감사합니다. 즐거운 코딩 하세요!!</p>\n</body>\n</html>\n"},"__N_SSG":true}