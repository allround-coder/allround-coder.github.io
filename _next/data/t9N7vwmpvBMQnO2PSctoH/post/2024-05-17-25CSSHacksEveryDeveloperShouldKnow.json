{"pageProps":{"post":{"title":"개발자라면 반드시 알아야 할 CSS 팁 25가지","description":"","date":"2024-05-17 21:24","slug":"2024-05-17-25CSSHacksEveryDeveloperShouldKnow","content":"\n\n\n![CSS](/assets/img/2024-05-17-25CSSHacksEveryDeveloperShouldKnow_0.png)\n\nCSS (Cascading Style Sheets)은 웹 개발자에게 필수적인 도구로, HTML 요소를 정확하게 스타일링할 수 있게 해줍니다. 그러나 CSS를 정복하는 것은 기본을 알고 있는 것 이상의 일이 필요합니다. 여기에는 여러분의 삶을 더 쉽게 만들고 코드를 더 깔끔하게 만들 수 있는 25가지 CSS 해킹 방법이 있습니다.\n\n## 1. 요소를 수직 및 수평으로 가운데 정렬하기\n\n문제: 요소를 컨테이너 내에서 수직 및 수평으로 가운데 정렬하는 것.\n\n\n<div class=\"content-ad\"></div>\n\n해결책: Flexbox를 사용해주세요.\n\n```js\n.container {\n    display: flex;\n    justify-content: center; /* 수평 가운데 정렬 */\n    align-items: center; /* 수직 가운데 정렬 */\n    height: 100vh;\n}\n```\n\n## 2. `vw`를 사용한 반응형 텍스트\n\n문제: 뷰포트와 비례하여 텍스트가 확대/축소되는지 확인하는 것이 중요합니다.\n\n<div class=\"content-ad\"></div>\n\n해결책: `vw` 단위를 사용하세요.\n\n```css\nh1 {\n    font-size: 5vw;\n}\n```\n\n## 3. 종횡비 유지\n\n문제: 요소의 종횡비 유지하기.\n\n<div class=\"content-ad\"></div>\n\n해결책: 백분율 기반의 패딩 사용하기.\n\n```js\n.aspect-ratio-box {\nwidth: 100%;\npadding-top: 56.25%; /* 16:9 비율 */\nposition: relative;\n}\n.aspect-ratio-content {\nposition: absolute;\ntop: 0;\nright: 0;\nbottom: 0;\nleft: 0;\n}\n```\n\n## 4. 커스텀 체크박스 및 라디오 버튼\n\n문제: 기본 체크박스와 라디오 버튼의 스타일링.\n\n<div class=\"content-ad\"></div>\n\n해결책: 기본 입력란을 숨기고 레이블을 스타일링합니다.\n\n```js\n<label class=\"custom-checkbox\">\n<input type=\"checkbox\" />\n<span class=\"checkmark\"></span>\n</label>\n```\n\n```js\n.custom-checkbox input {\ndisplay: none;\n}\n.custom-checkbox .checkmark {\nwidth: 20px;\nheight: 20px;\nbackground-color: #eee;\nborder-radius: 4px;\n}\n.custom-checkbox input:checked + .checkmark {\nbackground-color: #2196F3;\n}\n```\n\n## 5. 레이아웃을 위한 CSS 그리드\n\n<div class=\"content-ad\"></div>\n\n문제: 복잡한 레이아웃 만들기.\n\n해결책: CSS Grid를 사용하세요.\n\n```css\n.container {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 10px;\n}\n.item {\nbackground-color: lightblue;\npadding: 20px;\n}\n```\n\n## 6. 고정 푸터\n\n<div class=\"content-ad\"></div>\n\n문제: 페이지 하단에 푸터를 고정하는 방법\n\n해결책: Flexbox를 사용하세요.\n\n```js\nbody {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\nmain {\n    flex: 1;\n}\nfooter {\n    background-color: #f1f1f1;\n    padding: 10px;\n    text-align: center;\n}\n```\n\n## 7. 부드러운 스크롤\n\n<div class=\"content-ad\"></div>\n\n문제: 앵커 링크에 부드러운 스크롤 추가하기\n\n해결책: `scroll-behavior`를 사용하세요.\n\n```css\nhtml {\nscroll-behavior: smooth;\n}\n```\n\n## 8. 반응형 이미지\n\n<div class=\"content-ad\"></div>\n\n문제: 이미지가 반응형으로 표시되도록하기\n\n해결책: `max-width` 속성 사용\n\n```css\nimg {\n    max-width: 100%;\n    height: auto;\n}\n```\n\n## 9. 텍스트 줄임표(...) 처리\n\n<div class=\"content-ad\"></div>\n\n해결: 넘치는 텍스트 자르기\n\n해결책: `text-overflow`를 사용하세요.\n\n```css\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 200px; /* 또는 필요한 너비 */\n}\n```\n\n## 10. 커스텀 스크롤바\n\n<div class=\"content-ad\"></div>\n\n문제: 스크롤바 스타일링하기.\n\n솔루션: `::-webkit-scrollbar`를 사용하세요.\n\n```js\n::-webkit-scrollbar {\n    width: 10px;\n}\n\n::-webkit-scrollbar-track {\n    background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #888;\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n```\n\n## 11. 전체 화면 배경 이미지\n\n<div class=\"content-ad\"></div>\n\n문제: 배경 이미지를 전체 화면에 적용하는 방법.\n\n해결 방법: `background-size`를 사용하세요.\n\n```css\n.full-screen-bg {\nbackground-image: url('background.jpg');\nbackground-size: cover;\nbackground-position: center;\nheight: 100vh;\n}\n```\n\n## 12. 그라디언트 배경 애니메이션\n\n<div class=\"content-ad\"></div>\n\n문제: 애니메이션 그라데이션 배경 만들기.\n\n해결책: `@keyframes`를 사용하세요.\n\n```js\n@keyframes gradient {\n0% { background-position: 0% 50%; }\n50% { background-position: 100% 50%; }\n100% { background-position: 0% 50%; }\n}\n.animated-gradient {\nbackground: linear-gradient(270deg, #ff7e5f, #feb47b);\nbackground-size: 400% 400%;\nanimation: gradient 15s ease infinite;\n}\n```\n\n## 13. 오버레이\n\n<div class=\"content-ad\"></div>\n\n문제: 이미지에 오버레이 추가하기\n\n해결책: `::after` 가상 요소 사용하세요.\n\n```js\n.image-overlay {\nposition: relative;\n}\n.image-overlay::after {\ncontent: '';\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0, 0, 0, 0.5); /* 투명도 50%인 검은색 */\n}\n```\n\n## 14. 이미지 호버 효과\n\n<div class=\"content-ad\"></div>\n\n문제: 이미지에 호버 효과 추가하기.\n\n해결책: `:hover`를 사용하세요.\n\n```css\n.image-hover img {\n    transition: transform 0.3s;\n}\n.image-hover img:hover {\n    transform: scale(1.1);\n}\n```\n\n## 15. CSS 변수\n\n<div class=\"content-ad\"></div>\n\n문제: 테마 변경을 간단하게하기.\n\n해결책: CSS 변수를 사용하세요.\n\n```css\n:root {\n    --primary-color: #3498db;\n    --secondary-color: #2ecc71;\n}\nbutton {\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n}\n```\n\n## 16. 이미지용 Object Fit\n\n<div class=\"content-ad\"></div>\n\n문제: 이미지가 왜곡되지 않고 컨테이너 내에 잘 맞게 표시되는지 확인합니다.\n\n해결책: `object-fit`를 사용하세요.\n\n```css\n.fit-image {\n    width: 100%;\n    height: 200px;\n    object-fit: cover; /* 또는 contain, fill 등 */\n}\n```\n\n## 17. 줄 바꿈 방지\n\n<div class=\"content-ad\"></div>\n\n문제: 텍스트가 여러 줄로 나뉘는 것을 방지해야 합니다.\n\n해결책: `white-space`를 사용하세요.\n\n```css\n.no-break {\nwhite-space: nowrap;\n}\n```\n\n## 18. 전체 너비 요소\n\n<div class=\"content-ad\"></div>\n\n문제: 요소가 부모 요소의 전체 너비를 차지하도록 만들기.\n\n해결책: `width: 100vw`를 사용하세요.\n\n```css\n.full-width {\nwidth: 100vw;\nmargin-left: calc(50% - 50vw);\nmargin-right: calc(50% - 50vw);\n}\n```\n\n## 19. SVG 아이콘 색상 제어\n\n<div class=\"content-ad\"></div>\n\n문제: CSS를 사용하여 인라인 SVG의 색상 변경하기\n\n해결책: `currentColor`을 사용하세요.\n\n```css\n.icon {\nfill: currentColor;\n}\n.icon-container {\ncolor: #ff6347;\n}\n```\n\n## 20. 이름이 지정된 영역을 사용한 CSS 그리드\n\n<div class=\"content-ad\"></div>\n\n문제: 이름이 지정된 그리드 영역으로 복잡한 레이아웃을 생성하려면.\n\n해결책: `grid-template-areas`를 사용하세요.\n\n```js\n.grid-container {\n  display: grid;\n  grid-template-areas:\n    'header header'\n    'sidebar content'\n    'footer footer';\n  grid-gap: 10px;\n}\n.header {\n  grid-area: header;\n}\n.sidebar {\n  grid-area: sidebar;\n}\n.content {\n  grid-area: content;\n}\n.footer {\n  grid-area: footer;\n}\n```\n\n## 21. CSS Transtions\n\n<div class=\"content-ad\"></div>\n\n문제: 상태 간의 부드러운 전환.\n\n해결 방법: `transition`을 사용하세요.\n\n```css\n.transition-button {\nbackground-color: #3498db;\ntransition: background-color 0.3s;\n}\n.transition-button:hover {\nbackground-color: #2ecc71;\n}\n```\n\n## 22. CSS 애니메이션\n\n<div class=\"content-ad\"></div>\n\n문제: 요소에 애니메이션 추가하기\n\n해결책: `@keyframes`을 사용하세요.\n\n```js\n@keyframes bounce {\n0%, 100% { transform: translateY(0); }\n50% { transform: translateY(-20px); }\n}\n.bounce {\nanimation: bounce 2s infinite;\n}\n```\n\n## 23. CSS 모양 아웃사이더들\n\n<div class=\"content-ad\"></div>\n\n문제: 비직사각형 모양 만들기.\n\n해결책: `clip-path`를 사용하세요.\n\n```js\n.clip-path {\nclip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);\nbackground-color: #3498db;\nwidth: 200px;\nheight: 200px;\n}\n```\n\n## 24. 다크 모드\n\n<div class=\"content-ad\"></div>\n\n문제: 다크 모드 구현하기.\n\n해결책: CSS 변수와 미디어 쿼리 사용하기.\n\n```css\n:root {\n  --bg-color: #fff;\n  --text-color: #000;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --bg-color: #333;\n    --text-color: #fff;\n  }\n}\n\nbody {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n```\n\n## 25. CSS 카운터\n\n<div class=\"content-ad\"></div>\n\n문제: 카운터 만들기\n\n해결방법: `counter-reset` 및 `counter-increment`을 사용하세요.\n\n```css\n.counter-list {\n    counter-reset: section;\n}\n.counter-list li::before {\n    counter-increment: section;\n    content: \"섹션 \" counter(section) \": \";\n}\n```","ogImage":{"url":"/assets/img/2024-05-17-25CSSHacksEveryDeveloperShouldKnow_0.png"},"coverImage":"/assets/img/2024-05-17-25CSSHacksEveryDeveloperShouldKnow_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-05-17-25CSSHacksEveryDeveloperShouldKnow_0.png\" alt=\"CSS\"></p>\n<p>CSS (Cascading Style Sheets)은 웹 개발자에게 필수적인 도구로, HTML 요소를 정확하게 스타일링할 수 있게 해줍니다. 그러나 CSS를 정복하는 것은 기본을 알고 있는 것 이상의 일이 필요합니다. 여기에는 여러분의 삶을 더 쉽게 만들고 코드를 더 깔끔하게 만들 수 있는 25가지 CSS 해킹 방법이 있습니다.</p>\n<h2>1. 요소를 수직 및 수평으로 가운데 정렬하기</h2>\n<p>문제: 요소를 컨테이너 내에서 수직 및 수평으로 가운데 정렬하는 것.</p>\n<p>해결책: Flexbox를 사용해주세요.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">container</span> {\n    <span class=\"hljs-attr\">display</span>: flex;\n    justify-<span class=\"hljs-attr\">content</span>: center; <span class=\"hljs-comment\">/* 수평 가운데 정렬 */</span>\n    align-<span class=\"hljs-attr\">items</span>: center; <span class=\"hljs-comment\">/* 수직 가운데 정렬 */</span>\n    <span class=\"hljs-attr\">height</span>: 100vh;\n}\n</code></pre>\n<h2>2. <code>vw</code>를 사용한 반응형 텍스트</h2>\n<p>문제: 뷰포트와 비례하여 텍스트가 확대/축소되는지 확인하는 것이 중요합니다.</p>\n<p>해결책: <code>vw</code> 단위를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">h1</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">5vw</span>;\n}\n</code></pre>\n<h2>3. 종횡비 유지</h2>\n<p>문제: 요소의 종횡비 유지하기.</p>\n<p>해결책: 백분율 기반의 패딩 사용하기.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">aspect</span>-ratio-box {\n<span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">100</span>%;\npadding-<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">56.25</span>%; <span class=\"hljs-comment\">/* 16:9 비율 */</span>\n<span class=\"hljs-attr\">position</span>: relative;\n}\n.<span class=\"hljs-property\">aspect</span>-ratio-content {\n<span class=\"hljs-attr\">position</span>: absolute;\n<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n<h2>4. 커스텀 체크박스 및 라디오 버튼</h2>\n<p>문제: 기본 체크박스와 라디오 버튼의 스타일링.</p>\n<p>해결책: 기본 입력란을 숨기고 레이블을 스타일링합니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;label <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"custom-checkbox\"</span>>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> /></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"checkmark\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span></span>\n&#x3C;/label>\n</code></pre>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">custom</span>-checkbox input {\n<span class=\"hljs-attr\">display</span>: none;\n}\n.<span class=\"hljs-property\">custom</span>-checkbox .<span class=\"hljs-property\">checkmark</span> {\n<span class=\"hljs-attr\">width</span>: 20px;\n<span class=\"hljs-attr\">height</span>: 20px;\nbackground-<span class=\"hljs-attr\">color</span>: #eee;\nborder-<span class=\"hljs-attr\">radius</span>: 4px;\n}\n.<span class=\"hljs-property\">custom</span>-checkbox <span class=\"hljs-attr\">input</span>:checked + .<span class=\"hljs-property\">checkmark</span> {\nbackground-<span class=\"hljs-attr\">color</span>: #2196F3;\n}\n</code></pre>\n<h2>5. 레이아웃을 위한 CSS 그리드</h2>\n<p>문제: 복잡한 레이아웃 만들기.</p>\n<p>해결책: CSS Grid를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.container</span> {\n<span class=\"hljs-attribute\">display</span>: grid;\n<span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-built_in\">repeat</span>(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>fr);\n<span class=\"hljs-attribute\">gap</span>: <span class=\"hljs-number\">10px</span>;\n}\n<span class=\"hljs-selector-class\">.item</span> {\n<span class=\"hljs-attribute\">background-color</span>: lightblue;\n<span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n}\n</code></pre>\n<h2>6. 고정 푸터</h2>\n<p>문제: 페이지 하단에 푸터를 고정하는 방법</p>\n<p>해결책: Flexbox를 사용하세요.</p>\n<pre><code class=\"hljs language-js\">body {\n    <span class=\"hljs-attr\">display</span>: flex;\n    flex-<span class=\"hljs-attr\">direction</span>: column;\n    min-<span class=\"hljs-attr\">height</span>: 100vh;\n}\nmain {\n    <span class=\"hljs-attr\">flex</span>: <span class=\"hljs-number\">1</span>;\n}\nfooter {\n    background-<span class=\"hljs-attr\">color</span>: #f1f1f1;\n    <span class=\"hljs-attr\">padding</span>: 10px;\n    text-<span class=\"hljs-attr\">align</span>: center;\n}\n</code></pre>\n<h2>7. 부드러운 스크롤</h2>\n<p>문제: 앵커 링크에 부드러운 스크롤 추가하기</p>\n<p>해결책: <code>scroll-behavior</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">html</span> {\nscroll-behavior: smooth;\n}\n</code></pre>\n<h2>8. 반응형 이미지</h2>\n<p>문제: 이미지가 반응형으로 표시되도록하기</p>\n<p>해결책: <code>max-width</code> 속성 사용</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">img</span> {\n    <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">height</span>: auto;\n}\n</code></pre>\n<h2>9. 텍스트 줄임표(...) 처리</h2>\n<p>해결: 넘치는 텍스트 자르기</p>\n<p>해결책: <code>text-overflow</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.truncate</span> {\n  <span class=\"hljs-attribute\">white-space</span>: nowrap;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n  <span class=\"hljs-attribute\">text-overflow</span>: ellipsis;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">200px</span>; <span class=\"hljs-comment\">/* 또는 필요한 너비 */</span>\n}\n</code></pre>\n<h2>10. 커스텀 스크롤바</h2>\n<p>문제: 스크롤바 스타일링하기.</p>\n<p>솔루션: <code>::-webkit-scrollbar</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-js\">::-webkit-scrollbar {\n    <span class=\"hljs-attr\">width</span>: 10px;\n}\n\n::-webkit-scrollbar-track {\n    <span class=\"hljs-attr\">background</span>: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n    <span class=\"hljs-attr\">background</span>: #<span class=\"hljs-number\">888</span>;\n}\n\n::-webkit-scrollbar-<span class=\"hljs-attr\">thumb</span>:hover {\n    <span class=\"hljs-attr\">background</span>: #<span class=\"hljs-number\">555</span>;\n}\n</code></pre>\n<h2>11. 전체 화면 배경 이미지</h2>\n<p>문제: 배경 이미지를 전체 화면에 적용하는 방법.</p>\n<p>해결 방법: <code>background-size</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.full-screen-bg</span> {\n<span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">'background.jpg'</span>);\n<span class=\"hljs-attribute\">background-size</span>: cover;\n<span class=\"hljs-attribute\">background-position</span>: center;\n<span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100vh</span>;\n}\n</code></pre>\n<h2>12. 그라디언트 배경 애니메이션</h2>\n<p>문제: 애니메이션 그라데이션 배경 만들기.</p>\n<p>해결책: <code>@keyframes</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-js\">@keyframes gradient {\n<span class=\"hljs-number\">0</span>% { background-<span class=\"hljs-attr\">position</span>: <span class=\"hljs-number\">0</span>% <span class=\"hljs-number\">50</span>%; }\n<span class=\"hljs-number\">50</span>% { background-<span class=\"hljs-attr\">position</span>: <span class=\"hljs-number\">100</span>% <span class=\"hljs-number\">50</span>%; }\n<span class=\"hljs-number\">100</span>% { background-<span class=\"hljs-attr\">position</span>: <span class=\"hljs-number\">0</span>% <span class=\"hljs-number\">50</span>%; }\n}\n.<span class=\"hljs-property\">animated</span>-gradient {\n<span class=\"hljs-attr\">background</span>: linear-<span class=\"hljs-title function_\">gradient</span>(270deg, #ff7e5f, #feb47b);\nbackground-<span class=\"hljs-attr\">size</span>: <span class=\"hljs-number\">400</span>% <span class=\"hljs-number\">400</span>%;\n<span class=\"hljs-attr\">animation</span>: gradient 15s ease infinite;\n}\n</code></pre>\n<h2>13. 오버레이</h2>\n<p>문제: 이미지에 오버레이 추가하기</p>\n<p>해결책: <code>::after</code> 가상 요소 사용하세요.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">image</span>-overlay {\n<span class=\"hljs-attr\">position</span>: relative;\n}\n.<span class=\"hljs-property\">image</span>-<span class=\"hljs-attr\">overlay</span>::after {\n<span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">''</span>;\n<span class=\"hljs-attr\">position</span>: absolute;\n<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">100</span>%;\n<span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">100</span>%;\nbackground-<span class=\"hljs-attr\">color</span>: <span class=\"hljs-title function_\">rgba</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0.5</span>); <span class=\"hljs-comment\">/* 투명도 50%인 검은색 */</span>\n}\n</code></pre>\n<h2>14. 이미지 호버 효과</h2>\n<p>문제: 이미지에 호버 효과 추가하기.</p>\n<p>해결책: <code>:hover</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.image-hover</span> <span class=\"hljs-selector-tag\">img</span> {\n    <span class=\"hljs-attribute\">transition</span>: transform <span class=\"hljs-number\">0.3s</span>;\n}\n<span class=\"hljs-selector-class\">.image-hover</span> <span class=\"hljs-selector-tag\">img</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(<span class=\"hljs-number\">1.1</span>);\n}\n</code></pre>\n<h2>15. CSS 변수</h2>\n<p>문제: 테마 변경을 간단하게하기.</p>\n<p>해결책: CSS 변수를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-pseudo\">:root</span> {\n    <span class=\"hljs-attr\">--primary-color</span>: <span class=\"hljs-number\">#3498db</span>;\n    <span class=\"hljs-attr\">--secondary-color</span>: <span class=\"hljs-number\">#2ecc71</span>;\n}\n<span class=\"hljs-selector-tag\">button</span> {\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">var</span>(--primary-color);\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--secondary-color);\n}\n</code></pre>\n<h2>16. 이미지용 Object Fit</h2>\n<p>문제: 이미지가 왜곡되지 않고 컨테이너 내에 잘 맞게 표시되는지 확인합니다.</p>\n<p>해결책: <code>object-fit</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.fit-image</span> {\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">200px</span>;\n    <span class=\"hljs-attribute\">object-fit</span>: cover; <span class=\"hljs-comment\">/* 또는 contain, fill 등 */</span>\n}\n</code></pre>\n<h2>17. 줄 바꿈 방지</h2>\n<p>문제: 텍스트가 여러 줄로 나뉘는 것을 방지해야 합니다.</p>\n<p>해결책: <code>white-space</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.no-break</span> {\n<span class=\"hljs-attribute\">white-space</span>: nowrap;\n}\n</code></pre>\n<h2>18. 전체 너비 요소</h2>\n<p>문제: 요소가 부모 요소의 전체 너비를 차지하도록 만들기.</p>\n<p>해결책: <code>width: 100vw</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.full-width</span> {\n<span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100vw</span>;\n<span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">50%</span> - <span class=\"hljs-number\">50vw</span>);\n<span class=\"hljs-attribute\">margin-right</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">50%</span> - <span class=\"hljs-number\">50vw</span>);\n}\n</code></pre>\n<h2>19. SVG 아이콘 색상 제어</h2>\n<p>문제: CSS를 사용하여 인라인 SVG의 색상 변경하기</p>\n<p>해결책: <code>currentColor</code>을 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.icon</span> {\nfill: currentColor;\n}\n<span class=\"hljs-selector-class\">.icon-container</span> {\n<span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#ff6347</span>;\n}\n</code></pre>\n<h2>20. 이름이 지정된 영역을 사용한 CSS 그리드</h2>\n<p>문제: 이름이 지정된 그리드 영역으로 복잡한 레이아웃을 생성하려면.</p>\n<p>해결책: <code>grid-template-areas</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">grid</span>-container {\n  <span class=\"hljs-attr\">display</span>: grid;\n  grid-template-<span class=\"hljs-attr\">areas</span>:\n    <span class=\"hljs-string\">'header header'</span>\n    <span class=\"hljs-string\">'sidebar content'</span>\n    <span class=\"hljs-string\">'footer footer'</span>;\n  grid-<span class=\"hljs-attr\">gap</span>: 10px;\n}\n.<span class=\"hljs-property\">header</span> {\n  grid-<span class=\"hljs-attr\">area</span>: header;\n}\n.<span class=\"hljs-property\">sidebar</span> {\n  grid-<span class=\"hljs-attr\">area</span>: sidebar;\n}\n.<span class=\"hljs-property\">content</span> {\n  grid-<span class=\"hljs-attr\">area</span>: content;\n}\n.<span class=\"hljs-property\">footer</span> {\n  grid-<span class=\"hljs-attr\">area</span>: footer;\n}\n</code></pre>\n<h2>21. CSS Transtions</h2>\n<p>문제: 상태 간의 부드러운 전환.</p>\n<p>해결 방법: <code>transition</code>을 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.transition-button</span> {\n<span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#3498db</span>;\n<span class=\"hljs-attribute\">transition</span>: background-color <span class=\"hljs-number\">0.3s</span>;\n}\n<span class=\"hljs-selector-class\">.transition-button</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n<span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#2ecc71</span>;\n}\n</code></pre>\n<h2>22. CSS 애니메이션</h2>\n<p>문제: 요소에 애니메이션 추가하기</p>\n<p>해결책: <code>@keyframes</code>을 사용하세요.</p>\n<pre><code class=\"hljs language-js\">@keyframes bounce {\n<span class=\"hljs-number\">0</span>%, <span class=\"hljs-number\">100</span>% { <span class=\"hljs-attr\">transform</span>: <span class=\"hljs-title function_\">translateY</span>(<span class=\"hljs-number\">0</span>); }\n<span class=\"hljs-number\">50</span>% { <span class=\"hljs-attr\">transform</span>: <span class=\"hljs-title function_\">translateY</span>(-20px); }\n}\n.<span class=\"hljs-property\">bounce</span> {\n<span class=\"hljs-attr\">animation</span>: bounce 2s infinite;\n}\n</code></pre>\n<h2>23. CSS 모양 아웃사이더들</h2>\n<p>문제: 비직사각형 모양 만들기.</p>\n<p>해결책: <code>clip-path</code>를 사용하세요.</p>\n<pre><code class=\"hljs language-js\">.<span class=\"hljs-property\">clip</span>-path {\nclip-<span class=\"hljs-attr\">path</span>: <span class=\"hljs-title function_\">polygon</span>(<span class=\"hljs-number\">50</span>% <span class=\"hljs-number\">0</span>%, <span class=\"hljs-number\">100</span>% <span class=\"hljs-number\">50</span>%, <span class=\"hljs-number\">50</span>% <span class=\"hljs-number\">100</span>%, <span class=\"hljs-number\">0</span>% <span class=\"hljs-number\">50</span>%);\nbackground-<span class=\"hljs-attr\">color</span>: #3498db;\n<span class=\"hljs-attr\">width</span>: 200px;\n<span class=\"hljs-attr\">height</span>: 200px;\n}\n</code></pre>\n<h2>24. 다크 모드</h2>\n<p>문제: 다크 모드 구현하기.</p>\n<p>해결책: CSS 변수와 미디어 쿼리 사용하기.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-pseudo\">:root</span> {\n  <span class=\"hljs-attr\">--bg-color</span>: <span class=\"hljs-number\">#fff</span>;\n  <span class=\"hljs-attr\">--text-color</span>: <span class=\"hljs-number\">#000</span>;\n}\n\n<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">prefers-color-scheme</span>: dark) {\n  <span class=\"hljs-selector-pseudo\">:root</span> {\n    <span class=\"hljs-attr\">--bg-color</span>: <span class=\"hljs-number\">#333</span>;\n    <span class=\"hljs-attr\">--text-color</span>: <span class=\"hljs-number\">#fff</span>;\n  }\n}\n\n<span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">var</span>(--bg-color);\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--text-color);\n}\n</code></pre>\n<h2>25. CSS 카운터</h2>\n<p>문제: 카운터 만들기</p>\n<p>해결방법: <code>counter-reset</code> 및 <code>counter-increment</code>을 사용하세요.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.counter-list</span> {\n    <span class=\"hljs-attribute\">counter-reset</span>: section;\n}\n<span class=\"hljs-selector-class\">.counter-list</span> <span class=\"hljs-selector-tag\">li</span><span class=\"hljs-selector-pseudo\">::before</span> {\n    <span class=\"hljs-attribute\">counter-increment</span>: section;\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">\"섹션 \"</span> <span class=\"hljs-built_in\">counter</span>(section) <span class=\"hljs-string\">\": \"</span>;\n}\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}