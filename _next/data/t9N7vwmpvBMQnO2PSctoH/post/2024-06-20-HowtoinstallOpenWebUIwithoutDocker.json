{"pageProps":{"post":{"title":"올바른 Docker 없이 Open WebUI를 설치하는 방법","description":"","date":"2024-06-20 07:33","slug":"2024-06-20-HowtoinstallOpenWebUIwithoutDocker","content":"\n\n![image](/assets/img/2024-06-20-HowtoinstallOpenWebUIwithoutDocker_0.png)\n\n이 안내서는 도커 없이 올라마 웹 UI를 설정하는 방법을 안내합니다. 도커는 편의 및 지원을 위해 공식적으로 권장되지만, 이 매뉴얼 방법은 제약 사항이 있는 개발자나 환경에 유용할 수 있습니다. 기억하세요, 지원되지 않는 설치 문제 해결은 개별 노력이 필요할 수 있습니다.\n\n## 프로젝트 구성 요소:\n\n- 프론트엔드: 상호 작용하는 웹 인터페이스입니다.\n- 백엔드: 뒷면에서의 통신 및 기능을 처리합니다. 두 구성 요소는 동시에 실행되어야 개발할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## 요구 사항:\n\n- Node.js `= 20.10`: 프론트엔드 빌드에 사용됨.\n\n- Python `= 3.11`: 백엔드 실행에 사용됨.\n\n- Ollama: 모델용.\n\n<div class=\"content-ad\"></div>\n\n# 시작해보자! 설치 단계:\n\n- Ollama 웹 UI 저장소를 복제하세요:\n\n```js\ngit clone https://github.com/open-webui/open-webui.git\n```\n\n- 프로젝트 디렉토리로 이동하세요:\n\n<div class=\"content-ad\"></div>\n\n```js\ncd ollama-webui/\n```\n\n- 환경 파일을 복사합니다:\n\n```js\ncp -RPp example.env .env\n```\n\n참고: 이 파일에는 설정과 구성이 저장됩니다. 필요에 따라 업데이트하세요.\n\n<div class=\"content-ad\"></div>\n\n## 프론트엔드 빌드:\n\n- 노드를 사용하여 프론트엔드 빌드하기\n\n```js\nnpm install\n```\n\n```js\nnpm run build\n```\n\n<div class=\"content-ad\"></div>\n\n## 백엔드 시작:\n\n- 가상 환경 만들기:\n\n```js\ncd ./backend\n\n# virtualenv 패키지 설치\npip install -U virtualenv\n\n# backend 폴더에 가상 환경 생성\nvirtualenv venv\n\n# 가상 환경 활성화\nsource venv/Scripts/activate\n```\n\n- 백엔드와 함께 프론트엔드 제공\n\n<div class=\"content-ad\"></div>\n\n```js\npip install -r requirements.txt -U\n```\n\n```js\nbash start.sh\n```\n\n## Ollama 웹 UI에 액세스하기:\n\n- 웹 브라우저에서 http://localhost:8080/을 열어주세요. 인터페이스가 실행 중이어야 합니다!\n\n<div class=\"content-ad\"></div>\n\n## 팁 및 문제 해결:\n\n에러가 발생하면 단서를 찾기 위해 콘솔 출력을 확인해보세요. 추가 구성 옵션 및 고급 기능에 대한 정보는 Ollama Web UI 설명서를 참조하세요. Docker가 아닌 설정은 공식적으로 지원되지 않으므로 문제 해결 작업에 대비해야 합니다.\n\nOllama Web UI를 즐기세요!\n\n이 튜토리얼은 Docker 없이 Ollama Web UI를 시작하는 데 도움이 될 것입니다. 일반적으로 Docker를 선호하지만 이 설명서 방식은 특정 상황에 대해 유연성을 제공합니다. 약간의 노력으로 이 강력한 대화형 도구를 시작할 수 있습니다.","ogImage":{"url":"/assets/img/2024-06-20-HowtoinstallOpenWebUIwithoutDocker_0.png"},"coverImage":"/assets/img/2024-06-20-HowtoinstallOpenWebUIwithoutDocker_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-20-HowtoinstallOpenWebUIwithoutDocker_0.png\" alt=\"image\"></p>\n<p>이 안내서는 도커 없이 올라마 웹 UI를 설정하는 방법을 안내합니다. 도커는 편의 및 지원을 위해 공식적으로 권장되지만, 이 매뉴얼 방법은 제약 사항이 있는 개발자나 환경에 유용할 수 있습니다. 기억하세요, 지원되지 않는 설치 문제 해결은 개별 노력이 필요할 수 있습니다.</p>\n<h2>프로젝트 구성 요소:</h2>\n<ul>\n<li>프론트엔드: 상호 작용하는 웹 인터페이스입니다.</li>\n<li>백엔드: 뒷면에서의 통신 및 기능을 처리합니다. 두 구성 요소는 동시에 실행되어야 개발할 수 있습니다.</li>\n</ul>\n<h2>요구 사항:</h2>\n<ul>\n<li>\n<p>Node.js <code>= 20.10</code>: 프론트엔드 빌드에 사용됨.</p>\n</li>\n<li>\n<p>Python <code>= 3.11</code>: 백엔드 실행에 사용됨.</p>\n</li>\n<li>\n<p>Ollama: 모델용.</p>\n</li>\n</ul>\n<h1>시작해보자! 설치 단계:</h1>\n<ul>\n<li>Ollama 웹 UI 저장소를 복제하세요:</li>\n</ul>\n<pre><code class=\"hljs language-js\">git clone <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/open-webui/open-webui.git</span>\n</code></pre>\n<ul>\n<li>프로젝트 디렉토리로 이동하세요:</li>\n</ul>\n<pre><code class=\"hljs language-js\">cd ollama-webui/\n</code></pre>\n<ul>\n<li>환경 파일을 복사합니다:</li>\n</ul>\n<pre><code class=\"hljs language-js\">cp -<span class=\"hljs-title class_\">RPp</span> example.<span class=\"hljs-property\">env</span> .<span class=\"hljs-property\">env</span>\n</code></pre>\n<p>참고: 이 파일에는 설정과 구성이 저장됩니다. 필요에 따라 업데이트하세요.</p>\n<h2>프론트엔드 빌드:</h2>\n<ul>\n<li>노드를 사용하여 프론트엔드 빌드하기</li>\n</ul>\n<pre><code class=\"hljs language-js\">npm install\n</code></pre>\n<pre><code class=\"hljs language-js\">npm run build\n</code></pre>\n<h2>백엔드 시작:</h2>\n<ul>\n<li>가상 환경 만들기:</li>\n</ul>\n<pre><code class=\"hljs language-js\">cd ./backend\n\n# virtualenv 패키지 설치\npip install -U virtualenv\n\n# backend 폴더에 가상 환경 생성\nvirtualenv venv\n\n# 가상 환경 활성화\nsource venv/<span class=\"hljs-title class_\">Scripts</span>/activate\n</code></pre>\n<ul>\n<li>백엔드와 함께 프론트엔드 제공</li>\n</ul>\n<pre><code class=\"hljs language-js\">pip install -r requirements.<span class=\"hljs-property\">txt</span> -U\n</code></pre>\n<pre><code class=\"hljs language-js\">bash start.<span class=\"hljs-property\">sh</span>\n</code></pre>\n<h2>Ollama 웹 UI에 액세스하기:</h2>\n<ul>\n<li>웹 브라우저에서 <a href=\"http://localhost:8080/%EC%9D%84\" rel=\"nofollow\" target=\"_blank\">http://localhost:8080/을</a> 열어주세요. 인터페이스가 실행 중이어야 합니다!</li>\n</ul>\n<h2>팁 및 문제 해결:</h2>\n<p>에러가 발생하면 단서를 찾기 위해 콘솔 출력을 확인해보세요. 추가 구성 옵션 및 고급 기능에 대한 정보는 Ollama Web UI 설명서를 참조하세요. Docker가 아닌 설정은 공식적으로 지원되지 않으므로 문제 해결 작업에 대비해야 합니다.</p>\n<p>Ollama Web UI를 즐기세요!</p>\n<p>이 튜토리얼은 Docker 없이 Ollama Web UI를 시작하는 데 도움이 될 것입니다. 일반적으로 Docker를 선호하지만 이 설명서 방식은 특정 상황에 대해 유연성을 제공합니다. 약간의 노력으로 이 강력한 대화형 도구를 시작할 수 있습니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}