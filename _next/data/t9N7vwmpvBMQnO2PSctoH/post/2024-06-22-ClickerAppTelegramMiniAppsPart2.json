{"pageProps":{"post":{"title":"클리커 앱 텔레그램 미니 앱 개발 가이드 Part 2","description":"","date":"2024-06-22 04:33","slug":"2024-06-22-ClickerAppTelegramMiniAppsPart2","content":"\n\n![이미지](/assets/img/2024-06-22-ClickerAppTelegramMiniAppsPart2_0.png)\n\n이 글의 첫 번째 부분에서는 다음을 배웠어요\n\n- BotFather를 사용하여 Telegram Bot을 만드는 방법\n- TMA 프레임워크 사용법\n- 봇에 미니 앱 추가하는 방법\n\n이제 React + TWA + Node를 사용하여 Notcoin과 비슷한 간단한 클리커 앱을 만들어 볼 거에요.\n\n<div class=\"content-ad\"></div>\n\n# 앱 만들기\n\n단계 1: 프로젝트를 초기화하고 React 앱에서 UI 라이브러리를 사용하려면 TWA 및 기타 종속성을 설치하세요.\n\n```js\nnpm i @twa-dev/sdk\n```\n\n단계 2: 간단한 디자인을 만드세요(복잡하지 않아도 됩니다). 저는 3개의 섹션을 가지고 있을 것입니다: 포인트, 에너지 바와 버튼, 그리고 친구 초대 버튼.\n\n<div class=\"content-ad\"></div>\n\n```js\n<button\n  onClick={() => {\n    WebApp.openTelegramLink(\n      `https://t.me/share/url?url=http://t.me/YOUR_BOT_USERNAME?start=fren=${userId}`\n    );\n  }\n>\n  친구 초대하기\n</button>;\n```\n\nuserId는 현재 사용자의 ID로, WebApp.initData 또는 WebApp.initDataUnsafe 메소드를 통해 얻을 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\nStep 3: 앱을 배포하고 프로젝트에 메뉴 버튼 링크를 추가하세요 (1부 참조)\n\n# 백엔드 처리\n\nStep 1: 노드 파일을 만들고 텔레그램을 위한 종속성 추가하세요\n\n```js\nconst TelegramBot = require('node-telegram-bot-api');\n\nconst token = 'YOUR_TELEGRAM_TOKEN';\nconst bot = new TelegramBot(token, { polling: true });\n```\n\n<div class=\"content-ad\"></div>\n\n단계 2: 사용자로부터 /start 메시지를 받으면 텍스트와 미니 앱을 열 수 있는 인라인 버튼을 전송합니다.\n\n```js\nbot.onText(/\\/start/, async (msg) => {\n\n  const chatId = msg.chat.id;\n  const user = msg.from;\n  try {\n    const user = await getUser(chatId);\n    console.log(msg.text)\n    if (!user.exists) {\n      if (msg.text.includes('fren')) {\n        const referrerId = msg.text.split('=')[1]\n        createReferralUser(chatId, referrerId)\n      }\n    } \n    createUser(chatId);\n  } catch (error) {\n    console.error('오류:', error);\n  }\n  const opts = {\n    reply_markup: {\n      inline_keyboard: [\n        [\n          {\n            text: 'OctaClick 열기',\n            web_app: {\n              url: 'DEPLOYED_APP_URL'\n            }\n          }\n        ]\n      ]\n    }\n  };\n  bot.sendMessage(chatId, '환영합니다! 아래 버튼을 사용하여 미니 앱을 열어보세요:', opts);\n});\n```\n\n이상입니다!\n\n# 축하합니다! 텔레그램 클리커 앱을 만들었습니다.\n\n<div class=\"content-ad\"></div>\n\n이미지를 삽입했습니다!\n\n다른 글들:\n- 파트 1: 텔레그램 미니 앱 초보자 안내\n- Hotjar: 당신의 웹사이트 탐정","ogImage":{"url":"/assets/img/2024-06-22-ClickerAppTelegramMiniAppsPart2_0.png"},"coverImage":"/assets/img/2024-06-22-ClickerAppTelegramMiniAppsPart2_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-22-ClickerAppTelegramMiniAppsPart2_0.png\" alt=\"이미지\"></p>\n<p>이 글의 첫 번째 부분에서는 다음을 배웠어요</p>\n<ul>\n<li>BotFather를 사용하여 Telegram Bot을 만드는 방법</li>\n<li>TMA 프레임워크 사용법</li>\n<li>봇에 미니 앱 추가하는 방법</li>\n</ul>\n<p>이제 React + TWA + Node를 사용하여 Notcoin과 비슷한 간단한 클리커 앱을 만들어 볼 거에요.</p>\n<h1>앱 만들기</h1>\n<p>단계 1: 프로젝트를 초기화하고 React 앱에서 UI 라이브러리를 사용하려면 TWA 및 기타 종속성을 설치하세요.</p>\n<pre><code class=\"hljs language-js\">npm i @twa-dev/sdk\n</code></pre>\n<p>단계 2: 간단한 디자인을 만드세요(복잡하지 않아도 됩니다). 저는 3개의 섹션을 가지고 있을 것입니다: 포인트, 에너지 바와 버튼, 그리고 친구 초대 버튼.</p>\n<pre><code class=\"hljs language-js\">&#x3C;button\n  onClick={<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-title class_\">WebApp</span>.<span class=\"hljs-title function_\">openTelegramLink</span>(\n      <span class=\"hljs-string\">`https://t.me/share/url?url=http://t.me/YOUR_BOT_USERNAME?start=fren=<span class=\"hljs-subst\">${userId}</span>`</span>\n    );\n  }\n>\n  친구 초대하기\n&#x3C;/button>;\n</code></pre>\n<p>userId는 현재 사용자의 ID로, WebApp.initData 또는 WebApp.initDataUnsafe 메소드를 통해 얻을 수 있습니다.</p>\n<p>Step 3: 앱을 배포하고 프로젝트에 메뉴 버튼 링크를 추가하세요 (1부 참조)</p>\n<h1>백엔드 처리</h1>\n<p>Step 1: 노드 파일을 만들고 텔레그램을 위한 종속성 추가하세요</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TelegramBot</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'node-telegram-bot-api'</span>);\n\n<span class=\"hljs-keyword\">const</span> token = <span class=\"hljs-string\">'YOUR_TELEGRAM_TOKEN'</span>;\n<span class=\"hljs-keyword\">const</span> bot = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TelegramBot</span>(token, { <span class=\"hljs-attr\">polling</span>: <span class=\"hljs-literal\">true</span> });\n</code></pre>\n<p>단계 2: 사용자로부터 /start 메시지를 받으면 텍스트와 미니 앱을 열 수 있는 인라인 버튼을 전송합니다.</p>\n<pre><code class=\"hljs language-js\">bot.<span class=\"hljs-title function_\">onText</span>(<span class=\"hljs-regexp\">/\\/start/</span>, <span class=\"hljs-keyword\">async</span> (msg) => {\n\n  <span class=\"hljs-keyword\">const</span> chatId = msg.<span class=\"hljs-property\">chat</span>.<span class=\"hljs-property\">id</span>;\n  <span class=\"hljs-keyword\">const</span> user = msg.<span class=\"hljs-property\">from</span>;\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">const</span> user = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">getUser</span>(chatId);\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(msg.<span class=\"hljs-property\">text</span>)\n    <span class=\"hljs-keyword\">if</span> (!user.<span class=\"hljs-property\">exists</span>) {\n      <span class=\"hljs-keyword\">if</span> (msg.<span class=\"hljs-property\">text</span>.<span class=\"hljs-title function_\">includes</span>(<span class=\"hljs-string\">'fren'</span>)) {\n        <span class=\"hljs-keyword\">const</span> referrerId = msg.<span class=\"hljs-property\">text</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">'='</span>)[<span class=\"hljs-number\">1</span>]\n        <span class=\"hljs-title function_\">createReferralUser</span>(chatId, referrerId)\n      }\n    } \n    <span class=\"hljs-title function_\">createUser</span>(chatId);\n  } <span class=\"hljs-keyword\">catch</span> (error) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'오류:'</span>, error);\n  }\n  <span class=\"hljs-keyword\">const</span> opts = {\n    <span class=\"hljs-attr\">reply_markup</span>: {\n      <span class=\"hljs-attr\">inline_keyboard</span>: [\n        [\n          {\n            <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">'OctaClick 열기'</span>,\n            <span class=\"hljs-attr\">web_app</span>: {\n              <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'DEPLOYED_APP_URL'</span>\n            }\n          }\n        ]\n      ]\n    }\n  };\n  bot.<span class=\"hljs-title function_\">sendMessage</span>(chatId, <span class=\"hljs-string\">'환영합니다! 아래 버튼을 사용하여 미니 앱을 열어보세요:'</span>, opts);\n});\n</code></pre>\n<p>이상입니다!</p>\n<h1>축하합니다! 텔레그램 클리커 앱을 만들었습니다.</h1>\n<p>이미지를 삽입했습니다!</p>\n<p>다른 글들:</p>\n<ul>\n<li>파트 1: 텔레그램 미니 앱 초보자 안내</li>\n<li>Hotjar: 당신의 웹사이트 탐정</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}