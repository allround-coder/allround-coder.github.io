{"pageProps":{"post":{"title":"테일윈드 CSS로 레이아웃 마스터하기","description":"","date":"2024-06-20 05:55","slug":"2024-06-20-MasteringLayoutswithTailwindCSS","content":"\n\n테이블 태그를 마크다운 형식으로 변경해주세요.\n\n<div class=\"content-ad\"></div>\n\n이 예시에서는 `flex` 클래스를 사용하여 플렉스 컨테이너를 만들고, `w-1/2` 클래스를 사용하여 각 열의 너비를 컨테이너의 절반으로 설정했습니다. 또한 두 열을 구분하기 위해 서로 다른 배경 색상을 사용하고 있어요.\n\n# 반응형 레이아웃\n\nTailwind CSS를 사용하면 반응형 유틸리티 클래스를 이용하여 쉽게 반응형 레이아웃을 생성할 수 있어요. 예를 들어, 작은 화면에서 각 섹션을 위로 쌓으려면 `flex-col` 클래스를 추가하고 `flex-col` 클래스를 사용할 수 있어요:\n\n```js\n<div class=\"flex flex-col\">\n  <div class=\"bg-blue-500 text-white text-center py-4\">\n    상단 섹션\n  </div>\n  <div class=\"flex flex-col md:flex-row\">\n    <div class=\"w-full md:w-1/2 bg-blue-500 text-white text-center py-4\">\n      왼쪽 열\n    </div>\n    <div class=\"w-full md:w-1/2 bg-gray-200 text-center py-4\">\n      오른쪽 열\n    </div>\n  </div>\n</div>\n```\n\n<div class=\"content-ad\"></div>\n\n이 예시에서는 작은 화면에서 상단 섹션과 두 열을 수직으로 쌓기 위해 `flex-col` 클래스를 사용하고, 중간 크기 화면 이상에서는 열을 옆으로 배치하기 위해 `md:flex-row` 클래스를 사용합니다.\n\n# 콘텐츠 가운데 정렬하기\n\nTailwind CSS는 가로 및 세로로 콘텐츠를 쉽게 정렬할 수 있는 유틸리티 클래스를 제공합니다. 예를 들어, `div` 요소를 가로 및 세로로 가운데 정렬하려면 `flex` 및 `items-center justify-center` 클래스를 사용할 수 있습니다.\n\n```js\n<div class=\"h-64 flex items-center justify-center bg-blue-500 text-white\">\n  가운데 정렬된 콘텐츠\n</div>\n```  \n\n<div class=\"content-ad\"></div>\n\n# 결론\n\n이 튜토리얼에서는 Tailwind CSS의 유틸리티 클래스를 사용하여 유연하고 응답 형 레이아웃을 만드는 방법을 탐색했습니다. 기본적인 레이아웃을 만드는 방법, 그들을 응답 형으로 만드는 방법, 그리고 콘텐츠를 수평 및 수직으로 중앙 정렬하는 방법을 배웠습니다. 다음 튜토리얼에서는 Tailwind CSS를 더 깊이 파헤치고 더 고급적인 레이아웃 기술을 탐색할 것입니다. 기대해 주세요!","ogImage":{"url":"/assets/img/2024-06-20-MasteringLayoutswithTailwindCSS_0.png"},"coverImage":"/assets/img/2024-06-20-MasteringLayoutswithTailwindCSS_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>테이블 태그를 마크다운 형식으로 변경해주세요.</p>\n<p>이 예시에서는 <code>flex</code> 클래스를 사용하여 플렉스 컨테이너를 만들고, <code>w-1/2</code> 클래스를 사용하여 각 열의 너비를 컨테이너의 절반으로 설정했습니다. 또한 두 열을 구분하기 위해 서로 다른 배경 색상을 사용하고 있어요.</p>\n<h1>반응형 레이아웃</h1>\n<p>Tailwind CSS를 사용하면 반응형 유틸리티 클래스를 이용하여 쉽게 반응형 레이아웃을 생성할 수 있어요. 예를 들어, 작은 화면에서 각 섹션을 위로 쌓으려면 <code>flex-col</code> 클래스를 추가하고 <code>flex-col</code> 클래스를 사용할 수 있어요:</p>\n<pre><code class=\"hljs language-js\">&#x3C;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"flex flex-col\"</span>>\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"bg-blue-500 text-white text-center py-4\"</span>></span>\n    상단 섹션\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"flex flex-col md:flex-row\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"w-full md:w-1/2 bg-blue-500 text-white text-center py-4\"</span>></span>\n      왼쪽 열\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"w-full md:w-1/2 bg-gray-200 text-center py-4\"</span>></span>\n      오른쪽 열\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n&#x3C;/div>\n</code></pre>\n<p>이 예시에서는 작은 화면에서 상단 섹션과 두 열을 수직으로 쌓기 위해 <code>flex-col</code> 클래스를 사용하고, 중간 크기 화면 이상에서는 열을 옆으로 배치하기 위해 <code>md:flex-row</code> 클래스를 사용합니다.</p>\n<h1>콘텐츠 가운데 정렬하기</h1>\n<p>Tailwind CSS는 가로 및 세로로 콘텐츠를 쉽게 정렬할 수 있는 유틸리티 클래스를 제공합니다. 예를 들어, <code>div</code> 요소를 가로 및 세로로 가운데 정렬하려면 <code>flex</code> 및 <code>items-center justify-center</code> 클래스를 사용할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"h-64 flex items-center justify-center bg-blue-500 text-white\"</span>>\n  가운데 정렬된 콘텐츠\n&#x3C;/div>\n</code></pre>\n<h1>결론</h1>\n<p>이 튜토리얼에서는 Tailwind CSS의 유틸리티 클래스를 사용하여 유연하고 응답 형 레이아웃을 만드는 방법을 탐색했습니다. 기본적인 레이아웃을 만드는 방법, 그들을 응답 형으로 만드는 방법, 그리고 콘텐츠를 수평 및 수직으로 중앙 정렬하는 방법을 배웠습니다. 다음 튜토리얼에서는 Tailwind CSS를 더 깊이 파헤치고 더 고급적인 레이아웃 기술을 탐색할 것입니다. 기대해 주세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}