{"pageProps":{"post":{"title":"TypeScript로 쉽게 시작하는 방법","description":"","date":"2024-06-20 00:27","slug":"2024-06-20-MakingItEasierToGetStartedWithTypeScript","content":"\n\n\n<img src=\"/assets/img/2024-06-20-MakingItEasierToGetStartedWithTypeScript_0.png\" />\n\n# 함수 정의\n\nTypeScript에서 함수를 정의하는 여러 가지 방법을 설명하기 위해 몇 가지 쉽게 이해할 수 있는 예제로 시작해봅시다.\n\n- 함수 선언 방법\n\n\n<div class=\"content-ad\"></div>\n\n2. 익명 함수 방법\n\n3. 매개변수를 전달하도록 방법을 정의하고, 매개변수와 메서드 이름의 유형을 선언합니다.\n\n4. 선언된 유형의 매개변수 및 메서드 이름으로 매개변수를 전달하는 익명 함수\n\n5. 반환 값을 갖지 않는 메서드.\n\n<div class=\"content-ad\"></div>\n\n6. TypeScript에서는 형식 매개변수와 실 매개변수가 동일해야 하며, 그렇지 않으면 옵션 매개변수를 구성하여 ? 기호를 추가해야 합니다.\n\n7. TypeScript에서 기본 매개변수 설정하기.\n\n8. TypeScript에서 ES6 나머지 매개변수 사용법.\n\n9. TypeScript에서 함수 오버로딩 사용하기. 함수 오버로딩이란 동일한 이름을 가진 두 개 이상의 함수가 있고 그 중 하나가 인수의 수나 유형에 따라 선택적으로 실행되어 결과가 다른 경우를 말합니다.\n\n<div class=\"content-ad\"></div>\n\nES5에서 동일한 이름의 함수가 있는 경우, 나중에 선언된 함수가 먼저 선언된 함수를 덮어쓸 것이며, TS에서는 다음과 같이 작성됩니다.\n\n위 방법의 변형은 다음과 같이 작성할 수도 있습니다.\n\n# 클래스와 상속\n\nTypeScript의 클래스와 상속 방법은 기본적으로 ES6와 동일하며 다음과 같이 작성됩니다.\n\n<div class=\"content-ad\"></div>\n\n- 정의 클래스\n\n2. 상속 클래스\n\n3. TypeScript에서 클래스의 수정자는 C++과 주로 다음과 같습니다.\n\n(1) public\n\n<div class=\"content-ad\"></div>\n\n클래스 내부에서, 서브클래스 내부에서, 그리고 클래스 외부에서 접근할 수 있습니다. 어떤 수정자도 추가되지 않으면 프로퍼티는 기본적으로 공개(public)입니다.\n\n(2) protected\n\n클래스 및 서브클래스 내부에서 접근할 수 있지만 클래스 외부에서는 접근할 수 없습니다.\n\n(3) private\n\n<div class=\"content-ad\"></div>\n\n클래스 내부에서 접근할 수 있지만 하위 클래스나 외부에서는 접근할 수 없습니다.\n\n이 시리즈의 기사들은 TypeScript를 간단한 예제와 함께 시작하는 데 도움을 줄 수 있도록 전념되어 있습니다. 제 기사에 관심이 있다면, Medium이나 Twitter에서 저를 팔로우할 수 있습니다.\n\n# Level Up Coding\n\n우리 커뮤니티의 일원이 되어 주셔서 감사합니다! 떠나시기 전에:\n\n<div class=\"content-ad\"></div>\n\n- 이야기에 👏 박수를 보내고 저자를 팔로우하세요 👉\n- Level Up Coding 출판물에서 더 많은 컨텐츠 확인하기 📰\n- 🔔 팔로우하기: 트위터 | 링크드인 | 뉴스레터\n\n🚀👉 Level Up 인재 컬렉티브에 참여하고 놀라운 채용 정보를 찾아보세요","ogImage":{"url":"/assets/img/2024-06-20-MakingItEasierToGetStartedWithTypeScript_0.png"},"coverImage":"/assets/img/2024-06-20-MakingItEasierToGetStartedWithTypeScript_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>함수 정의</h1>\n<p>TypeScript에서 함수를 정의하는 여러 가지 방법을 설명하기 위해 몇 가지 쉽게 이해할 수 있는 예제로 시작해봅시다.</p>\n<ul>\n<li>함수 선언 방법</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>익명 함수 방법</p>\n</li>\n<li>\n<p>매개변수를 전달하도록 방법을 정의하고, 매개변수와 메서드 이름의 유형을 선언합니다.</p>\n</li>\n<li>\n<p>선언된 유형의 매개변수 및 메서드 이름으로 매개변수를 전달하는 익명 함수</p>\n</li>\n<li>\n<p>반환 값을 갖지 않는 메서드.</p>\n</li>\n</ol>\n<ol start=\"6\">\n<li>\n<p>TypeScript에서는 형식 매개변수와 실 매개변수가 동일해야 하며, 그렇지 않으면 옵션 매개변수를 구성하여 ? 기호를 추가해야 합니다.</p>\n</li>\n<li>\n<p>TypeScript에서 기본 매개변수 설정하기.</p>\n</li>\n<li>\n<p>TypeScript에서 ES6 나머지 매개변수 사용법.</p>\n</li>\n<li>\n<p>TypeScript에서 함수 오버로딩 사용하기. 함수 오버로딩이란 동일한 이름을 가진 두 개 이상의 함수가 있고 그 중 하나가 인수의 수나 유형에 따라 선택적으로 실행되어 결과가 다른 경우를 말합니다.</p>\n</li>\n</ol>\n<p>ES5에서 동일한 이름의 함수가 있는 경우, 나중에 선언된 함수가 먼저 선언된 함수를 덮어쓸 것이며, TS에서는 다음과 같이 작성됩니다.</p>\n<p>위 방법의 변형은 다음과 같이 작성할 수도 있습니다.</p>\n<h1>클래스와 상속</h1>\n<p>TypeScript의 클래스와 상속 방법은 기본적으로 ES6와 동일하며 다음과 같이 작성됩니다.</p>\n<ul>\n<li>정의 클래스</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>상속 클래스</p>\n</li>\n<li>\n<p>TypeScript에서 클래스의 수정자는 C++과 주로 다음과 같습니다.</p>\n</li>\n</ol>\n<p>(1) public</p>\n<p>클래스 내부에서, 서브클래스 내부에서, 그리고 클래스 외부에서 접근할 수 있습니다. 어떤 수정자도 추가되지 않으면 프로퍼티는 기본적으로 공개(public)입니다.</p>\n<p>(2) protected</p>\n<p>클래스 및 서브클래스 내부에서 접근할 수 있지만 클래스 외부에서는 접근할 수 없습니다.</p>\n<p>(3) private</p>\n<p>클래스 내부에서 접근할 수 있지만 하위 클래스나 외부에서는 접근할 수 없습니다.</p>\n<p>이 시리즈의 기사들은 TypeScript를 간단한 예제와 함께 시작하는 데 도움을 줄 수 있도록 전념되어 있습니다. 제 기사에 관심이 있다면, Medium이나 Twitter에서 저를 팔로우할 수 있습니다.</p>\n<h1>Level Up Coding</h1>\n<p>우리 커뮤니티의 일원이 되어 주셔서 감사합니다! 떠나시기 전에:</p>\n<ul>\n<li>이야기에 👏 박수를 보내고 저자를 팔로우하세요 👉</li>\n<li>Level Up Coding 출판물에서 더 많은 컨텐츠 확인하기 📰</li>\n<li>🔔 팔로우하기: 트위터 | 링크드인 | 뉴스레터</li>\n</ul>\n<p>🚀👉 Level Up 인재 컬렉티브에 참여하고 놀라운 채용 정보를 찾아보세요</p>\n</body>\n</html>\n"},"__N_SSG":true}