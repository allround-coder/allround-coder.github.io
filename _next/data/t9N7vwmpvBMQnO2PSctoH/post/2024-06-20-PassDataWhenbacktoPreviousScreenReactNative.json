{"pageProps":{"post":{"title":"이전 화면으로 돌아갈 때 데이터 전송하기 React Native","description":"","date":"2024-06-20 05:15","slug":"2024-06-20-PassDataWhenbacktoPreviousScreenReactNative","content":"\n\n리액트 네비게이션에서 navigation.goBack 함수를 사용하면 스택 내비게이터에서 이전 화면으로 돌아갈 수 있어요. 이전 화면으로 돌아갈 때 데이터를 전달하고 싶다면 params 속성과 함께 navigation.goBack 함수를 사용할 수 있어요.\n\n예를 들어:\n\nScreenA와 ScreenB 두 개의 화면이 있다고 가정해봅시다. ScreenA에서 ScreenB로 이동한 다음 ScreenA로 돌아가면서 데이터를 전달하고 싶다면요.\n\nScreenA에서:\n\n<div class=\"content-ad\"></div>\n\n```js\nimport React, { useState } from 'react';\nimport { View, Text, Button } from 'react-native';\n\nconst ScreenA = ({ navigation }) => {\n  const [dataFromScreenB, setDataFromScreenB] = useState(null);\n\n  const navigateToScreenB = () => {\n    navigation.navigate('ScreenB', {\n      onGoBack: (data) => {\n        // ScreenB로부터 데이터를 처리하는 콜백 함수\n        setDataFromScreenB(data);\n      },\n    });\n  };\n\n  return (\n    <View>\n      <Text>ScreenB로부터의 데이터: {dataFromScreenB}</Text>\n      <Button title=\"ScreenB로 이동\" onPress={navigateToScreenB} />\n    </View>\n  );\n};\n\nexport default ScreenA;\n```\n\n```js\nimport React, { useState } from 'react';\nimport { View, TextInput, Button } from 'react-native';\n\nconst ScreenB = ({ route, navigation }) => {\n  const [dataToSendBack, setDataToSendBack] = useState('');\n\n  const handleGoBack = () => {\n    // onGoBack 콜백을 사용해 ScreenA로 데이터 전달\n    route.params.onGoBack(dataToSendBack);\n    navigation.goBack();\n  };\n\n  return (\n    <View>\n      <TextInput\n        placeholder=\"데이터 입력\"\n        value={dataToSendBack}\n        onChangeText={(text) => setDataToSendBack(text)}\n      />\n      <Button title=\"데이터와 함께 돌아가기\" onPress={handleGoBack} />\n    </View>\n  );\n};\n\nexport default ScreenB;\n```\n\n이 예시에서:\n- ScreenA는 navigation.navigate를 사용하여 ScreenB로 이동하고 매개변수로 콜백 함수(onGoBack)를 전달합니다.\n- ScreenB는 navigation route에서 콜백 함수를 추출하고 이를 사용하여 되돌아갈 때 ScreenA로 데이터를 전달합니다.\n\n<div class=\"content-ad\"></div>\n\n이 패턴은 navigation.goBack를 사용할 때 자식 화면(ScreenB)에서 부모 화면(ScreenA)로 데이터를 전달할 수 있는 방법입니다. 코드를 귀하의 특정 사용 사례와 데이터 요구 사항에 맞게 조정해주세요.\n\n감사합니다!!!","ogImage":{"url":"/assets/img/2024-06-20-PassDataWhenbacktoPreviousScreenReactNative_0.png"},"coverImage":"/assets/img/2024-06-20-PassDataWhenbacktoPreviousScreenReactNative_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>리액트 네비게이션에서 navigation.goBack 함수를 사용하면 스택 내비게이터에서 이전 화면으로 돌아갈 수 있어요. 이전 화면으로 돌아갈 때 데이터를 전달하고 싶다면 params 속성과 함께 navigation.goBack 함수를 사용할 수 있어요.</p>\n<p>예를 들어:</p>\n<p>ScreenA와 ScreenB 두 개의 화면이 있다고 가정해봅시다. ScreenA에서 ScreenB로 이동한 다음 ScreenA로 돌아가면서 데이터를 전달하고 싶다면요.</p>\n<p>ScreenA에서:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">View</span>, <span class=\"hljs-title class_\">Text</span>, <span class=\"hljs-title class_\">Button</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-native'</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">ScreenA</span> = (<span class=\"hljs-params\">{ navigation }</span>) => {\n  <span class=\"hljs-keyword\">const</span> [dataFromScreenB, setDataFromScreenB] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-literal\">null</span>);\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">navigateToScreenB</span> = (<span class=\"hljs-params\"></span>) => {\n    navigation.<span class=\"hljs-title function_\">navigate</span>(<span class=\"hljs-string\">'ScreenB'</span>, {\n      <span class=\"hljs-attr\">onGoBack</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =></span> {\n        <span class=\"hljs-comment\">// ScreenB로부터 데이터를 처리하는 콜백 함수</span>\n        <span class=\"hljs-title function_\">setDataFromScreenB</span>(data);\n      },\n    });\n  };\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">View</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Text</span>></span>ScreenB로부터의 데이터: {dataFromScreenB}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">Text</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"ScreenB로 이동\"</span> <span class=\"hljs-attr\">onPress</span>=<span class=\"hljs-string\">{navigateToScreenB}</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">View</span>></span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">ScreenA</span>;\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">View</span>, <span class=\"hljs-title class_\">TextInput</span>, <span class=\"hljs-title class_\">Button</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-native'</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">ScreenB</span> = (<span class=\"hljs-params\">{ route, navigation }</span>) => {\n  <span class=\"hljs-keyword\">const</span> [dataToSendBack, setDataToSendBack] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-string\">''</span>);\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">handleGoBack</span> = (<span class=\"hljs-params\"></span>) => {\n    <span class=\"hljs-comment\">// onGoBack 콜백을 사용해 ScreenA로 데이터 전달</span>\n    route.<span class=\"hljs-property\">params</span>.<span class=\"hljs-title function_\">onGoBack</span>(dataToSendBack);\n    navigation.<span class=\"hljs-title function_\">goBack</span>();\n  };\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">View</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">TextInput</span>\n        <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"데이터 입력\"</span>\n        <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{dataToSendBack}</span>\n        <span class=\"hljs-attr\">onChangeText</span>=<span class=\"hljs-string\">{(text)</span> =></span> setDataToSendBack(text)}\n      />\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"데이터와 함께 돌아가기\"</span> <span class=\"hljs-attr\">onPress</span>=<span class=\"hljs-string\">{handleGoBack}</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">View</span>></span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">ScreenB</span>;\n</code></pre>\n<p>이 예시에서:</p>\n<ul>\n<li>ScreenA는 navigation.navigate를 사용하여 ScreenB로 이동하고 매개변수로 콜백 함수(onGoBack)를 전달합니다.</li>\n<li>ScreenB는 navigation route에서 콜백 함수를 추출하고 이를 사용하여 되돌아갈 때 ScreenA로 데이터를 전달합니다.</li>\n</ul>\n<p>이 패턴은 navigation.goBack를 사용할 때 자식 화면(ScreenB)에서 부모 화면(ScreenA)로 데이터를 전달할 수 있는 방법입니다. 코드를 귀하의 특정 사용 사례와 데이터 요구 사항에 맞게 조정해주세요.</p>\n<p>감사합니다!!!</p>\n</body>\n</html>\n"},"__N_SSG":true}