{"pageProps":{"post":{"title":"CSS와 JavaScript로 다크 모드 구현하는 방법","description":"","date":"2024-06-22 15:19","slug":"2024-06-22-ImplementingDarkModewithCSSandJavaScript","content":"\n\n<img src=\"/assets/img/2024-06-22-ImplementingDarkModewithCSSandJavaScript_0.png\" />\n\n요즘 웹 개발 환경에서는 웹사이트에 다크 모드 기능을 제공하는 것이 트렌드를 따르는 것 이상의 의미를 가지고 있습니다. 이제 사용자 경험의 중요한 측면이 되었습니다. 다크 모드는 전통적인 밝은 배경 대비로 안경 피로를 줄이고, OLED 및 AMOLED 화면에서 배터리 수명을 절약하며, 하루 중 다양한 시간에 사용자 선호도를 수용함으로써 미학적으로 매력적인 대안을 제공합니다. CSS를 스타일링에 활용하고 JavaScript를 기능에 활용함으로써, 다크 모드를 구현하는 것이 효율적이고 매우 사용자 정의할 수 있습니다. 이 안내서는 웹사이트에 다크 모드 기능을 추가하는 방법을 전체적으로 안내하며, 디자인 측면에서 CSS를 사용하고 모드 간 전환을 위해 JavaScript를 사용합니다.\n\n# CSS와 JavaScript 사용의 이점\n\n구현 세부 사항에 대해 자세히 알아보기 전에, CSS와 JavaScript를 사용하는 것이 다크 모드 기능을 만드는 데 유리한 이유를 살펴보겠습니다:\n\n<div class=\"content-ad\"></div>\n\n- CSS: Cascading Style Sheets (CSS)는 문서의 프리젠테이션을 내용으로부터 분리할 수 있게 해줍니다. CSS 변수와 미디어 쿼리를 사용하여 어두운 테마와 밝은 테마 스타일을 효율적으로 정의하고 원활하게 전환할 수 있습니다.\n- JavaScript: JavaScript는 사용자 상호작용을 기반으로 테마 간 전환을 중요한 역할을 합니다. 클래스를 동적으로 추가하거나 제거하고, 실시간으로 CSS 변수를 조작하며, 심지어 후속 방문을 위한 사용자 환경 설정을 저장하는 데 사용할 수 있습니다.\n\nCSS의 스타일링 기능과 JavaScript의 인터랙티브 기능을 결합하면 견고하고 사용자 친화적인 다크 모드 기능을 구현할 수 있습니다.\n\n다른 읽을거리: 페이지 로드 시간을 위한 CSS 최적화 기법\n\n# 단계별 구현\n\n<div class=\"content-ad\"></div>\n\n# 단계 1: 색 스키마를 위한 CSS 변수 정의\n\n먼저, 밝은 모드와 어두운 모드의 색상 값을 나타내는 CSS 변수 세트를 정의하세요. 이 방법을 사용하면 이러한 변수의 값을 전환함으로써 색상 스키마를 쉽게 변경할 수 있습니다.\n\n```css\n:root {\n  --background-color-light: #ffffff;\n  --text-color-light: #000000;\n  --background-color-dark: #121212;\n  --text-color-dark: #ffffff;\n}\n```\n\n# 단계 2: 기본 밝은 모드 적용\n\n<div class=\"content-ad\"></div>\n\n정의된 CSS 변수를 사용하여 기본 라이트 모드 스타일을 적용하십시오. 이 단계를 통해 웹 사이트가 나중에 전환될 수 있는 기본외관을 갖게 됩니다. \n\n```js\nbody {\n  background-color: var(--background-color-light);\n  color: var(--text-color-light);\n}\n```\n\n# 단계 3: 클래스를 사용하여 다크 모드 스타일 추가\n\n기본의 라이트 모드 스타일을 다크 모드 값으로 변경하는 클래스 .dark-mode를 생성하십시오. 이 클래스는 사용자의 선택에 따라 JavaScript를 사용하여 토글됩니다.\n\n<div class=\"content-ad\"></div>\n\n```css\n.dark-mode {\n  background-color: var(--background-color-dark);\n  color: var(--text-color-dark);\n}\n```\n\n# 단계 4: JavaScript를 사용하여 다크 모드 전환\n\n`body` 태그에 있는 `.dark-mode` 클래스를 토글하는 JavaScript 함수를 구현하세요. 이 함수는 버튼 클릭 또는 선택한 다른 이벤트로 트리거될 수 있습니다.\n\n```js\nfunction toggleDarkMode() {\n  document.body.classList.toggle('dark-mode');\n}\n```\n\n<div class=\"content-ad\"></div>\n\n# 단계 5: 사용자의 선호도 기억하기\n\n사용자 경험을 향상시키기 위해 localStorage 기능을 사용하여 사용자의 테마 선호도를 세션 간에 기억합니다.\n\n```js\nfunction toggleDarkMode() {\n  let isDark = document.body.classList.toggle('dark-mode');\n  localStorage.setItem('darkMode', isDark ? 'enabled' : 'disabled');\n}\n\n// 페이지 로드 시\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  if (localStorage.getItem('darkMode') === 'enabled') {\n    document.body.classList.add('dark-mode');\n  }\n});\n```\n\n# 단계 6: 토글 버튼 추가\n\n<div class=\"content-ad\"></div>\n\n마침내, 웹 사이트에 다크 모드 전환 함수를 호출하는 버튼을 추가해보세요. 이렇게 하면 사용자가 모드를 쉽게 전환할 수 있습니다.\n\n```js\n<button onclick=\"toggleDarkMode()\">다크 모드 전환</button>\n```\n\n# 워드프레스 사이트를 위한 편리한 호스팅\n\n워드프레스 사이트에 좋은 호스팅을 찾고 계신가요? Host4Biz를 주목해보세요. 유럽에 현대적인 서버를 갖추고 있는 신뢰할 수 있는 호스팅업체로, 우크라이나 팀이 운영하고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n프로모션 코드 MYHOST10을 사용하면 첫 결제 시 10% 할인 혜택을 받을 수 있어요. 이를 위해서는 여기에서 등록하고 결제 전에 코드를 입력해주세요.\n\n다른 읽을 가치가 있는 기사인 '온라인으로 식당 홍보하는 방법: 효과적인 디지털 마케팅 전략'도 확인해보세요.\n\n# 마무리\n\nCSS와 JavaScript를 사용하여 다크 모드를 구현하는 것은 간단할 뿐만 아니라 사용자 경험을 크게 향상시킵니다. 이 안내서에서 안내된 단계를 따라가면 사용자가 선호하는 테마를 선택할 수 있는 유연성을 제공하여 참여도와 만족도를 높일 수 있습니다. 성공적인 다크 모드 구현의 핵심은 세부 사항에 주의를 기울이는 것이 중요하며, 특히 두 모드 모두 색 대비와 가독성에 있어서입니다. 즐거운 코딩 되세요!","ogImage":{"url":"/assets/img/2024-06-22-ImplementingDarkModewithCSSandJavaScript_0.png"},"coverImage":"/assets/img/2024-06-22-ImplementingDarkModewithCSSandJavaScript_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>요즘 웹 개발 환경에서는 웹사이트에 다크 모드 기능을 제공하는 것이 트렌드를 따르는 것 이상의 의미를 가지고 있습니다. 이제 사용자 경험의 중요한 측면이 되었습니다. 다크 모드는 전통적인 밝은 배경 대비로 안경 피로를 줄이고, OLED 및 AMOLED 화면에서 배터리 수명을 절약하며, 하루 중 다양한 시간에 사용자 선호도를 수용함으로써 미학적으로 매력적인 대안을 제공합니다. CSS를 스타일링에 활용하고 JavaScript를 기능에 활용함으로써, 다크 모드를 구현하는 것이 효율적이고 매우 사용자 정의할 수 있습니다. 이 안내서는 웹사이트에 다크 모드 기능을 추가하는 방법을 전체적으로 안내하며, 디자인 측면에서 CSS를 사용하고 모드 간 전환을 위해 JavaScript를 사용합니다.</p>\n<h1>CSS와 JavaScript 사용의 이점</h1>\n<p>구현 세부 사항에 대해 자세히 알아보기 전에, CSS와 JavaScript를 사용하는 것이 다크 모드 기능을 만드는 데 유리한 이유를 살펴보겠습니다:</p>\n<ul>\n<li>CSS: Cascading Style Sheets (CSS)는 문서의 프리젠테이션을 내용으로부터 분리할 수 있게 해줍니다. CSS 변수와 미디어 쿼리를 사용하여 어두운 테마와 밝은 테마 스타일을 효율적으로 정의하고 원활하게 전환할 수 있습니다.</li>\n<li>JavaScript: JavaScript는 사용자 상호작용을 기반으로 테마 간 전환을 중요한 역할을 합니다. 클래스를 동적으로 추가하거나 제거하고, 실시간으로 CSS 변수를 조작하며, 심지어 후속 방문을 위한 사용자 환경 설정을 저장하는 데 사용할 수 있습니다.</li>\n</ul>\n<p>CSS의 스타일링 기능과 JavaScript의 인터랙티브 기능을 결합하면 견고하고 사용자 친화적인 다크 모드 기능을 구현할 수 있습니다.</p>\n<p>다른 읽을거리: 페이지 로드 시간을 위한 CSS 최적화 기법</p>\n<h1>단계별 구현</h1>\n<h1>단계 1: 색 스키마를 위한 CSS 변수 정의</h1>\n<p>먼저, 밝은 모드와 어두운 모드의 색상 값을 나타내는 CSS 변수 세트를 정의하세요. 이 방법을 사용하면 이러한 변수의 값을 전환함으로써 색상 스키마를 쉽게 변경할 수 있습니다.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-pseudo\">:root</span> {\n  <span class=\"hljs-attr\">--background-color-light</span>: <span class=\"hljs-number\">#ffffff</span>;\n  <span class=\"hljs-attr\">--text-color-light</span>: <span class=\"hljs-number\">#000000</span>;\n  <span class=\"hljs-attr\">--background-color-dark</span>: <span class=\"hljs-number\">#121212</span>;\n  <span class=\"hljs-attr\">--text-color-dark</span>: <span class=\"hljs-number\">#ffffff</span>;\n}\n</code></pre>\n<h1>단계 2: 기본 밝은 모드 적용</h1>\n<p>정의된 CSS 변수를 사용하여 기본 라이트 모드 스타일을 적용하십시오. 이 단계를 통해 웹 사이트가 나중에 전환될 수 있는 기본외관을 갖게 됩니다.</p>\n<pre><code class=\"hljs language-js\">body {\n  background-<span class=\"hljs-attr\">color</span>: <span class=\"hljs-title function_\">var</span>(--background-color-light);\n  <span class=\"hljs-attr\">color</span>: <span class=\"hljs-title function_\">var</span>(--text-color-light);\n}\n</code></pre>\n<h1>단계 3: 클래스를 사용하여 다크 모드 스타일 추가</h1>\n<p>기본의 라이트 모드 스타일을 다크 모드 값으로 변경하는 클래스 .dark-mode를 생성하십시오. 이 클래스는 사용자의 선택에 따라 JavaScript를 사용하여 토글됩니다.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.dark-mode</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">var</span>(--background-color-dark);\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--text-color-dark);\n}\n</code></pre>\n<h1>단계 4: JavaScript를 사용하여 다크 모드 전환</h1>\n<p><code>body</code> 태그에 있는 <code>.dark-mode</code> 클래스를 토글하는 JavaScript 함수를 구현하세요. 이 함수는 버튼 클릭 또는 선택한 다른 이벤트로 트리거될 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">toggleDarkMode</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-string\">'dark-mode'</span>);\n}\n</code></pre>\n<h1>단계 5: 사용자의 선호도 기억하기</h1>\n<p>사용자 경험을 향상시키기 위해 localStorage 기능을 사용하여 사용자의 테마 선호도를 세션 간에 기억합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">toggleDarkMode</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">let</span> isDark = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-string\">'dark-mode'</span>);\n  <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">'darkMode'</span>, isDark ? <span class=\"hljs-string\">'enabled'</span> : <span class=\"hljs-string\">'disabled'</span>);\n}\n\n<span class=\"hljs-comment\">// 페이지 로드 시</span>\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'DOMContentLoaded'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =></span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">'darkMode'</span>) === <span class=\"hljs-string\">'enabled'</span>) {\n    <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">'dark-mode'</span>);\n  }\n});\n</code></pre>\n<h1>단계 6: 토글 버튼 추가</h1>\n<p>마침내, 웹 사이트에 다크 모드 전환 함수를 호출하는 버튼을 추가해보세요. 이렇게 하면 사용자가 모드를 쉽게 전환할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;button onclick=<span class=\"hljs-string\">\"toggleDarkMode()\"</span>>다크 모드 전환&#x3C;/button>\n</code></pre>\n<h1>워드프레스 사이트를 위한 편리한 호스팅</h1>\n<p>워드프레스 사이트에 좋은 호스팅을 찾고 계신가요? Host4Biz를 주목해보세요. 유럽에 현대적인 서버를 갖추고 있는 신뢰할 수 있는 호스팅업체로, 우크라이나 팀이 운영하고 있습니다.</p>\n<p>프로모션 코드 MYHOST10을 사용하면 첫 결제 시 10% 할인 혜택을 받을 수 있어요. 이를 위해서는 여기에서 등록하고 결제 전에 코드를 입력해주세요.</p>\n<p>다른 읽을 가치가 있는 기사인 '온라인으로 식당 홍보하는 방법: 효과적인 디지털 마케팅 전략'도 확인해보세요.</p>\n<h1>마무리</h1>\n<p>CSS와 JavaScript를 사용하여 다크 모드를 구현하는 것은 간단할 뿐만 아니라 사용자 경험을 크게 향상시킵니다. 이 안내서에서 안내된 단계를 따라가면 사용자가 선호하는 테마를 선택할 수 있는 유연성을 제공하여 참여도와 만족도를 높일 수 있습니다. 성공적인 다크 모드 구현의 핵심은 세부 사항에 주의를 기울이는 것이 중요하며, 특히 두 모드 모두 색 대비와 가독성에 있어서입니다. 즐거운 코딩 되세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}