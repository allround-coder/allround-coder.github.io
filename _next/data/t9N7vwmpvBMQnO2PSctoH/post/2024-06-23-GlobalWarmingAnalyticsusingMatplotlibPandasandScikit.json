{"pageProps":{"post":{"title":"Matplotlib, Pandas, Scikit으로 하는 지구 온난화 분석 방법","description":"","date":"2024-06-23 13:26","slug":"2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit","content":"\n\nNASA의 실제 글로벌 표면 온도 데이터 분석입니다.\n\n지난 몇 년 동안 여름에 온도 상승을 느낄 수 있었어요. 우리는 지난 몇 십 년간 NASA에 기록된 글로벌 표면 온도 지수에 대한 연구를 진행하고 파이썬 선형 회귀 모델을 기반으로 미래 추세를 파악할 거에요.\n\n![Global Warming Plot](/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_0.png)\n\n지난 140년간의 지구 온난화 그래프:\n\n<div class=\"content-ad\"></div>\n\n우리는 데이터 프레임 gw에 전체 지구 온난화 데이터를 로드하고, 지난 140년간의 완전한 그래프 플롯을 생성했습니다 (음수 섭씨는 녹색, 양수 섭씨는 빨강색). 1970년부터 온도가 천천히 빨간 색으로 변하기 시작했고, 되돌아보지 않은 것 같습니다. 표면 온도가 0도 섭씨를 넘어선 후로 남극과 북극의 얼음이 천천히 녹고 있습니다.\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ngw = pd.read_csv(\"Global_Warming.csv\") # 지구 온난화 데이터를 gw에 로드합니다.\n\nx = gw['Year'] # 연도 값을 x에 할당합니다.\ny = gw['Index'] # 지수 값을 y에 할당합니다.\n\ngw2000 = gw[(gw['Year'] > 1999)]  # 2000년 이후의 데이터를 gw2000에 할당합니다.\ngw2010 = gw[(gw['Year'] > 2009)]  # 2010년 이후의 데이터를 gw2010에 할당합니다.\n\nx1 = gw2000['Year']\ny1 = gw2000['Index']\n\nx2 = gw2010['Year']\ny2 = gw2010['Index']\n\n# 음수 지수는 녹색, 양수는 빨간색으로 표시됩니다.\ncolors = np.where(gw['Index'] >= 0, 'r', 'g') \n\nplt.figure(figsize =(20,8))\nplt.subplot(2, 1, 1)  # 전체 그래프를 표시할 첫 번째 행입니다.\nplt.xlabel('Year') \nplt.ylabel('Index') \nplt.bar(x, y, color=colors)\n\nplt.subplot(2, 2, 3) # 2000년 이후 그래프를 표시할 두 번째 행 첫 번째 열입니다.\nplt.xlabel('2000년부터의 연도') \nplt.ylabel('Index') \nplt.scatter(x1, y1, s=100, c='y', marker=\"o\", alpha=1, edgecolor='r')\n\nplt.subplot(2, 2, 4) # 2010년 이후 그래프를 표시할 두 번째 행 두 번째 열입니다.\nplt.xlabel('2010년부터의 연도') \nplt.ylabel('Index') \n\nplt.scatter(x2, y2, s=400, c='r', marker=\"^\", alpha=1, edgecolor='b')\n```\n\n<img src=\"/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_1.png\" />\n\n직선 방정식의 값을 식별하는 중입니다.\n\n<div class=\"content-ad\"></div>\n\nY = mx + c의 직선 방정식입니다.\n여기서 m은 추세의 기욱이고 c는 Y-절편의 높이입니다.\nscikit 라이브러리를 사용하여 기울기(m)와 Y-절편(c)의 값을 생성할 예정입니다.\n\n```js\n# 완전한 데이터 세트 중 1974 이후의 데이터로 데이터프레임 생성.\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nX = np.array(gw1974['Year'])\ny = np.array(gw1974['Index'])\nregression_model = LinearRegression() # scikit의 선형 회귀 모델 사용\nregression_model.fit(X.reshape(-1,1), y)\nslope = regression_model.coef_  # 기울기 값 식별\nintercept = regression_model.intercept_ # Y-절편 값 식별\nprint(\"기울기(m) 값은 \", slope, \"|| Y-절편(c) 값은 \", intercept)\n```\n\n```js\n1975년 이후의 NASA 표면 온도 지수(Celsius) 데이터셋입니다.\nYear Index\n1975 0.02\n1976 0.04\n1977 0.07\n1978 0.12\n1979 0.16\n...\n2022 1.00\n2023 1.02\n```\n\n<img src=\"/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_2.png\" />\n\n<div class=\"content-ad\"></div>\n\n미래 추세를 생성하기 위해 기울기와 Y-절편을 기반으로 하는 테이블 값을 변환했습니다:\n\n```js\ndef line(x):\n  # 함수 y = mx + c에 기울기(m)와 절편(c) 값을 할당합니다.\n  return 0.0196163 * x + (-38.71344489795919) \nx_pred = range(1974,2051)  # 1974년부터 2051년까지의 범위입니다.\n\n# 연도가 증가함에 따라 직선 방정식을 기반으로 기울기가 추가됩니다.\ny_pred = [line(i) for i in x_pred] \n\nimport matplotlib.pyplot as plt\nfig,ax = plt.subplots()\nax.bar(gw1974['Year'],gw1974['Index'],color = ['g'])\nax.stackplot(x_pred,y_pred, color=\"y\",linewidth = 2.5,linestyle = '--',alpha = 0.40)\nax.set_xlabel('Year')\nax.set_ylabel('표면 온도 지수')\nplt.title('지구 온난화 추세')\nplt.show()\n```\n\n직선 방정식을 기반으로 미래 추세를 생성하고, 지구 표면 지수가 매우 빠른 시간 내에 1.4도 섭씨를 넘는 것을 확인했습니다.\n\n<img src=\"/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_3.png\" />\n\n<div class=\"content-ad\"></div>\n\n지난 몇 년 동안 표면 온도 분석을 기반으로 한 추론:\n\n- 탄소 배출이 중요하게 제어/감소되지 않으면 다음 24년 안에 표면 온도가 1.40도 섭씨를 넘을 것입니다.\n- 탄소 배출량이 증가하면 2050년 이전에 표면 온도가 1.50도 섭씨를 넘을 가능성이 있습니다.\n- 지속 가능한 에너지(태양광, 풍력, 수력, 생물 에너지)가 앞으로 지구 온난화를 통제하는 유일한 해결책이 될 것입니다.\n\n분석을 통해, 온난화가 개념으로만 여겨졌던 것보다 실제로 더 위험한 것으로 보입니다. 탄소 배출이 감소되지 않으면 전 세계적으로 재앙적인 기후 변화가 발생할 것입니다.","ogImage":{"url":"/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_0.png"},"coverImage":"/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>NASA의 실제 글로벌 표면 온도 데이터 분석입니다.</p>\n<p>지난 몇 년 동안 여름에 온도 상승을 느낄 수 있었어요. 우리는 지난 몇 십 년간 NASA에 기록된 글로벌 표면 온도 지수에 대한 연구를 진행하고 파이썬 선형 회귀 모델을 기반으로 미래 추세를 파악할 거에요.</p>\n<p><img src=\"/assets/img/2024-06-23-GlobalWarmingAnalyticsusingMatplotlibPandasandScikit_0.png\" alt=\"Global Warming Plot\"></p>\n<p>지난 140년간의 지구 온난화 그래프:</p>\n<p>우리는 데이터 프레임 gw에 전체 지구 온난화 데이터를 로드하고, 지난 140년간의 완전한 그래프 플롯을 생성했습니다 (음수 섭씨는 녹색, 양수 섭씨는 빨강색). 1970년부터 온도가 천천히 빨간 색으로 변하기 시작했고, 되돌아보지 않은 것 같습니다. 표면 온도가 0도 섭씨를 넘어선 후로 남극과 북극의 얼음이 천천히 녹고 있습니다.</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt\n\ngw = pd.read_csv(<span class=\"hljs-string\">\"Global_Warming.csv\"</span>) <span class=\"hljs-comment\"># 지구 온난화 데이터를 gw에 로드합니다.</span>\n\nx = gw[<span class=\"hljs-string\">'Year'</span>] <span class=\"hljs-comment\"># 연도 값을 x에 할당합니다.</span>\ny = gw[<span class=\"hljs-string\">'Index'</span>] <span class=\"hljs-comment\"># 지수 값을 y에 할당합니다.</span>\n\ngw2000 = gw[(gw[<span class=\"hljs-string\">'Year'</span>] > <span class=\"hljs-number\">1999</span>)]  <span class=\"hljs-comment\"># 2000년 이후의 데이터를 gw2000에 할당합니다.</span>\ngw2010 = gw[(gw[<span class=\"hljs-string\">'Year'</span>] > <span class=\"hljs-number\">2009</span>)]  <span class=\"hljs-comment\"># 2010년 이후의 데이터를 gw2010에 할당합니다.</span>\n\nx1 = gw2000[<span class=\"hljs-string\">'Year'</span>]\ny1 = gw2000[<span class=\"hljs-string\">'Index'</span>]\n\nx2 = gw2010[<span class=\"hljs-string\">'Year'</span>]\ny2 = gw2010[<span class=\"hljs-string\">'Index'</span>]\n\n<span class=\"hljs-comment\"># 음수 지수는 녹색, 양수는 빨간색으로 표시됩니다.</span>\ncolors = np.where(gw[<span class=\"hljs-string\">'Index'</span>] >= <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'r'</span>, <span class=\"hljs-string\">'g'</span>) \n\nplt.figure(figsize =(<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">8</span>))\nplt.subplot(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>)  <span class=\"hljs-comment\"># 전체 그래프를 표시할 첫 번째 행입니다.</span>\nplt.xlabel(<span class=\"hljs-string\">'Year'</span>) \nplt.ylabel(<span class=\"hljs-string\">'Index'</span>) \nplt.bar(x, y, color=colors)\n\nplt.subplot(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>) <span class=\"hljs-comment\"># 2000년 이후 그래프를 표시할 두 번째 행 첫 번째 열입니다.</span>\nplt.xlabel(<span class=\"hljs-string\">'2000년부터의 연도'</span>) \nplt.ylabel(<span class=\"hljs-string\">'Index'</span>) \nplt.scatter(x1, y1, s=<span class=\"hljs-number\">100</span>, c=<span class=\"hljs-string\">'y'</span>, marker=<span class=\"hljs-string\">\"o\"</span>, alpha=<span class=\"hljs-number\">1</span>, edgecolor=<span class=\"hljs-string\">'r'</span>)\n\nplt.subplot(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>) <span class=\"hljs-comment\"># 2010년 이후 그래프를 표시할 두 번째 행 두 번째 열입니다.</span>\nplt.xlabel(<span class=\"hljs-string\">'2010년부터의 연도'</span>) \nplt.ylabel(<span class=\"hljs-string\">'Index'</span>) \n\nplt.scatter(x2, y2, s=<span class=\"hljs-number\">400</span>, c=<span class=\"hljs-string\">'r'</span>, marker=<span class=\"hljs-string\">\"^\"</span>, alpha=<span class=\"hljs-number\">1</span>, edgecolor=<span class=\"hljs-string\">'b'</span>)\n</code></pre>\n<p>직선 방정식의 값을 식별하는 중입니다.</p>\n<p>Y = mx + c의 직선 방정식입니다.\n여기서 m은 추세의 기욱이고 c는 Y-절편의 높이입니다.\nscikit 라이브러리를 사용하여 기울기(m)와 Y-절편(c)의 값을 생성할 예정입니다.</p>\n<pre><code class=\"hljs language-js\"># 완전한 데이터 세트 중 <span class=\"hljs-number\">1974</span> 이후의 데이터로 데이터프레임 생성.\n<span class=\"hljs-keyword\">from</span> sklearn.<span class=\"hljs-property\">linear_model</span> <span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">LinearRegression</span>\nmodel = <span class=\"hljs-title class_\">LinearRegression</span>()\nX = np.<span class=\"hljs-title function_\">array</span>(gw1974[<span class=\"hljs-string\">'Year'</span>])\ny = np.<span class=\"hljs-title function_\">array</span>(gw1974[<span class=\"hljs-string\">'Index'</span>])\nregression_model = <span class=\"hljs-title class_\">LinearRegression</span>() # scikit의 선형 회귀 모델 사용\nregression_model.<span class=\"hljs-title function_\">fit</span>(X.<span class=\"hljs-title function_\">reshape</span>(-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>), y)\nslope = regression_model.<span class=\"hljs-property\">coef_</span>  # 기울기 값 식별\nintercept = regression_model.<span class=\"hljs-property\">intercept_</span> # Y-절편 값 식별\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"기울기(m) 값은 \"</span>, slope, <span class=\"hljs-string\">\"|| Y-절편(c) 값은 \"</span>, intercept)\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-number\">1975</span>년 이후의 <span class=\"hljs-variable constant_\">NASA</span> 표면 온도 지수(<span class=\"hljs-title class_\">Celsius</span>) 데이터셋입니다.\n<span class=\"hljs-title class_\">Year</span> <span class=\"hljs-title class_\">Index</span>\n<span class=\"hljs-number\">1975</span> <span class=\"hljs-number\">0.02</span>\n<span class=\"hljs-number\">1976</span> <span class=\"hljs-number\">0.04</span>\n<span class=\"hljs-number\">1977</span> <span class=\"hljs-number\">0.07</span>\n<span class=\"hljs-number\">1978</span> <span class=\"hljs-number\">0.12</span>\n<span class=\"hljs-number\">1979</span> <span class=\"hljs-number\">0.16</span>\n...\n<span class=\"hljs-number\">2022</span> <span class=\"hljs-number\">1.00</span>\n<span class=\"hljs-number\">2023</span> <span class=\"hljs-number\">1.02</span>\n</code></pre>\n<p>미래 추세를 생성하기 위해 기울기와 Y-절편을 기반으로 하는 테이블 값을 변환했습니다:</p>\n<pre><code class=\"hljs language-js\">def <span class=\"hljs-title function_\">line</span>(x):\n  # 함수 y = mx + c에 기울기(m)와 절편(c) 값을 할당합니다.\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0.0196163</span> * x + (-<span class=\"hljs-number\">38.71344489795919</span>) \nx_pred = <span class=\"hljs-title function_\">range</span>(<span class=\"hljs-number\">1974</span>,<span class=\"hljs-number\">2051</span>)  # <span class=\"hljs-number\">1974</span>년부터 <span class=\"hljs-number\">2051</span>년까지의 범위입니다.\n\n# 연도가 증가함에 따라 직선 방정식을 기반으로 기울기가 추가됩니다.\ny_pred = [<span class=\"hljs-title function_\">line</span>(i) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> x_pred] \n\n<span class=\"hljs-keyword\">import</span> matplotlib.<span class=\"hljs-property\">pyplot</span> <span class=\"hljs-keyword\">as</span> plt\nfig,ax = plt.<span class=\"hljs-title function_\">subplots</span>()\nax.<span class=\"hljs-title function_\">bar</span>(gw1974[<span class=\"hljs-string\">'Year'</span>],gw1974[<span class=\"hljs-string\">'Index'</span>],color = [<span class=\"hljs-string\">'g'</span>])\nax.<span class=\"hljs-title function_\">stackplot</span>(x_pred,y_pred, color=<span class=\"hljs-string\">\"y\"</span>,linewidth = <span class=\"hljs-number\">2.5</span>,linestyle = <span class=\"hljs-string\">'--'</span>,alpha = <span class=\"hljs-number\">0.40</span>)\nax.<span class=\"hljs-title function_\">set_xlabel</span>(<span class=\"hljs-string\">'Year'</span>)\nax.<span class=\"hljs-title function_\">set_ylabel</span>(<span class=\"hljs-string\">'표면 온도 지수'</span>)\nplt.<span class=\"hljs-title function_\">title</span>(<span class=\"hljs-string\">'지구 온난화 추세'</span>)\nplt.<span class=\"hljs-title function_\">show</span>()\n</code></pre>\n<p>직선 방정식을 기반으로 미래 추세를 생성하고, 지구 표면 지수가 매우 빠른 시간 내에 1.4도 섭씨를 넘는 것을 확인했습니다.</p>\n<p>지난 몇 년 동안 표면 온도 분석을 기반으로 한 추론:</p>\n<ul>\n<li>탄소 배출이 중요하게 제어/감소되지 않으면 다음 24년 안에 표면 온도가 1.40도 섭씨를 넘을 것입니다.</li>\n<li>탄소 배출량이 증가하면 2050년 이전에 표면 온도가 1.50도 섭씨를 넘을 가능성이 있습니다.</li>\n<li>지속 가능한 에너지(태양광, 풍력, 수력, 생물 에너지)가 앞으로 지구 온난화를 통제하는 유일한 해결책이 될 것입니다.</li>\n</ul>\n<p>분석을 통해, 온난화가 개념으로만 여겨졌던 것보다 실제로 더 위험한 것으로 보입니다. 탄소 배출이 감소되지 않으면 전 세계적으로 재앙적인 기후 변화가 발생할 것입니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}