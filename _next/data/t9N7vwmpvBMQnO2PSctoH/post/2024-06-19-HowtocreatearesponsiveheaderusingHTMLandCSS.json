{"pageProps":{"post":{"title":"HTML과 CSS를 사용하여 반응형 헤더를 만드는 방법","description":"","date":"2024-06-19 22:43","slug":"2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS","content":"\n\n\n<img src=\"/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_0.png\" />\n\n안녕하세요, 이 기사에서는 웹사이트 구축시 필수 요소 중 하나 인 반응형 헤더를 만드는 방법에 대해 이야기하겠습니다. 이 기사에서 모든 코드와 세부 정보를 찾을 수 있습니다.\n\n```js\n<div class=\"hero\">\n      <nav>\n        <nav>\n          <h2 class=\"logo\">İlhan <span>Bal</span></h2>\n        </nav>\n    </nav>\n    </div>\n```\n\n우선, 코드를 body 태그 사이에 작성합니다. 첫 번째 단계에서 고유한 클래스 이름을 가진 div 태그를 만듭니다. 이 div 태그 내부에 2개의 nav 태그를 엽니다. 두 번째 nav 태그 내에서 로고를 추가하기 위해 고유한 클래스 이름을 가진 h2인 서브 태그를 생성합니다. 여기서 h2 태그를 사용했지만, 선호하는 경우 h1, h3 등을 사용할 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_1.png)\n\n다음으로 진행하기 전에, 코드 블록에 요소들을 포함해야 합니다. 이를 위해 정렬되지 않은 목록 태그인 ul을 사용할 것입니다.\n\n```js\n  <div class=\"hero\">\n      <nav>\n        <nav>\n          <h2 class=\"logo\">İlhan <span>Bal</span></h2>\n        </nav>\n      <ul>\n        <li class><a href=\"yeni.html\">Home</a></li>\n        <li class><a href=\"about.html\">About</a></li>\n        <li class><a href=\"contact.html\">Contact</a></li>\n        <li class><a href=\"galeri.html\">Gallery</a></li>\n      </ul>\n        </nav>\n        </div>\n``` \n\n\n<div class=\"content-ad\"></div>\n\n위의 코드 블록에서 볼 수 있듯이, 우리는 ul 클래스를 생성하고 요소를 추가했습니다. 우리의 요소는 홈, 소개, 연락처 및 갤러리입니다. 사용자가 마우스로 클릭하면 이러한 페이지로 이동하기 위해 요소 수만큼의 HTML 사본을 만들고 요소 이름에 따라 이름을 지정합니다. 그런 다음 href=\"about.html\"과 같이 링크를 제공합니다.\n\n![이미지](/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_2.png)\n\n우리의 출력물은 이렇게 보여야 합니다.\n\n페이지 오른쪽 상단에 있는 버튼과 같은 버튼을 만들려면 “button” 클래스 이름을 가진 버튼을 생성합니다.\n\n<div class=\"content-ad\"></div>\n\n\nOur HTML code block is completed. Now we can use CSS to enhance the appearance of our page.\n\nIn the second step, create a file with a .css extension. To link our existing HTML file with the CSS file we created, place the following code block between the head tags of our HTML page.\n\n```html\n<head>\n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>İlhan Bal</title>\n\n    <link rel=\"stylesheet\" href=\"app.css\"> \n \n</head>\n```\n\n\n<div class=\"content-ad\"></div>\n\n이렇게 하면 CSS 파일에서의 업데이트가 페이지에 반영되는 것을 확인할 수 있습니다.\n\n```js\n*{\n    margin: 0;\n    padding:0;\n    box-sizing: border-box;\n    font-family: 'Poppins' , sans-serif;\n}\n.hero{\n    height: 100vh;\n    width: 100%;\n    padding-right: 111px;\n}\nnav{\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-top: 20px;\n    padding-left: 5%;\n    padding-right: 10%;\n}\n.logo{\n    color: white;\n    font-size: 32px;\n    margin-top: 0px;\n}\nspan{\n    color: #4070f4;\n}\nnav ul li{\n    margin-top: 32px;\n    display:inline-block;\n    list-style-type: none;\n    padding: 10px 20px;\n}\nnav ul li a{\n    color: white;\n    text-decoration: none;\n    font-weight: bold;\n    align-items: center;\n}\n\nbutton{\n    margin-top: 32px;  \n    border: none;\n    background: #4070f4;\n    padding: 2px 30px;\n    border-radius: 30px;\n    color: white;\n    font-weight: bold;\n    font-size: 15px;\n    transition: .4s;\n}\n```\n\n홈, 소개, 연락처 및 갤러리 요소 위에 마우스를 올리면 텍스트 색상과 커서를 변경하는 추가 단계를 적용해야 하며, 구독 버튼 위에 마우스를 올리면 커질 수 있도록 하고 다시 작아져야 합니다.\n\n```js\nnav ul li a:hover{\n    color: #4070f4;\n    transition: .3s;\n}\n\nbutton:hover{\n    transform: scale(1.1);\n    cursor: pointer;\n}\n```\n\n<div class=\"content-ad\"></div>\n\n프로젝트가 완료되었습니다. HTML과 CSS를 사용하여 반응형 헤더를 완성했습니다. 이제 라이브 미리보기를 확인해보세요.\n\n이 튜토리얼은 여기까지입니다. 유용하게 활용하셨기를 바라겠습니다.\n\n이제 HTML과 CSS를 사용하여 성공적으로 반응형 헤더를 만들었습니다. 이 프로젝트를 직접 사용하려면 IDE에 복사하세요. 프로젝트를 이해했기를 바라며, 의문이 있으시면 언제든지 댓글을 달아주세요!\n\n독자 여러분, 읽어주셔서 감사합니다!\n\n<div class=\"content-ad\"></div>\n\n태그를 마크다운 형식으로 바꿔보세요.\n\n| follow : @ilhanbal577\n\n| Written By : İlhan Bal\n\n| Code by : İlhan Bal\n\n# 웹사이트 안에 헤더 섹션을 넣는 장점은 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\n- 헤더는 웹 사이트의 여러 섹션을 이동하는 데 사용될 수 있습니다.\n- 헤더는 다른 섹션 링크를 포함하는 컨테이너입니다.\n- 사용 편의성을 제공합니다.\n- 시간을 절약할 수 있습니다.\n\n## 헤더는 반응형인가요?\n\n네, 헤더는 반응형으로서 화면 크기에 따라 헤더의 크기를 조절합니다.\n\n## 웹 사이트 내에서 헤더의 목적은 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\n헤더는 사용자 상호작용을 촉진하고 편안한 환경을 제공합니다.","ogImage":{"url":"/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_0.png"},"coverImage":"/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>안녕하세요, 이 기사에서는 웹사이트 구축시 필수 요소 중 하나 인 반응형 헤더를 만드는 방법에 대해 이야기하겠습니다. 이 기사에서 모든 코드와 세부 정보를 찾을 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"hero\"</span>>\n      <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"logo\"</span>></span>İlhan <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span>></span>Bal<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span></span>\n    &#x3C;/div>\n</code></pre>\n<p>우선, 코드를 body 태그 사이에 작성합니다. 첫 번째 단계에서 고유한 클래스 이름을 가진 div 태그를 만듭니다. 이 div 태그 내부에 2개의 nav 태그를 엽니다. 두 번째 nav 태그 내에서 로고를 추가하기 위해 고유한 클래스 이름을 가진 h2인 서브 태그를 생성합니다. 여기서 h2 태그를 사용했지만, 선호하는 경우 h1, h3 등을 사용할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_1.png\" alt=\"이미지\"></p>\n<p>다음으로 진행하기 전에, 코드 블록에 요소들을 포함해야 합니다. 이를 위해 정렬되지 않은 목록 태그인 ul을 사용할 것입니다.</p>\n<pre><code class=\"hljs language-js\">  &#x3C;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"hero\"</span>>\n      <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"logo\"</span>></span>İlhan <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span>></span>Bal<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"yeni.html\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"about.html\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"contact.html\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"galeri.html\"</span>></span>Gallery<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span></span>\n        &#x3C;/div>\n</code></pre>\n<p>위의 코드 블록에서 볼 수 있듯이, 우리는 ul 클래스를 생성하고 요소를 추가했습니다. 우리의 요소는 홈, 소개, 연락처 및 갤러리입니다. 사용자가 마우스로 클릭하면 이러한 페이지로 이동하기 위해 요소 수만큼의 HTML 사본을 만들고 요소 이름에 따라 이름을 지정합니다. 그런 다음 href=\"about.html\"과 같이 링크를 제공합니다.</p>\n<p><img src=\"/assets/img/2024-06-19-HowtocreatearesponsiveheaderusingHTMLandCSS_2.png\" alt=\"이미지\"></p>\n<p>우리의 출력물은 이렇게 보여야 합니다.</p>\n<p>페이지 오른쪽 상단에 있는 버튼과 같은 버튼을 만들려면 “button” 클래스 이름을 가진 버튼을 생성합니다.</p>\n<p>Our HTML code block is completed. Now we can use CSS to enhance the appearance of our page.</p>\n<p>In the second step, create a file with a .css extension. To link our existing HTML file with the CSS file we created, place the following code block between the head tags of our HTML page.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>İlhan Bal<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"app.css\"</span>></span> \n \n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n</code></pre>\n<p>이렇게 하면 CSS 파일에서의 업데이트가 페이지에 반영되는 것을 확인할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">*{\n    <span class=\"hljs-attr\">margin</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attr\">padding</span>:<span class=\"hljs-number\">0</span>;\n    box-<span class=\"hljs-attr\">sizing</span>: border-box;\n    font-<span class=\"hljs-attr\">family</span>: <span class=\"hljs-string\">'Poppins'</span> , sans-serif;\n}\n.<span class=\"hljs-property\">hero</span>{\n    <span class=\"hljs-attr\">height</span>: 100vh;\n    <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">100</span>%;\n    padding-<span class=\"hljs-attr\">right</span>: 111px;\n}\nnav{\n    margin-<span class=\"hljs-attr\">top</span>: 20px;\n    <span class=\"hljs-attr\">display</span>: flex;\n    align-<span class=\"hljs-attr\">items</span>: center;\n    justify-<span class=\"hljs-attr\">content</span>: space-between;\n    padding-<span class=\"hljs-attr\">top</span>: 20px;\n    padding-<span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">5</span>%;\n    padding-<span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">10</span>%;\n}\n.<span class=\"hljs-property\">logo</span>{\n    <span class=\"hljs-attr\">color</span>: white;\n    font-<span class=\"hljs-attr\">size</span>: 32px;\n    margin-<span class=\"hljs-attr\">top</span>: 0px;\n}\nspan{\n    <span class=\"hljs-attr\">color</span>: #4070f4;\n}\nnav ul li{\n    margin-<span class=\"hljs-attr\">top</span>: 32px;\n    <span class=\"hljs-attr\">display</span>:inline-block;\n    list-style-<span class=\"hljs-attr\">type</span>: none;\n    <span class=\"hljs-attr\">padding</span>: 10px 20px;\n}\nnav ul li a{\n    <span class=\"hljs-attr\">color</span>: white;\n    text-<span class=\"hljs-attr\">decoration</span>: none;\n    font-<span class=\"hljs-attr\">weight</span>: bold;\n    align-<span class=\"hljs-attr\">items</span>: center;\n}\n\nbutton{\n    margin-<span class=\"hljs-attr\">top</span>: 32px;  \n    <span class=\"hljs-attr\">border</span>: none;\n    <span class=\"hljs-attr\">background</span>: #4070f4;\n    <span class=\"hljs-attr\">padding</span>: 2px 30px;\n    border-<span class=\"hljs-attr\">radius</span>: 30px;\n    <span class=\"hljs-attr\">color</span>: white;\n    font-<span class=\"hljs-attr\">weight</span>: bold;\n    font-<span class=\"hljs-attr\">size</span>: 15px;\n    <span class=\"hljs-attr\">transition</span>: .4s;\n}\n</code></pre>\n<p>홈, 소개, 연락처 및 갤러리 요소 위에 마우스를 올리면 텍스트 색상과 커서를 변경하는 추가 단계를 적용해야 하며, 구독 버튼 위에 마우스를 올리면 커질 수 있도록 하고 다시 작아져야 합니다.</p>\n<pre><code class=\"hljs language-js\">nav ul li <span class=\"hljs-attr\">a</span>:hover{\n    <span class=\"hljs-attr\">color</span>: #4070f4;\n    <span class=\"hljs-attr\">transition</span>: .3s;\n}\n\n<span class=\"hljs-attr\">button</span>:hover{\n    <span class=\"hljs-attr\">transform</span>: <span class=\"hljs-title function_\">scale</span>(<span class=\"hljs-number\">1.1</span>);\n    <span class=\"hljs-attr\">cursor</span>: pointer;\n}\n</code></pre>\n<p>프로젝트가 완료되었습니다. HTML과 CSS를 사용하여 반응형 헤더를 완성했습니다. 이제 라이브 미리보기를 확인해보세요.</p>\n<p>이 튜토리얼은 여기까지입니다. 유용하게 활용하셨기를 바라겠습니다.</p>\n<p>이제 HTML과 CSS를 사용하여 성공적으로 반응형 헤더를 만들었습니다. 이 프로젝트를 직접 사용하려면 IDE에 복사하세요. 프로젝트를 이해했기를 바라며, 의문이 있으시면 언제든지 댓글을 달아주세요!</p>\n<p>독자 여러분, 읽어주셔서 감사합니다!</p>\n<p>태그를 마크다운 형식으로 바꿔보세요.</p>\n<p>| follow : @ilhanbal577</p>\n<p>| Written By : İlhan Bal</p>\n<p>| Code by : İlhan Bal</p>\n<h1>웹사이트 안에 헤더 섹션을 넣는 장점은 무엇인가요?</h1>\n<ul>\n<li>헤더는 웹 사이트의 여러 섹션을 이동하는 데 사용될 수 있습니다.</li>\n<li>헤더는 다른 섹션 링크를 포함하는 컨테이너입니다.</li>\n<li>사용 편의성을 제공합니다.</li>\n<li>시간을 절약할 수 있습니다.</li>\n</ul>\n<h2>헤더는 반응형인가요?</h2>\n<p>네, 헤더는 반응형으로서 화면 크기에 따라 헤더의 크기를 조절합니다.</p>\n<h2>웹 사이트 내에서 헤더의 목적은 무엇인가요?</h2>\n<p>헤더는 사용자 상호작용을 촉진하고 편안한 환경을 제공합니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}