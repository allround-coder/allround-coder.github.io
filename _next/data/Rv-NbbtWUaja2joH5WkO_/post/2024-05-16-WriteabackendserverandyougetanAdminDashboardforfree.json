{"pageProps":{"post":{"title":"백엔드 서버를 작성하면 어드민 대시보드를 무료로 제공받을 수 있습니다","description":"","date":"2024-05-16 16:30","slug":"2024-05-16-WriteabackendserverandyougetanAdminDashboardforfree","content":"\n\n테오(Teo)는 당신을 위해 관리자 대시보드를 생성할 수 있는 훌륭한 웹 프레임워크입니다.\n\n![Teo Admin Dashboard](https://miro.medium.com/v2/resize:fit:1400/1*1SeQK64Z5ERRtbDqA4sEmQ.gif)\n\n이 기사에서는 당신에게 Teo를 사용하여 간단한 백엔드 서버를 작성하고 무료로 생성된 관리자 대시보드를 보여드릴 것입니다.\n\n# 프로젝트 생성\n\n<div class=\"content-ad\"></div>\n\n새로운 디렉토리를 만들어서 그 안에 \"schema.teo\"라는 파일을 생성합시다. 문법 강조와 자동 완성을 위해 이 VSCode 플러그인을 설치할 수 있어요.\n\n```js\nconnector {\n  provider: .sqlite,\n  url: \"sqlite:./database.sqlite\",\n}\n\nserver {\n  bind: (\"0.0.0.0\", 5054)\n}\n\nadmin {\n  dest: \"../hello-teo-admin-dashboard\",\n  host: .inject(\"process.env.TEO_HOST\"),\n  languages: [.enUs, .enUk, .de, .es, .fr, .he, .hi, .ja, .ko, .zhCn, .zhTw]\n}\n\n@identity.tokenIssuer($identity.jwt(expired: 3600 * 24 * 365))\n@identity.jwtSecret(ENV[\"JWT_SECRET\"]!) @admin.administrator\nmodel Root {\n  @id @autoIncrement @readonly\n  id: Int\n  @unique @onSet($if($presents, $isEmail)) @identity.id\n  email: String\n  @writeonly @onSet($presents.bcrypt.salt) @admin.secureInput\n  @identity.checker($get(.value).presents.bcrypt.verify($self.get(.password).presents))\n  password: String\n\n  include handler identity.signIn\n  include handler identity.identity\n}\n\n@identity.tokenIssuer($identity.jwt(expired: 3600 * 24 * 365))\n@identity.jwtSecret(ENV[\"JWT_SECRET\"]!) @admin.administrator\nmodel Admin {\n  @id @autoIncrement @readonly\n  id: Int\n  @unique @onSet($if($presents, $isEmail)) @identity.id\n  email: String\n  @unique @identity.id\n  phoneNo: String\n  @writeonly @onSet($presents.bcrypt.salt) @admin.secureInput\n  @identity.checker($get(.value).presents.bcrypt.verify($self.get(.password).presents))\n  password: String\n\n  include handler identity.signIn\n  include handler identity.identity\n}\n\nenum Sex {\n  male\n  female\n}\n\nmodel Record {\n  @id @autoIncrement @readonly\n  id: Int\n  string: String\n  bool: Bool\n  int: Int\n  float: Float\n  decimal: Decimal\n  date: Date\n  dateTime: DateTime\n  sex: Sex\n}\n\nmodel NullableRecord {\n  @id @autoIncrement @readonly\n  id: Int\n  string: String?\n  bool: Bool?\n  int: Int?\n  float: Float?\n  decimal: Decimal?\n  date: Date?\n  dateTime: DateTime?\n  sex: Sex?\n}\n\nmiddlewares [identity.identityFromJwt(secret: ENV[\"JWT_SECRET\"]!)]\n\nautoseed dataset default {\n  group Admin {\n    record admin {\n      email: \"admin@gmail.com\",\n      phoneNo: \"13588888888\",\n      password: \"Aa123456\"\n    }\n  }\n  group Root {\n    record root {\n      email: \"root@gmail.com\",\n      password: \"Aa123456\"\n    }\n  }\n}\n```\n\n테오 스키마 언어는 아주 자세하고 읽기 쉽습니다. 이 스키마에서 다음과 같은 사항을 선언합니다:\n\n- HTTP 서버가 어떻게 바인딩되는지\n- 어떤 데이터베이스에 연결하는지\n- 어디에 우리의 Admin 대시보드 코드를 생성하는지\n- 인증 미들웨어\n- 모델 정의\n- 시드 데이터\n\n<div class=\"content-ad\"></div>\n\n우리는 딱 100줄로 많은 것들을 선언했어요. 구문이 매우 간결해요.\n\n인증 미들웨어와 모델 데코레이터에서 \"JWT_SECRET\"라는 환경 변수가 있을 거에요. 이 내용을 담은 \" .env\" 파일을 만들어봐요.\n\n```js\nJWT_SECRET=my_top_secret\n```\n\n# Teo 설치하기\n\n<div class=\"content-ad\"></div>\n\n당신의 기술 스택과 선호도에 따라 Rust 버전, Node.js 버전 또는 Python 버전을 설치할 수 있어요. 이 중 하나를 선택해 주세요. \n\nRust 버전을 설치하려면 \"cargo\"를 사용하세요.\n\n```js\ncargo install teo\n```\n\nNode.js 버전을 설치하려면, 이 명령을 실행하여 로컬 디렉토리에 설치하세요.\n\n<div class=\"content-ad\"></div>\n\n\nnpm init -y\nnpm install typescript ts-node -D\nnpx tsc --init\nnpm install @teocloud/teo\n\n\n파이썬 버전을 설치하려면 venv를 추천합니다.\n\n\npython3.12 -m venv .venv\nsource .venv/bin/activate\npip install teo\n\n\nTeo는 다른 웹 프레임워크와 마찬가지로 프로그래밍 코드로 라우트 핸들러를 작성하고 Teo의 ORM API에 접근할 수 있습니다. 이 글에서는 그를 다루지 않을 거예요.\n\n\n<div class=\"content-ad\"></div>\n\n# 어드민 대시보드 생성하기\n\nTeo를 설치한 후, 이 몤령어를 실행하여 어드민 대시보드 코드를 생성하세요. 어드민 대시보드는 TypeScript와 React로 작성되어 있습니다. 완전히 사용자 정의가 가능합니다. 생성된 코드와 사용자 확장 코드는 충돌하지 않습니다.\n\nRust 명령어:\n\n```js\ncargo teo generate admin\n```\n\n<div class=\"content-ad\"></div>\n\nNode.js 명령어:\n\n```bash\nnpx teo generate admin\n```\n\nPython 명령어 (venv를 활성화한 상태):\n\n```bash\nteo generate admin\n```\n\n<div class=\"content-ad\"></div>\n\n# 서버 시작하기\n\n서버를 시작하려면 'teo serve' 명령을 사용하세요.\n\nRust 명령:\n\n```js\ncargo teo serve\n```\n\n<div class=\"content-ad\"></div>\n\nMarkdown 형식의 표:\n\n| 언어 | 명령어 |\n|------|---------|\n| Node.js | `npx teo serve` |\n| Python (venv 활성화) | `teo serve` |\n\n<div class=\"content-ad\"></div>\n\n# 관리자 대시보드 시작하기\n\n생성된 관리자 대시보드가 있는 디렉토리로 이동하세요. 의존성을 설치하고 웹팩 서버를 시작하세요. 시스템에 Node.js가 설치되어 있어야 합니다.\n\n```js\nnpm install\nnpm start\n```\n\n# 브라우저에서 localhost:9000 열기\n\n<div class=\"content-ad\"></div>\n\n마지막 단계는 브라우저를 열어 확인해 보는 거예요. 여기 로그인 자격 증명이 있어요:\n\n- 관리자 이메일: admin@gmail.com\n- 루트 이메일: root@gmail.com\n- 비밀번호: Aa123456\n\n계정 중 하나를 선택해서 로그인하세요.\n\n이제 레코드를 나열하거나 생성, 업데이트, 삭제할 수 있어요. 차트, 그래프 및 표와 같은 더 많은 기능이 나중에 구현될 거예요.\n\n<div class=\"content-ad\"></div>\n\n![image](https://miro.medium.com/v2/resize:fit:1400/1*vEfD5wQTIrAAsGBqxOapJw.gif)\n\n# 요약\n\n이 글이 마음에 드셨다면, GitHub에서 별을 클릭하여 우리에게 격려를 해주세요.\n\nGitHub: https://github.com/teocloud/teo\n\n<div class=\"content-ad\"></div>\n\n공식 웹사이트: [https://teodev.io](https://teodev.io)\n\n더욱 개선해 나갈 것이며, 여러분의 요구에 맞게 더 많은 기능을 추가할 예정입니다.","ogImage":{"url":"/assets/img/2024-05-16-WriteabackendserverandyougetanAdminDashboardforfree_0.png"},"coverImage":"/assets/img/2024-05-16-WriteabackendserverandyougetanAdminDashboardforfree_0.png","tag":["Tech"],"readingTime":5},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>테오(Teo)는 당신을 위해 관리자 대시보드를 생성할 수 있는 훌륭한 웹 프레임워크입니다.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1400/1*1SeQK64Z5ERRtbDqA4sEmQ.gif\" alt=\"Teo Admin Dashboard\"></p>\n<p>이 기사에서는 당신에게 Teo를 사용하여 간단한 백엔드 서버를 작성하고 무료로 생성된 관리자 대시보드를 보여드릴 것입니다.</p>\n<h1>프로젝트 생성</h1>\n<div class=\"content-ad\"></div>\n<p>새로운 디렉토리를 만들어서 그 안에 \"schema.teo\"라는 파일을 생성합시다. 문법 강조와 자동 완성을 위해 이 VSCode 플러그인을 설치할 수 있어요.</p>\n<pre><code class=\"hljs language-js\">connector {\n  <span class=\"hljs-attr\">provider</span>: .<span class=\"hljs-property\">sqlite</span>,\n  <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"sqlite:./database.sqlite\"</span>,\n}\n\nserver {\n  <span class=\"hljs-attr\">bind</span>: (<span class=\"hljs-string\">\"0.0.0.0\"</span>, <span class=\"hljs-number\">5054</span>)\n}\n\nadmin {\n  <span class=\"hljs-attr\">dest</span>: <span class=\"hljs-string\">\"../hello-teo-admin-dashboard\"</span>,\n  <span class=\"hljs-attr\">host</span>: .<span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-string\">\"process.env.TEO_HOST\"</span>),\n  <span class=\"hljs-attr\">languages</span>: [.<span class=\"hljs-property\">enUs</span>, .<span class=\"hljs-property\">enUk</span>, .<span class=\"hljs-property\">de</span>, .<span class=\"hljs-property\">es</span>, .<span class=\"hljs-property\">fr</span>, .<span class=\"hljs-property\">he</span>, .<span class=\"hljs-property\">hi</span>, .<span class=\"hljs-property\">ja</span>, .<span class=\"hljs-property\">ko</span>, .<span class=\"hljs-property\">zhCn</span>, .<span class=\"hljs-property\">zhTw</span>]\n}\n\n@identity.<span class=\"hljs-title function_\">tokenIssuer</span>($identity.<span class=\"hljs-title function_\">jwt</span>(<span class=\"hljs-attr\">expired</span>: <span class=\"hljs-number\">3600</span> * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">365</span>))\n@identity.<span class=\"hljs-title function_\">jwtSecret</span>(<span class=\"hljs-variable constant_\">ENV</span>[<span class=\"hljs-string\">\"JWT_SECRET\"</span>]!) @admin.<span class=\"hljs-property\">administrator</span>\nmodel <span class=\"hljs-title class_\">Root</span> {\n  @id @autoIncrement @readonly\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-title class_\">Int</span>\n  @unique @<span class=\"hljs-title function_\">onSet</span>($if($presents, $isEmail)) @identity.<span class=\"hljs-property\">id</span>\n  <span class=\"hljs-attr\">email</span>: <span class=\"hljs-title class_\">String</span>\n  @writeonly @<span class=\"hljs-title function_\">onSet</span>($presents.<span class=\"hljs-property\">bcrypt</span>.<span class=\"hljs-property\">salt</span>) @admin.<span class=\"hljs-property\">secureInput</span>\n  @identity.<span class=\"hljs-title function_\">checker</span>($get(.<span class=\"hljs-property\">value</span>).<span class=\"hljs-property\">presents</span>.<span class=\"hljs-property\">bcrypt</span>.<span class=\"hljs-title function_\">verify</span>($self.<span class=\"hljs-title function_\">get</span>(.<span class=\"hljs-property\">password</span>).<span class=\"hljs-property\">presents</span>))\n  <span class=\"hljs-attr\">password</span>: <span class=\"hljs-title class_\">String</span>\n\n  include handler identity.<span class=\"hljs-property\">signIn</span>\n  include handler identity.<span class=\"hljs-property\">identity</span>\n}\n\n@identity.<span class=\"hljs-title function_\">tokenIssuer</span>($identity.<span class=\"hljs-title function_\">jwt</span>(<span class=\"hljs-attr\">expired</span>: <span class=\"hljs-number\">3600</span> * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">365</span>))\n@identity.<span class=\"hljs-title function_\">jwtSecret</span>(<span class=\"hljs-variable constant_\">ENV</span>[<span class=\"hljs-string\">\"JWT_SECRET\"</span>]!) @admin.<span class=\"hljs-property\">administrator</span>\nmodel <span class=\"hljs-title class_\">Admin</span> {\n  @id @autoIncrement @readonly\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-title class_\">Int</span>\n  @unique @<span class=\"hljs-title function_\">onSet</span>($if($presents, $isEmail)) @identity.<span class=\"hljs-property\">id</span>\n  <span class=\"hljs-attr\">email</span>: <span class=\"hljs-title class_\">String</span>\n  @unique @identity.<span class=\"hljs-property\">id</span>\n  <span class=\"hljs-attr\">phoneNo</span>: <span class=\"hljs-title class_\">String</span>\n  @writeonly @<span class=\"hljs-title function_\">onSet</span>($presents.<span class=\"hljs-property\">bcrypt</span>.<span class=\"hljs-property\">salt</span>) @admin.<span class=\"hljs-property\">secureInput</span>\n  @identity.<span class=\"hljs-title function_\">checker</span>($get(.<span class=\"hljs-property\">value</span>).<span class=\"hljs-property\">presents</span>.<span class=\"hljs-property\">bcrypt</span>.<span class=\"hljs-title function_\">verify</span>($self.<span class=\"hljs-title function_\">get</span>(.<span class=\"hljs-property\">password</span>).<span class=\"hljs-property\">presents</span>))\n  <span class=\"hljs-attr\">password</span>: <span class=\"hljs-title class_\">String</span>\n\n  include handler identity.<span class=\"hljs-property\">signIn</span>\n  include handler identity.<span class=\"hljs-property\">identity</span>\n}\n\nenum <span class=\"hljs-title class_\">Sex</span> {\n  male\n  female\n}\n\nmodel <span class=\"hljs-title class_\">Record</span> {\n  @id @autoIncrement @readonly\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-title class_\">Int</span>\n  <span class=\"hljs-attr\">string</span>: <span class=\"hljs-title class_\">String</span>\n  <span class=\"hljs-attr\">bool</span>: <span class=\"hljs-title class_\">Bool</span>\n  <span class=\"hljs-attr\">int</span>: <span class=\"hljs-title class_\">Int</span>\n  <span class=\"hljs-attr\">float</span>: <span class=\"hljs-title class_\">Float</span>\n  <span class=\"hljs-attr\">decimal</span>: <span class=\"hljs-title class_\">Decimal</span>\n  <span class=\"hljs-attr\">date</span>: <span class=\"hljs-title class_\">Date</span>\n  <span class=\"hljs-attr\">dateTime</span>: <span class=\"hljs-title class_\">DateTime</span>\n  <span class=\"hljs-attr\">sex</span>: <span class=\"hljs-title class_\">Sex</span>\n}\n\nmodel <span class=\"hljs-title class_\">NullableRecord</span> {\n  @id @autoIncrement @readonly\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-title class_\">Int</span>\n  <span class=\"hljs-attr\">string</span>: <span class=\"hljs-title class_\">String</span>?\n  <span class=\"hljs-attr\">bool</span>: <span class=\"hljs-title class_\">Bool</span>?\n  <span class=\"hljs-attr\">int</span>: <span class=\"hljs-title class_\">Int</span>?\n  <span class=\"hljs-attr\">float</span>: <span class=\"hljs-title class_\">Float</span>?\n  <span class=\"hljs-attr\">decimal</span>: <span class=\"hljs-title class_\">Decimal</span>?\n  <span class=\"hljs-attr\">date</span>: <span class=\"hljs-title class_\">Date</span>?\n  <span class=\"hljs-attr\">dateTime</span>: <span class=\"hljs-title class_\">DateTime</span>?\n  <span class=\"hljs-attr\">sex</span>: <span class=\"hljs-title class_\">Sex</span>?\n}\n\nmiddlewares [identity.<span class=\"hljs-title function_\">identityFromJwt</span>(<span class=\"hljs-attr\">secret</span>: <span class=\"hljs-variable constant_\">ENV</span>[<span class=\"hljs-string\">\"JWT_SECRET\"</span>]!)]\n\nautoseed dataset <span class=\"hljs-keyword\">default</span> {\n  group <span class=\"hljs-title class_\">Admin</span> {\n    record admin {\n      <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">\"admin@gmail.com\"</span>,\n      <span class=\"hljs-attr\">phoneNo</span>: <span class=\"hljs-string\">\"13588888888\"</span>,\n      <span class=\"hljs-attr\">password</span>: <span class=\"hljs-string\">\"Aa123456\"</span>\n    }\n  }\n  group <span class=\"hljs-title class_\">Root</span> {\n    record root {\n      <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">\"root@gmail.com\"</span>,\n      <span class=\"hljs-attr\">password</span>: <span class=\"hljs-string\">\"Aa123456\"</span>\n    }\n  }\n}\n</code></pre>\n<p>테오 스키마 언어는 아주 자세하고 읽기 쉽습니다. 이 스키마에서 다음과 같은 사항을 선언합니다:</p>\n<ul>\n<li>HTTP 서버가 어떻게 바인딩되는지</li>\n<li>어떤 데이터베이스에 연결하는지</li>\n<li>어디에 우리의 Admin 대시보드 코드를 생성하는지</li>\n<li>인증 미들웨어</li>\n<li>모델 정의</li>\n<li>시드 데이터</li>\n</ul>\n<div class=\"content-ad\"></div>\n<p>우리는 딱 100줄로 많은 것들을 선언했어요. 구문이 매우 간결해요.</p>\n<p>인증 미들웨어와 모델 데코레이터에서 \"JWT_SECRET\"라는 환경 변수가 있을 거에요. 이 내용을 담은 \" .env\" 파일을 만들어봐요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable constant_\">JWT_SECRET</span>=my_top_secret\n</code></pre>\n<h1>Teo 설치하기</h1>\n<div class=\"content-ad\"></div>\n<p>당신의 기술 스택과 선호도에 따라 Rust 버전, Node.js 버전 또는 Python 버전을 설치할 수 있어요. 이 중 하나를 선택해 주세요.</p>\n<p>Rust 버전을 설치하려면 \"cargo\"를 사용하세요.</p>\n<pre><code class=\"hljs language-js\">cargo install teo\n</code></pre>\n<p>Node.js 버전을 설치하려면, 이 명령을 실행하여 로컬 디렉토리에 설치하세요.</p>\n<div class=\"content-ad\"></div>\n<p>npm init -y\nnpm install typescript ts-node -D\nnpx tsc --init\nnpm install @teocloud/teo</p>\n<p>파이썬 버전을 설치하려면 venv를 추천합니다.</p>\n<p>python3.12 -m venv .venv\nsource .venv/bin/activate\npip install teo</p>\n<p>Teo는 다른 웹 프레임워크와 마찬가지로 프로그래밍 코드로 라우트 핸들러를 작성하고 Teo의 ORM API에 접근할 수 있습니다. 이 글에서는 그를 다루지 않을 거예요.</p>\n<div class=\"content-ad\"></div>\n<h1>어드민 대시보드 생성하기</h1>\n<p>Teo를 설치한 후, 이 몤령어를 실행하여 어드민 대시보드 코드를 생성하세요. 어드민 대시보드는 TypeScript와 React로 작성되어 있습니다. 완전히 사용자 정의가 가능합니다. 생성된 코드와 사용자 확장 코드는 충돌하지 않습니다.</p>\n<p>Rust 명령어:</p>\n<pre><code class=\"hljs language-js\">cargo teo generate admin\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>Node.js 명령어:</p>\n<pre><code class=\"hljs language-bash\">npx teo generate admin\n</code></pre>\n<p>Python 명령어 (venv를 활성화한 상태):</p>\n<pre><code class=\"hljs language-bash\">teo generate admin\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>서버 시작하기</h1>\n<p>서버를 시작하려면 'teo serve' 명령을 사용하세요.</p>\n<p>Rust 명령:</p>\n<pre><code class=\"hljs language-js\">cargo teo serve\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>Markdown 형식의 표:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>언어</th><th>명령어</th></tr></thead><tbody><tr><td>Node.js</td><td><code>npx teo serve</code></td></tr><tr><td>Python (venv 활성화)</td><td><code>teo serve</code></td></tr></tbody></table>\n<div class=\"content-ad\"></div>\n<h1>관리자 대시보드 시작하기</h1>\n<p>생성된 관리자 대시보드가 있는 디렉토리로 이동하세요. 의존성을 설치하고 웹팩 서버를 시작하세요. 시스템에 Node.js가 설치되어 있어야 합니다.</p>\n<pre><code class=\"hljs language-js\">npm install\nnpm start\n</code></pre>\n<h1>브라우저에서 localhost:9000 열기</h1>\n<div class=\"content-ad\"></div>\n<p>마지막 단계는 브라우저를 열어 확인해 보는 거예요. 여기 로그인 자격 증명이 있어요:</p>\n<ul>\n<li>관리자 이메일: <a href=\"mailto:admin@gmail.com\">admin@gmail.com</a></li>\n<li>루트 이메일: <a href=\"mailto:root@gmail.com\">root@gmail.com</a></li>\n<li>비밀번호: Aa123456</li>\n</ul>\n<p>계정 중 하나를 선택해서 로그인하세요.</p>\n<p>이제 레코드를 나열하거나 생성, 업데이트, 삭제할 수 있어요. 차트, 그래프 및 표와 같은 더 많은 기능이 나중에 구현될 거예요.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1400/1*vEfD5wQTIrAAsGBqxOapJw.gif\" alt=\"image\"></p>\n<h1>요약</h1>\n<p>이 글이 마음에 드셨다면, GitHub에서 별을 클릭하여 우리에게 격려를 해주세요.</p>\n<p>GitHub: <a href=\"https://github.com/teocloud/teo\" rel=\"nofollow\" target=\"_blank\">https://github.com/teocloud/teo</a></p>\n<div class=\"content-ad\"></div>\n<p>공식 웹사이트: <a href=\"https://teodev.io\" rel=\"nofollow\" target=\"_blank\">https://teodev.io</a></p>\n<p>더욱 개선해 나갈 것이며, 여러분의 요구에 맞게 더 많은 기능을 추가할 예정입니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}