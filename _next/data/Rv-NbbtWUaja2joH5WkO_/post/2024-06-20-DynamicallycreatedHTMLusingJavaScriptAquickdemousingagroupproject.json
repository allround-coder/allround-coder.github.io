{"pageProps":{"post":{"title":"자바스크립트를 사용하여 동적으로 생성된 HTML - 그룹 프로젝트를 활용한 빠른 데모","description":"","date":"2024-06-20 05:59","slug":"2024-06-20-DynamicallycreatedHTMLusingJavaScriptAquickdemousingagroupproject","content":"\n\nJavaScript를 사용하여 HTML 요소를 동적으로 생성하는 것은 당신이 생각하는 것보다 복잡하지 않아요! 중요한 기본 원칙을 기억하면 괜찮아요! 사용자 상호작용 후 페이지 내용이 변경되어야 하는 모든 애플리케이션에는 어떠한 형태의 동적 요소 조작이 필요해요. 여기서는 특히 요소 생성과 \"제거\" (불완전한 용어로)에 초점을 맞출 거예요.\n\n# 이것을 배워야 하는 이유는?\n\nHTML은 현재 페이지에 있는 내용의 청사진 역할을 할 것이지만, 만약 당신이 그 내용을 버튼을 누르면 변경하고 싶다면 어떻게 할 건가요? 또는 입력을 제출한 후, 입력에 따라 응용 프로그램이 다양한 결과를 반환하길 원한다면 어떡해야 할까요? 최근에 기여한 프로젝트를 예로 들 수 있겠어요.\n\n![image](https://miro.medium.com/v2/resize:fit:1400/1*czD6QBwXt7Oh69m8JXMcvA.gif)\n\n<div class=\"content-ad\"></div>\n\n요 동적 \"주요 칵테일 카드\"를 생성하기 위해서 필요한 JavaScript 함수는 실제로 한 가지뿐입니다: element.append().\n\n```js\n<section id=\"featured-cocktail\" class=\"is-flex-direction-column card py-5 mt-2\" style=\"background-color: var(--secondary); color: var(--dark-text)\">\n</section>\n```\n\n```js\nconst featuredCocktailCard = $('#featured-cocktail');\n// ...\nfeaturedCocktailCard.append(content)\n```\n\n![이미지](/assets/img/2024-06-20-DynamicallycreatedHTMLusingJavaScriptAquickdemousingagroupproject_0.png)\n\n<div class=\"content-ad\"></div>\n\n\"featuredCocktailCard.append()\" 함수 핸들이 호출되면, 괄호 안에 추가된 내용은 선택된 요소(즉, 객체의 이름이 지정된 요소)에 HTML 문서에 삽입됩니다. 이후에는 JavaScript로 작성된 코드지만 HTML 구문과 용어를 따를 것입니다.\n\n```js\nfeaturedCocktailCard.empty().append(`\n          <h3 class=\"is-size-1 card-header-title is-centered\">${toTitleCase(cocktailName)}</h3>\n          <div id=\"featuredCocktailSection\" class=\"is-flex is-justify-content-center\">\n            <div class=\"columns card-image\">`)\n```\n\n스크린샷에 캡쳐된 코드 양은 기술적으로 페이지에 추가할 수 있는 HTML의 제한이 없다는 것을 보여줍니다. 그러나, 발생하는 동적 요소 생성을 가능한 경우 여러 함수로 분리하여 더 잘 관리하는 것이 좋습니다. 게다가, 위에서 \"append(...)\" 앞에 \".empty()\"도 있는 것을 알 수 있습니다. \".empty()\"는 특징있는 칵테일 카드 ID 내의 모든 요소를 제거하지만, 이를 따라오는 \".append\"는 그 후에 콘텐츠를 다시 교체할 것입니다(이 경우 반복 때문에 다른 입력 세트로).\n\n동적 HTML 내에서 사이즈 및 정렬/정렬에 대한 클래스 및 ID 선언이 있음에 유의하십시오. 해당 용어를 알아보셨나요? 요소를 추가하거나 제거하지 않더라도 이것은 알아두어야 할 중요한 옵션입니다: 이제 CSS를 사용하여 동적 요소 조작에 참여할 수 있습니다. HTML을 변경하여 외관을 완전히 변경할 수 있는 새로운 특성 집합을 수용하도록 변경할 수 있습니다!","ogImage":{"url":"/assets/img/2024-06-20-DynamicallycreatedHTMLusingJavaScriptAquickdemousingagroupproject_0.png"},"coverImage":"/assets/img/2024-06-20-DynamicallycreatedHTMLusingJavaScriptAquickdemousingagroupproject_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>JavaScript를 사용하여 HTML 요소를 동적으로 생성하는 것은 당신이 생각하는 것보다 복잡하지 않아요! 중요한 기본 원칙을 기억하면 괜찮아요! 사용자 상호작용 후 페이지 내용이 변경되어야 하는 모든 애플리케이션에는 어떠한 형태의 동적 요소 조작이 필요해요. 여기서는 특히 요소 생성과 \"제거\" (불완전한 용어로)에 초점을 맞출 거예요.</p>\n<h1>이것을 배워야 하는 이유는?</h1>\n<p>HTML은 현재 페이지에 있는 내용의 청사진 역할을 할 것이지만, 만약 당신이 그 내용을 버튼을 누르면 변경하고 싶다면 어떻게 할 건가요? 또는 입력을 제출한 후, 입력에 따라 응용 프로그램이 다양한 결과를 반환하길 원한다면 어떡해야 할까요? 최근에 기여한 프로젝트를 예로 들 수 있겠어요.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1400/1*czD6QBwXt7Oh69m8JXMcvA.gif\" alt=\"image\"></p>\n<div class=\"content-ad\"></div>\n<p>요 동적 \"주요 칵테일 카드\"를 생성하기 위해서 필요한 JavaScript 함수는 실제로 한 가지뿐입니다: element.append().</p>\n<pre><code class=\"hljs language-js\">&#x3C;section id=<span class=\"hljs-string\">\"featured-cocktail\"</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">\"is-flex-direction-column card py-5 mt-2\"</span> style=<span class=\"hljs-string\">\"background-color: var(--secondary); color: var(--dark-text)\"</span>>\n&#x3C;/section>\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> featuredCocktailCard = $(<span class=\"hljs-string\">'#featured-cocktail'</span>);\n<span class=\"hljs-comment\">// ...</span>\nfeaturedCocktailCard.<span class=\"hljs-title function_\">append</span>(content)\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-DynamicallycreatedHTMLusingJavaScriptAquickdemousingagroupproject_0.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p>\"featuredCocktailCard.append()\" 함수 핸들이 호출되면, 괄호 안에 추가된 내용은 선택된 요소(즉, 객체의 이름이 지정된 요소)에 HTML 문서에 삽입됩니다. 이후에는 JavaScript로 작성된 코드지만 HTML 구문과 용어를 따를 것입니다.</p>\n<pre><code class=\"hljs language-js\">featuredCocktailCard.<span class=\"hljs-title function_\">empty</span>().<span class=\"hljs-title function_\">append</span>(<span class=\"hljs-string\">`\n          &#x3C;h3 class=\"is-size-1 card-header-title is-centered\"><span class=\"hljs-subst\">${toTitleCase(cocktailName)}</span>&#x3C;/h3>\n          &#x3C;div id=\"featuredCocktailSection\" class=\"is-flex is-justify-content-center\">\n            &#x3C;div class=\"columns card-image\">`</span>)\n</code></pre>\n<p>스크린샷에 캡쳐된 코드 양은 기술적으로 페이지에 추가할 수 있는 HTML의 제한이 없다는 것을 보여줍니다. 그러나, 발생하는 동적 요소 생성을 가능한 경우 여러 함수로 분리하여 더 잘 관리하는 것이 좋습니다. 게다가, 위에서 \"append(...)\" 앞에 \".empty()\"도 있는 것을 알 수 있습니다. \".empty()\"는 특징있는 칵테일 카드 ID 내의 모든 요소를 제거하지만, 이를 따라오는 \".append\"는 그 후에 콘텐츠를 다시 교체할 것입니다(이 경우 반복 때문에 다른 입력 세트로).</p>\n<p>동적 HTML 내에서 사이즈 및 정렬/정렬에 대한 클래스 및 ID 선언이 있음에 유의하십시오. 해당 용어를 알아보셨나요? 요소를 추가하거나 제거하지 않더라도 이것은 알아두어야 할 중요한 옵션입니다: 이제 CSS를 사용하여 동적 요소 조작에 참여할 수 있습니다. HTML을 변경하여 외관을 완전히 변경할 수 있는 새로운 특성 집합을 수용하도록 변경할 수 있습니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}