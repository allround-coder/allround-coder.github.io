{"pageProps":{"post":{"title":"HTML, CSS 및 Javascript를 사용한 최고의 멋진 슬라이더 효과 만드는 방법","description":"","date":"2024-05-17 21:21","slug":"2024-05-17-CreateATopCrazySliderEffectsUsingHTMLCSSandJavascript","content":"\n\n<img src=\"https://miro.medium.com/v2/resize:fit:1140/1*5lwNm-FVTRS5eGwUvm8Hbw.gif\" />\n\n웹사이트의 사용자 경험을 크게 향상시킬 수 있는 멋진 상호작용 슬라이더를 만들어보세요. 이 기사에서는 HTML, CSS 및 JavaScript를 사용하여 최고 수준의 멋진 슬라이더 효과를 구축하는 과정을 안내합니다. 초보자든 숙련된 개발자든 상관없이 이 자습서를 통해 시각적으로 매력적이고 매우 기능적인 슬라이더를 만들 수 있을 것입니다.\n\n이 쉽게 이해할 수 있는 비디오를 시청해보세요 🙏😁\n\n## 단계 1: HTML 구조 설정\n\n<div class=\"content-ad\"></div>\n\n먼저, 슬라이더의 기초 역할을 하는 간단한 HTML 구조가 필요합니다. 다음은 설정 방법에 대한 예시입니다:\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Top Slider</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css\" rel=\"stylesheet\" />\n</head>\n\n<body>\n    <div class=\"gallery-wrap\">\n\n        <div class=\"gallery\">\n            <div>\n                <span><img src=\"./images/image-1.png\" alt=\"\"></span>\n                <span><img src=\"./images/image-2.png\" alt=\"\"></span>\n                <span><img src=\"./images/image-3.png\" alt=\"\"></span>\n                <span><img src=\"./images/image-4.png\" alt=\"\"></span>\n                <span><img src=\"./images/image-5.png\" alt=\"\"></span>\n                <span><img src=\"./images/image-6.png\" alt=\"\"></span>\n            </div>\n\n        </div>\n\n        <div class=\"Btn-group\">\n            <span><i id=\"topBtn\" class=\"ri-arrow-up-fill\"></i></span>\n            <span><i id=\"downBtn\" class=\"ri-arrow-down-fill\"></i></span>\n        </div>\n    </div>\n\n    <script src=\"app.js\"></script>\n</body>\n\n</html>\n```\n\n## 단계 2: CSS로 스타일링\n\n다음은 슬라이더를 CSS로 스타일링하여 멋지게 보이고 원활하게 작동하도록하는 샘플 CSS 코드입니다:\n\n<div class=\"content-ad\"></div>\n\n```css\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nhtml,body {  \n    height: 100vh;\n    width: 100%;\n    background-color: #191919;\n    overflow: hidden;\n}\n.gallery-warp{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 10% auto;\n    flex-direction: column;\n}\n.gallery{\n    display: flex;\n    width: 27%;\n    height: 587px;\n    overflow-y: scroll;\n}\n.gallery::-webkit-scrollbar{\n    display: none;\n}\n.gallery div{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n}\n.gallery div img{\n    filter: grayscale(100%);\n    width: 100%;\n    transition: transform 0.5s;\n}\n.gallery div img:hover{\n    filter: grayscale(0);\n    cursor: pointer;\n    transform: scale(1.1);\n}\n.Btn-group{\n    margin-top: 1rem;\n    display: flex;\n    gap: 18px;\n}\n.Btn-group span i{\n    padding: 4px 4px;\n    border: 1px solid;\n    font-size: 24px;\n    color: #fff;\n    border-radius: 20px;\n    cursor: pointer;\n    transition: all ease-in-out 0.8s;\n}\n.Btn-group span i:hover{\n    background-color: #fff;\n    color: #191919;\n    border: none;\n}\n```\n## Step 3: Adding JavaScript for Functionality\n\nFinally, add JavaScript to bring the slider to life. This script will handle the slide transitions and navigation functionality:\n\n```js\nlet scrollContainer = document.querySelector(\".gallery\");\nlet topBtn = document.getElementById(\"topBtn\")\nlet downBtn = document.getElementById(\"downBtn\");\n\nscrollContainer.addEventListener(\"wheel\", (e) => {\n    e.preventDefault();\n    scrollContainer.style.scrollBehavior = \"auto\";\n    scrollContainer.scrollTop += e.deltaY;\n})\n\ntopBtn.addEventListener(\"click\", () => {\n    scrollContainer.style.scrollBehavior = \"smooth\";\n    scrollContainer.scrollTop += 610;\n})\ndownBtn.addEventListener(\"click\", () => {\n    scrollContainer.style.scrollBehavior = \"smooth\";\n    scrollContainer.scrollTop -= 600;\n})\n```\n\n<div class=\"content-ad\"></div>\n\n# 향상 및 고급 기능\n\n비디오에서 기본 슬라이더에 추가할 수 있는 가능한 향상 방안을 제안합니다:\n\n- 3D 전환: CSS 변형을 이용하여 슬라이드 전환에 3D 효과를 추가합니다.\n- Parallax 효과: 패럴랙스 스크롤링을 구현하여 깊이 효과를 부여합니다.\n- 고급 애니메이션: GSAP(그린속 애니메이션 플랫폼)과 같은 라이브러리를 사용하여 더 복잡한 애니메이션을 만듭니다.","ogImage":{"url":"/assets/img/2024-05-17-CreateATopCrazySliderEffectsUsingHTMLCSSandJavascript_0.png"},"coverImage":"/assets/img/2024-05-17-CreateATopCrazySliderEffectsUsingHTMLCSSandJavascript_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"https://miro.medium.com/v2/resize:fit:1140/1*5lwNm-FVTRS5eGwUvm8Hbw.gif\">\n<p>웹사이트의 사용자 경험을 크게 향상시킬 수 있는 멋진 상호작용 슬라이더를 만들어보세요. 이 기사에서는 HTML, CSS 및 JavaScript를 사용하여 최고 수준의 멋진 슬라이더 효과를 구축하는 과정을 안내합니다. 초보자든 숙련된 개발자든 상관없이 이 자습서를 통해 시각적으로 매력적이고 매우 기능적인 슬라이더를 만들 수 있을 것입니다.</p>\n<p>이 쉽게 이해할 수 있는 비디오를 시청해보세요 🙏😁</p>\n<h2>단계 1: HTML 구조 설정</h2>\n<div class=\"content-ad\"></div>\n<p>먼저, 슬라이더의 기초 역할을 하는 간단한 HTML 구조가 필요합니다. 다음은 설정 방법에 대한 예시입니다:</p>\n<pre><code class=\"hljs language-js\">&#x3C;!<span class=\"hljs-variable constant_\">DOCTYPE</span> html>\n&#x3C;html lang=\"en\">\n\n&#x3C;head>\n    &#x3C;meta charset=\"UTF-8\">\n    &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    &#x3C;title>Top Slider&#x3C;/title>\n    &#x3C;link rel=\"stylesheet\" href=\"style.css\">\n    &#x3C;link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css\" rel=\"stylesheet\" />\n&#x3C;/head>\n\n&#x3C;body>\n    &#x3C;div class=\"gallery-wrap\">\n\n        &#x3C;div class=\"gallery\">\n            &#x3C;div>\n                &#x3C;span>&#x3C;img src=\"./images/image-1.png\" alt=\"\">&#x3C;/span>\n                &#x3C;span>&#x3C;img src=\"./images/image-2.png\" alt=\"\">&#x3C;/span>\n                &#x3C;span>&#x3C;img src=\"./images/image-3.png\" alt=\"\">&#x3C;/span>\n                &#x3C;span>&#x3C;img src=\"./images/image-4.png\" alt=\"\">&#x3C;/span>\n                &#x3C;span>&#x3C;img src=\"./images/image-5.png\" alt=\"\">&#x3C;/span>\n                &#x3C;span>&#x3C;img src=\"./images/image-6.png\" alt=\"\">&#x3C;/span>\n            &#x3C;/div>\n\n        &#x3C;/div>\n\n        &#x3C;div class=\"Btn-group\">\n            &#x3C;span>&#x3C;i id=\"topBtn\" class=\"ri-arrow-up-fill\">&#x3C;/i>&#x3C;/span>\n            &#x3C;span>&#x3C;i id=\"downBtn\" class=\"ri-arrow-down-fill\">&#x3C;/i>&#x3C;/span>\n        &#x3C;/div>\n    &#x3C;/div>\n\n    &#x3C;script src=\"app.js\">&#x3C;/script>\n&#x3C;/body>\n\n&#x3C;/html>\n</code></pre>\n<h2>단계 2: CSS로 스타일링</h2>\n<p>다음은 슬라이더를 CSS로 스타일링하여 멋지게 보이고 원활하게 작동하도록하는 샘플 CSS 코드입니다:</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-css\">*{\n    <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">box-sizing</span>: border-box;\n}\n<span class=\"hljs-selector-tag\">html</span>,<span class=\"hljs-selector-tag\">body</span> {  \n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100vh</span>;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#191919</span>;\n    <span class=\"hljs-attribute\">overflow</span>: hidden;\n}\n<span class=\"hljs-selector-class\">.gallery-warp</span>{\n    <span class=\"hljs-attribute\">display</span>: flex;\n    <span class=\"hljs-attribute\">align-items</span>: center;\n    <span class=\"hljs-attribute\">justify-content</span>: center;\n    <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10%</span> auto;\n    <span class=\"hljs-attribute\">flex-direction</span>: column;\n}\n<span class=\"hljs-selector-class\">.gallery</span>{\n    <span class=\"hljs-attribute\">display</span>: flex;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">27%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">587px</span>;\n    <span class=\"hljs-attribute\">overflow-y</span>: scroll;\n}\n<span class=\"hljs-selector-class\">.gallery</span>::-webkit-scrollbar{\n    <span class=\"hljs-attribute\">display</span>: none;\n}\n<span class=\"hljs-selector-class\">.gallery</span> <span class=\"hljs-selector-tag\">div</span>{\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">display</span>: flex;\n    <span class=\"hljs-attribute\">flex-direction</span>: column;\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n}\n<span class=\"hljs-selector-class\">.gallery</span> <span class=\"hljs-selector-tag\">div</span> <span class=\"hljs-selector-tag\">img</span>{\n    <span class=\"hljs-attribute\">filter</span>: <span class=\"hljs-built_in\">grayscale</span>(<span class=\"hljs-number\">100%</span>);\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">transition</span>: transform <span class=\"hljs-number\">0.5s</span>;\n}\n<span class=\"hljs-selector-class\">.gallery</span> <span class=\"hljs-selector-tag\">div</span> <span class=\"hljs-selector-tag\">img</span><span class=\"hljs-selector-pseudo\">:hover</span>{\n    <span class=\"hljs-attribute\">filter</span>: <span class=\"hljs-built_in\">grayscale</span>(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-attribute\">cursor</span>: pointer;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(<span class=\"hljs-number\">1.1</span>);\n}\n<span class=\"hljs-selector-class\">.Btn-group</span>{\n    <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">1rem</span>;\n    <span class=\"hljs-attribute\">display</span>: flex;\n    <span class=\"hljs-attribute\">gap</span>: <span class=\"hljs-number\">18px</span>;\n}\n<span class=\"hljs-selector-class\">.Btn-group</span> <span class=\"hljs-selector-tag\">span</span> <span class=\"hljs-selector-tag\">i</span>{\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">4px</span> <span class=\"hljs-number\">4px</span>;\n    <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid;\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">24px</span>;\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#fff</span>;\n    <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">20px</span>;\n    <span class=\"hljs-attribute\">cursor</span>: pointer;\n    <span class=\"hljs-attribute\">transition</span>: all ease-in-out <span class=\"hljs-number\">0.8s</span>;\n}\n<span class=\"hljs-selector-class\">.Btn-group</span> <span class=\"hljs-selector-tag\">span</span> <span class=\"hljs-selector-tag\">i</span><span class=\"hljs-selector-pseudo\">:hover</span>{\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fff</span>;\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#191919</span>;\n    <span class=\"hljs-attribute\">border</span>: none;\n}\n</code></pre>\n<h2>Step 3: Adding JavaScript for Functionality</h2>\n<p>Finally, add JavaScript to bring the slider to life. This script will handle the slide transitions and navigation functionality:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">let</span> scrollContainer = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">\".gallery\"</span>);\n<span class=\"hljs-keyword\">let</span> topBtn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"topBtn\"</span>)\n<span class=\"hljs-keyword\">let</span> downBtn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"downBtn\"</span>);\n\nscrollContainer.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"wheel\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>) =></span> {\n    e.<span class=\"hljs-title function_\">preventDefault</span>();\n    scrollContainer.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">scrollBehavior</span> = <span class=\"hljs-string\">\"auto\"</span>;\n    scrollContainer.<span class=\"hljs-property\">scrollTop</span> += e.<span class=\"hljs-property\">deltaY</span>;\n})\n\ntopBtn.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-function\">() =></span> {\n    scrollContainer.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">scrollBehavior</span> = <span class=\"hljs-string\">\"smooth\"</span>;\n    scrollContainer.<span class=\"hljs-property\">scrollTop</span> += <span class=\"hljs-number\">610</span>;\n})\ndownBtn.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-function\">() =></span> {\n    scrollContainer.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">scrollBehavior</span> = <span class=\"hljs-string\">\"smooth\"</span>;\n    scrollContainer.<span class=\"hljs-property\">scrollTop</span> -= <span class=\"hljs-number\">600</span>;\n})\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>향상 및 고급 기능</h1>\n<p>비디오에서 기본 슬라이더에 추가할 수 있는 가능한 향상 방안을 제안합니다:</p>\n<ul>\n<li>3D 전환: CSS 변형을 이용하여 슬라이드 전환에 3D 효과를 추가합니다.</li>\n<li>Parallax 효과: 패럴랙스 스크롤링을 구현하여 깊이 효과를 부여합니다.</li>\n<li>고급 애니메이션: GSAP(그린속 애니메이션 플랫폼)과 같은 라이브러리를 사용하여 더 복잡한 애니메이션을 만듭니다.</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}