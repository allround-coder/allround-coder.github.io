{"pageProps":{"post":{"title":"플러터 스택 주간 소식 제125호","description":"","date":"2024-05-27 19:16","slug":"2024-05-27-FlutterStackWeeklyIssue125","content":"\n\n<img src=\"/assets/img/2024-05-27-FlutterStackWeeklyIssue125_0.png\" />\n\n# 기사\n\n## 플러터에서 JSON 파일을 이용한 다국어 지원\n\n플러터에서 애플리케이션을 국제화하는 다양한 방법이 있습니다. 일반적인 방법 중 하나는 JSON 파일을 사용하는 것입니다. 이 글에서는 플러터에서 JSON 파일을 이용한 다국어 지원에 대해 알아보겠습니다.\n\n<div class=\"content-ad\"></div>\n\n## AWS로 풀스택 Dart 배포하기, 제 III부: AWS로 배포하기\n\n이 시리즈의 지난 두 글에서 우리는 헤들리스 CMS에서 블로그 콘텐츠를 가져오기 위한 Dart Frog API를 구축하고 콘텐츠를 브라우저에 표시하기 위해 Flutter 웹 앱을 구축하는 데에 대해 논의했습니다. 이 글에서는 AWS App Runner, Amplify 및 GitHub Actions를 사용하여 AWS에 풀스택 Dart 블로그 앱을 배포하는 방법을 배우게 될 것입니다.\n\n## Flutter에서 일반적인 로컬라이제이션 실수 피하기: 최상의 실천 방법과 해결책\n\n이 글에서는 Flutter 앱 로컬라이제이션 중에 만날 수 있는 일반적인 실수들에 대해 살펴보고 이를 극복하기 위한 효과적인 전략을 탐구할 것입니다.\n\n<div class=\"content-ad\"></div>\n\n## 플러터: 모바일 UI 테스트 자동화 도구 선택하기\n\n이 기사는 Flattium, Patrol, Mastero 등의 자동화 도구 경험을 공유합니다.\n\n## 후원사\n\n# 라이브러리 및 자원\n\n<div class=\"content-ad\"></div>\n\n## 내부_http_서버\n\n이 패키지는 앱 내부에 HTTP 서버를 만들 수 있도록 도와주는 패키지이며, 사용자가 웹 서버 내에서 파일을 업로드할 수 있습니다.\n\n## elevarm_ui\n\nFlutter용 Elevarm 디자인 시스템입니다.\n\n<div class=\"content-ad\"></div>\n\n# 비디오\n\n- Observable Flutter #43: On-device LLMs with Gemma\n\n- Flutter로 멀티 플랫폼 게임 만들기\n\n- Google I/O 2024에서 5분 안에 알아보는 Flutter\n\n<div class=\"content-ad\"></div>\n\n# 다음 주간을 위한 링크를 제안합니다\n\n제안과 피드백을 환영합니다!\n\n콘텐츠나 피드백이 있으시면 Canopas의 트위터 핸들인 @canopas_eng로 연락해주시면 다음 주간에서 고려하도록 하겠습니다.","ogImage":{"url":"/assets/img/2024-05-27-FlutterStackWeeklyIssue125_0.png"},"coverImage":"/assets/img/2024-05-27-FlutterStackWeeklyIssue125_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-05-27-FlutterStackWeeklyIssue125_0.png\">\n<h1>기사</h1>\n<h2>플러터에서 JSON 파일을 이용한 다국어 지원</h2>\n<p>플러터에서 애플리케이션을 국제화하는 다양한 방법이 있습니다. 일반적인 방법 중 하나는 JSON 파일을 사용하는 것입니다. 이 글에서는 플러터에서 JSON 파일을 이용한 다국어 지원에 대해 알아보겠습니다.</p>\n<div class=\"content-ad\"></div>\n<h2>AWS로 풀스택 Dart 배포하기, 제 III부: AWS로 배포하기</h2>\n<p>이 시리즈의 지난 두 글에서 우리는 헤들리스 CMS에서 블로그 콘텐츠를 가져오기 위한 Dart Frog API를 구축하고 콘텐츠를 브라우저에 표시하기 위해 Flutter 웹 앱을 구축하는 데에 대해 논의했습니다. 이 글에서는 AWS App Runner, Amplify 및 GitHub Actions를 사용하여 AWS에 풀스택 Dart 블로그 앱을 배포하는 방법을 배우게 될 것입니다.</p>\n<h2>Flutter에서 일반적인 로컬라이제이션 실수 피하기: 최상의 실천 방법과 해결책</h2>\n<p>이 글에서는 Flutter 앱 로컬라이제이션 중에 만날 수 있는 일반적인 실수들에 대해 살펴보고 이를 극복하기 위한 효과적인 전략을 탐구할 것입니다.</p>\n<div class=\"content-ad\"></div>\n<h2>플러터: 모바일 UI 테스트 자동화 도구 선택하기</h2>\n<p>이 기사는 Flattium, Patrol, Mastero 등의 자동화 도구 경험을 공유합니다.</p>\n<h2>후원사</h2>\n<h1>라이브러리 및 자원</h1>\n<div class=\"content-ad\"></div>\n<h2>내부_http_서버</h2>\n<p>이 패키지는 앱 내부에 HTTP 서버를 만들 수 있도록 도와주는 패키지이며, 사용자가 웹 서버 내에서 파일을 업로드할 수 있습니다.</p>\n<h2>elevarm_ui</h2>\n<p>Flutter용 Elevarm 디자인 시스템입니다.</p>\n<div class=\"content-ad\"></div>\n<h1>비디오</h1>\n<ul>\n<li>\n<p>Observable Flutter #43: On-device LLMs with Gemma</p>\n</li>\n<li>\n<p>Flutter로 멀티 플랫폼 게임 만들기</p>\n</li>\n<li>\n<p>Google I/O 2024에서 5분 안에 알아보는 Flutter</p>\n</li>\n</ul>\n<div class=\"content-ad\"></div>\n<h1>다음 주간을 위한 링크를 제안합니다</h1>\n<p>제안과 피드백을 환영합니다!</p>\n<p>콘텐츠나 피드백이 있으시면 Canopas의 트위터 핸들인 @canopas_eng로 연락해주시면 다음 주간에서 고려하도록 하겠습니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}