{"pageProps":{"post":{"title":"(LWC)에서 레코드 상세 페이지로 이동하는 방법","description":"","date":"2024-05-02 00:52","slug":"2024-05-02-NavigatingtoRecordDetailPagesinSalesforceLightningWebComponentsLWC","content":"\n\n![이미지](/assets/img/2024-05-02-NavigatingtoRecordDetailPagesinSalesforceLightningWebComponentsLWC_0.png)\n\nSalesforce Lightning Web Components (LWC)에서는 다른 페이지로 이동하는 것이 흔한 요구 사항입니다. 사용자가 링크를 클릭했을 때 레코드의 상세 페이지로 이동하는 시나리오가 있습니다. 이 게시물에서는 Salesforce가 제공하는 NavigationMixin을 사용하여 LWC에서 레코드 상세 페이지로 이어지는 클릭 가능한 링크를 만드는 과정을 안내해 드릴 것입니다.\n\nNavigationMixin 이해하기\n\nNavigationMixin은 Salesforce가 제공하는 클래스로, 레코드 상세 페이지, 새 레코드 생성 페이지 또는 외부 URL과 같은 다양한 페이지로 이동할 수 있게 해줍니다. Navigate 메서드를 제공하여 Lightning Experience에서 서로 다른 페이지로 이동할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n컴포넌트 설정하기\n\n우선, NavigationMixin을 사용하려면 컴포넌트의 JavaScript 컨트롤러에서 확장해야 합니다:\n\n```js\nimport { LightningElement, api, wire } from 'lwc';\nimport { NavigationMixin } from 'lightning/navigation';\n\nexport default class YourComponentName extends NavigationMixin(LightningElement) {\n    // 여기에 컴포넌트 코드를 작성하세요\n}\n```\n\n클릭 가능한 링크 만들기\n\n<div class=\"content-ad\"></div>\n\n자, 이제 한 테이블이 있다고 상상해봅시다. 각 행이 레코드를 나타내며 특정 필드를 클릭할 수 있도록 하고 싶습니다. 예를 들어, 클릭 가능한 이름 필드가 있는 테이블을 가정해 봅시다:\n\n```js\n| scope=\"row\">\n|     <div class=\"slds-truncate\" title={item.StepName}>\n|         <a data-id={item.Id} onclick={navigateToRecord}>{item.Name}</a>\n|     </div>\n| </td>\n```\n\n여기에서는 링크를 클릭할 때 navigateToRecord 함수를 호출하기 위해 onclick 이벤트 핸들러가 추가되었습니다. 또한, 우리가 탐색하려는 레코드의 ID를 저장하기 위한 data-id 속성도 추가되었습니다.\n\n레코드의 상세 페이지로 이동하기\n\n<div class=\"content-ad\"></div>\n\n그 다음으로 JavaScript 컨트롤러에서 navigateToRecord 함수를 정의할 거에요. 이 함수는 NavigationMixin.Navigate 메소드를 사용하여 레코드의 상세 페이지로 이동합니다:\n\n```js\nnavigateToRecord(event) {\n    const recordId = event.currentTarget.dataset.id;\n    \n    this[NavigationMixin.Navigate]({\n        type: 'standard__recordPage',\n        attributes: {\n            recordId: recordId,\n            actionName: 'view'\n        }\n    });\n}\n```\n\n이 함수에서는 클릭한 링크의 data-id 속성에서 레코드 ID를 검색하여 NavigationMixin.Navigate 메소드에 전달하여 레코드의 상세 페이지로 이동할 거에요.\n\n마무리\n\n<div class=\"content-ad\"></div>\n\n그게 다야! 이제 테이블에서 이름 링크를 클릭하면 해당 레코드의 상세 페이지로 이동합니다. 이 접근법을 따라 테이블의 어떤 필드든 클릭 가능하게 만들어 해당 레코드의 상세 페이지로 이동할 수 있습니다. 이를 통해 구성 요소의 사용성을 크게 향상시키고 더 원활한 사용자 경험을 제공할 수 있습니다. 항상 구성 요소를 충분히 테스트하여 기대한 대로 작동하는지 확인하는 것을 잊지 마세요.","ogImage":{"url":"/assets/img/2024-05-02-NavigatingtoRecordDetailPagesinSalesforceLightningWebComponentsLWC_0.png"},"coverImage":"/assets/img/2024-05-02-NavigatingtoRecordDetailPagesinSalesforceLightningWebComponentsLWC_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-05-02-NavigatingtoRecordDetailPagesinSalesforceLightningWebComponentsLWC_0.png\" alt=\"이미지\"></p>\n<p>Salesforce Lightning Web Components (LWC)에서는 다른 페이지로 이동하는 것이 흔한 요구 사항입니다. 사용자가 링크를 클릭했을 때 레코드의 상세 페이지로 이동하는 시나리오가 있습니다. 이 게시물에서는 Salesforce가 제공하는 NavigationMixin을 사용하여 LWC에서 레코드 상세 페이지로 이어지는 클릭 가능한 링크를 만드는 과정을 안내해 드릴 것입니다.</p>\n<p>NavigationMixin 이해하기</p>\n<p>NavigationMixin은 Salesforce가 제공하는 클래스로, 레코드 상세 페이지, 새 레코드 생성 페이지 또는 외부 URL과 같은 다양한 페이지로 이동할 수 있게 해줍니다. Navigate 메서드를 제공하여 Lightning Experience에서 서로 다른 페이지로 이동할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p>컴포넌트 설정하기</p>\n<p>우선, NavigationMixin을 사용하려면 컴포넌트의 JavaScript 컨트롤러에서 확장해야 합니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">LightningElement</span>, api, wire } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'lwc'</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">NavigationMixin</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'lightning/navigation'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">YourComponentName</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">NavigationMixin</span>(<span class=\"hljs-title class_\">LightningElement</span>) {\n    <span class=\"hljs-comment\">// 여기에 컴포넌트 코드를 작성하세요</span>\n}\n</code></pre>\n<p>클릭 가능한 링크 만들기</p>\n<div class=\"content-ad\"></div>\n<p>자, 이제 한 테이블이 있다고 상상해봅시다. 각 행이 레코드를 나타내며 특정 필드를 클릭할 수 있도록 하고 싶습니다. 예를 들어, 클릭 가능한 이름 필드가 있는 테이블을 가정해 봅시다:</p>\n<pre><code class=\"hljs language-js\">| scope=<span class=\"hljs-string\">\"row\"</span>>\n|     <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"slds-truncate\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">{item.StepName}</span>></span>\n|         <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">data-id</span>=<span class=\"hljs-string\">{item.Id}</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">{navigateToRecord}</span>></span>{item.Name}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n|     <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n| &#x3C;/td>\n</code></pre>\n<p>여기에서는 링크를 클릭할 때 navigateToRecord 함수를 호출하기 위해 onclick 이벤트 핸들러가 추가되었습니다. 또한, 우리가 탐색하려는 레코드의 ID를 저장하기 위한 data-id 속성도 추가되었습니다.</p>\n<p>레코드의 상세 페이지로 이동하기</p>\n<div class=\"content-ad\"></div>\n<p>그 다음으로 JavaScript 컨트롤러에서 navigateToRecord 함수를 정의할 거에요. 이 함수는 NavigationMixin.Navigate 메소드를 사용하여 레코드의 상세 페이지로 이동합니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">navigateToRecord</span>(<span class=\"hljs-params\">event</span>) {\n    <span class=\"hljs-keyword\">const</span> recordId = event.<span class=\"hljs-property\">currentTarget</span>.<span class=\"hljs-property\">dataset</span>.<span class=\"hljs-property\">id</span>;\n    \n    <span class=\"hljs-variable language_\">this</span>[<span class=\"hljs-title class_\">NavigationMixin</span>.<span class=\"hljs-property\">Navigate</span>]({\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'standard__recordPage'</span>,\n        <span class=\"hljs-attr\">attributes</span>: {\n            <span class=\"hljs-attr\">recordId</span>: recordId,\n            <span class=\"hljs-attr\">actionName</span>: <span class=\"hljs-string\">'view'</span>\n        }\n    });\n}\n</code></pre>\n<p>이 함수에서는 클릭한 링크의 data-id 속성에서 레코드 ID를 검색하여 NavigationMixin.Navigate 메소드에 전달하여 레코드의 상세 페이지로 이동할 거에요.</p>\n<p>마무리</p>\n<div class=\"content-ad\"></div>\n<p>그게 다야! 이제 테이블에서 이름 링크를 클릭하면 해당 레코드의 상세 페이지로 이동합니다. 이 접근법을 따라 테이블의 어떤 필드든 클릭 가능하게 만들어 해당 레코드의 상세 페이지로 이동할 수 있습니다. 이를 통해 구성 요소의 사용성을 크게 향상시키고 더 원활한 사용자 경험을 제공할 수 있습니다. 항상 구성 요소를 충분히 테스트하여 기대한 대로 작동하는지 확인하는 것을 잊지 마세요.</p>\n</body>\n</html>\n"},"__N_SSG":true}