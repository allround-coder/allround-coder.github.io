{"pageProps":{"post":{"title":"브라우저에서 AI 활용하기 2024년 Google Chrome의 새로운 Prompt API 탐구","description":"","date":"2024-06-26 12:20","slug":"2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI","content":"\n브라우저에서 강력한 AI를 직접 사용할 수 있다면 어떻겠어요? WebGPU와 유사하지만 크롬이 모든 것을 처리해줍니다. 외부 서비스에 의존하거나 서버를 설정하거나 대용량 파일을 다운로드할 필요가 없어요. 이겔 시작하려고 600MB 모델을 다운로드하는 것이 아니에요. 이것은 브라우저에서 직접할 수 있는 것을 재정의하는 혁신적인 방법입니다.\n\n구글 크롬의 새로운 실험적 기능인 Gemini Nano용 Prompt API는 브라우저 내 AI 도구의 미래를 엿보게 해줍니다. 텍스트 요약, 문장 재구성, 정보 분류 등의 빠르고 간편한 작업에 뛰어나며 온라인에서 읽는 모든 것에 빠르게 통찰을 추가하는 데 완벽합니다. 그러나 이 도구는 코드를 다른 프로그래밍 언어로 변환하는 등 더 복잡한 작업을 위해 만들어진 것이 아닙니다. 더 간단한 응용에 대한 기능은 인상적이지만, 보다 요구되는 도전에는 한계가 있습니다.\n\n다음은 설정하는 방법입니다:\n\n- 최신 버전의 Google Canary를 다운로드합니다.\n- 주소 표시줄에 `chrome://flags`를 입력합니다.\n- \"Prompt API for Gemini Nano\"를 찾은 후 설정을 'Enabled'로 변경합니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_0.png\" />\n\n- \"Enables optimization guide on device\"을 검색하여 'Enabled'로 설정하세요.\n\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_1.png\" />\n\n- '다시 시작' 버튼을 클릭하여 브라우저를 다시 시작하세요.\n- 브라우저를 다시 열면 주소 표시줄에 `chrome://components/`을 입력한 후 \"Optimization Guide On Device Model\"을 찾고 '업데이트 확인'을 클릭하세요.\n\n<div class=\"content-ad\"></div>\n\n아래의 코드를 Markdown 포맷으로 변경하였습니다.\n\n\n![이미지](/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_2.png)\n\n이미지가 다운로드를 시작하는 것을 확인할 수 있습니다. 다운로드가 완료될 때까지 기다려주세요.\n\n지금 모든 것이 작동되는 것을 보려면:\n\n- 개발자 도구를 여는 방법: 웹페이지에서 개발자 도구를 열고, 프롬프트를 사용할 세션을 설정하세요.\n\n\n<div class=\"content-ad\"></div>\n\n```js\nconst session = await window.ai.createTextSession();\n```\n\n- 질문을 해주세요\n\n```js\nsession.prompt(\"아재 개그 하나 알려줄래?\").then(console.log);\n```\n\n웃음이 절로 나올 수도 있어요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_3.png\" />\n\n우리는 이러한 함수로 우리의 JS 앱을 통합할 수 있어요\n\n```js\nasync function getAnswer(question) {\n  try {\n    const session = await window.ai.createTextSession();\n\n    const aiResponse = await session.prompt(question);\n\n    return aiResponse;\n  } catch (e) {\n    throw new Error(\"세션 생성 중 오류 발생, AI가 활성화되지 않았습니다.\");\n  }\n}\n```\n\n작은 Next.js 앱은 https://chrome-llm-local-nextjs-git-main-muthukumaran-ns-projects.vercel.app/ 에서 이용 가능합니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_4.png\" />\n\n깃허브에서 소스 코드를 확인하세요: https://github.com/muthuishere/chrome-llm-local-nextjs\n\n현재 Gemini Nano용 Prompt API는 Google Chrome Canary에서 실험적인 기능으로 제공됩니다. 더 넓은 Chrome 릴리스로 넘어가거나 그렇지 않을 수도 있지만, 이 이니셔티브는 더욱 개인 정보 보호가 강화된 효율적인 웹 상호작용을 위한 중요한 한 걸음입니다. Google은 브라우저 내에서 AI를 직접 실행함으로써, 데이터가 기기를 벗어나지 않고도 유용한 AI 기반 통찰력을 생성하는 미래로 향하는 길을 열어두고 있습니다. 이는 개인 정보 보호를 향상시키는 것뿐만 아니라 더 빠른 응답 시간을 보장하기도 합니다. 이 기능을 오늘 실험해 보면 브라우저 능력의 잠재력을 보다 명확하게 볼 수 있을 것입니다. 로컬 모델이 매일의 디지털 상호작용을 혁신시키면서도 데이터 보안을 희생하지 않을 수 있는 브라우저 능력의 잠재적 미래를 엿볼 수 있습니다.\n","ogImage":{"url":"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_0.png"},"coverImage":"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>브라우저에서 강력한 AI를 직접 사용할 수 있다면 어떻겠어요? WebGPU와 유사하지만 크롬이 모든 것을 처리해줍니다. 외부 서비스에 의존하거나 서버를 설정하거나 대용량 파일을 다운로드할 필요가 없어요. 이겔 시작하려고 600MB 모델을 다운로드하는 것이 아니에요. 이것은 브라우저에서 직접할 수 있는 것을 재정의하는 혁신적인 방법입니다.</p>\n<p>구글 크롬의 새로운 실험적 기능인 Gemini Nano용 Prompt API는 브라우저 내 AI 도구의 미래를 엿보게 해줍니다. 텍스트 요약, 문장 재구성, 정보 분류 등의 빠르고 간편한 작업에 뛰어나며 온라인에서 읽는 모든 것에 빠르게 통찰을 추가하는 데 완벽합니다. 그러나 이 도구는 코드를 다른 프로그래밍 언어로 변환하는 등 더 복잡한 작업을 위해 만들어진 것이 아닙니다. 더 간단한 응용에 대한 기능은 인상적이지만, 보다 요구되는 도전에는 한계가 있습니다.</p>\n<p>다음은 설정하는 방법입니다:</p>\n<ul>\n<li>최신 버전의 Google Canary를 다운로드합니다.</li>\n<li>주소 표시줄에 <code>chrome://flags</code>를 입력합니다.</li>\n<li>\"Prompt API for Gemini Nano\"를 찾은 후 설정을 'Enabled'로 변경합니다.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_0.png\">\n<ul>\n<li>\"Enables optimization guide on device\"을 검색하여 'Enabled'로 설정하세요.</li>\n</ul>\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_1.png\">\n<ul>\n<li>'다시 시작' 버튼을 클릭하여 브라우저를 다시 시작하세요.</li>\n<li>브라우저를 다시 열면 주소 표시줄에 <code>chrome://components/</code>을 입력한 후 \"Optimization Guide On Device Model\"을 찾고 '업데이트 확인'을 클릭하세요.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<p>아래의 코드를 Markdown 포맷으로 변경하였습니다.</p>\n<p><img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_2.png\" alt=\"이미지\"></p>\n<p>이미지가 다운로드를 시작하는 것을 확인할 수 있습니다. 다운로드가 완료될 때까지 기다려주세요.</p>\n<p>지금 모든 것이 작동되는 것을 보려면:</p>\n<ul>\n<li>개발자 도구를 여는 방법: 웹페이지에서 개발자 도구를 열고, 프롬프트를 사용할 세션을 설정하세요.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> session = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">ai</span>.<span class=\"hljs-title function_\">createTextSession</span>();\n</code></pre>\n<ul>\n<li>질문을 해주세요</li>\n</ul>\n<pre><code class=\"hljs language-js\">session.<span class=\"hljs-title function_\">prompt</span>(<span class=\"hljs-string\">\"아재 개그 하나 알려줄래?\"</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">log</span>);\n</code></pre>\n<p>웃음이 절로 나올 수도 있어요.</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_3.png\">\n<p>우리는 이러한 함수로 우리의 JS 앱을 통합할 수 있어요</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getAnswer</span>(<span class=\"hljs-params\">question</span>) {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">const</span> session = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">ai</span>.<span class=\"hljs-title function_\">createTextSession</span>();\n\n    <span class=\"hljs-keyword\">const</span> aiResponse = <span class=\"hljs-keyword\">await</span> session.<span class=\"hljs-title function_\">prompt</span>(question);\n\n    <span class=\"hljs-keyword\">return</span> aiResponse;\n  } <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">\"세션 생성 중 오류 발생, AI가 활성화되지 않았습니다.\"</span>);\n  }\n}\n</code></pre>\n<p>작은 Next.js 앱은 <a href=\"https://chrome-llm-local-nextjs-git-main-muthukumaran-ns-projects.vercel.app/\" rel=\"nofollow\" target=\"_blank\">https://chrome-llm-local-nextjs-git-main-muthukumaran-ns-projects.vercel.app/</a> 에서 이용 가능합니다.</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-26-AIWithinYourBrowserExploringGoogleChromesNewPromptAPI_4.png\">\n<p>깃허브에서 소스 코드를 확인하세요: <a href=\"https://github.com/muthuishere/chrome-llm-local-nextjs\" rel=\"nofollow\" target=\"_blank\">https://github.com/muthuishere/chrome-llm-local-nextjs</a></p>\n<p>현재 Gemini Nano용 Prompt API는 Google Chrome Canary에서 실험적인 기능으로 제공됩니다. 더 넓은 Chrome 릴리스로 넘어가거나 그렇지 않을 수도 있지만, 이 이니셔티브는 더욱 개인 정보 보호가 강화된 효율적인 웹 상호작용을 위한 중요한 한 걸음입니다. Google은 브라우저 내에서 AI를 직접 실행함으로써, 데이터가 기기를 벗어나지 않고도 유용한 AI 기반 통찰력을 생성하는 미래로 향하는 길을 열어두고 있습니다. 이는 개인 정보 보호를 향상시키는 것뿐만 아니라 더 빠른 응답 시간을 보장하기도 합니다. 이 기능을 오늘 실험해 보면 브라우저 능력의 잠재력을 보다 명확하게 볼 수 있을 것입니다. 로컬 모델이 매일의 디지털 상호작용을 혁신시키면서도 데이터 보안을 희생하지 않을 수 있는 브라우저 능력의 잠재적 미래를 엿볼 수 있습니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}