{"pageProps":{"post":{"title":"QQ Plot 마스터하기 데이터 과학자의 비밀 무기","description":"","date":"2024-05-17 04:00","slug":"2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon","content":"\n\n## QQ Plot을 사용하여 Python | Statsmodel QQ Plot | SciPy QQ Plot\n\n![QQ Plot](/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_0.png)\n\nQuantile-quantile(QQ plot) 그림은 데이터 세트가 특정 확률 분포를 따르는지 또는 두 데이터 샘플이 동일한 모집단에서 왔는지 확인하는 데 사용되는 시각적 방법입니다.\n\nQQ Plot은 데이터가 정규 분포를 따르는지 확인하는 데 사용할 수 있는 그래픽 방법 중 하나입니다.\n\n<div class=\"content-ad\"></div>\n\nQQ Plot에서는 이론상 분포의 분위수를 X축에, 데이터의 분위수를 Y축에 그립니다. 이러한 점들이 일직선(y=x)상에 있으면, 데이터가 해당 분포를 따른다는 것을 나타냅니다.\n\n이제 데이터를 가져와 정규 분포와 비교하고, 해당 데이터가 정규 분포에서 나온 것인지 확인해봅시다.\n\n우선, 다양한 라이브러리를 가져오겠습니다.\n\n```js\nimport numpy as np\nimport scipy.stats as stats\nimport pandas as pd\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\n```\n\n<div class=\"content-ad\"></div>\n\n이제, 데이터셋을 불러올게요.\n\n```js\ndf1=pd.read_csv(\"https://gist.githubusercontent.com/stoicsapien1/4c0d96aa3b6f99178f5ee071bef23d10/raw/281efb659ff1713ac64b680a9bf44a53ce367e38/data.csv\")\n```\n\nScipy 라이브러리를 사용하여 QQ Plot을 생성해볼까요?\n\n우선 데이터를 표준화한 다음 QQ Plot을 만들어볼 거에요.\n\n<div class=\"content-ad\"></div>\n\n```js\ndf.head(5)\n```\n\n<img src=\"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_1.png\" />\n\n```js\ndf[\"Z\"]=(df[\"data\"]-df[\"data\"].mean())/df[\"data\"].std()\n```\n\n새롭게 표준화된 데이터 열을 생성했어요. 데이터의 상위 내용은 아래에 제공됩니다.\n\n<div class=\"content-ad\"></div>\n\n\n![QQ Plot](/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_2.png)\n\n이제 Scipy 라이브러리를 사용하여 QQ 플롯을 생성해 봅시다.\n\n```python\nstats.probplot(df[\"Z\"], dist=\"norm\", plot=plt)\nplt.show()\n```\n\n![QQ Plot](/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_3.png)\n\n\n<div class=\"content-ad\"></div>\n\nstatsmodels 라이브러리를 사용하여 QQ Plot을 생성할 수도 있습니다. 그럼 시작해 보겠습니다.\n\n```python\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\n\nsm.qqplot(df[\"Z\"], line=\"45\")\nplt.show()\n```\n\n![QQ Plot](/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_4.png)\n\n대부분의 점이 직선(빨간 선) 위에 있는 경우, 데이터가 정규 분포를 따른다고 추정할 수 있습니다. 여기서는 대부분의 데이터가 직선 위에 있는 것을 관찰할 수 있지만, 추가적인 통계 검정을 통해 정규성을 확인해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n깃허브 저장소: EDA-Projects/QQ Plot at main · stoicsapien1/EDA-Projects (github.com)\n\n여러 가지 통계적 검정 방법 중 하나는 콜모고로프-스미르노프 검정입니다. 이에 대해 더 알아보려면 콜모고로프-스미르노프 검정에 대한 내 블로그를 읽어주세요.\n\n안녕히 가세요!","ogImage":{"url":"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_0.png"},"coverImage":"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>QQ Plot을 사용하여 Python | Statsmodel QQ Plot | SciPy QQ Plot</h2>\n<p><img src=\"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_0.png\" alt=\"QQ Plot\"></p>\n<p>Quantile-quantile(QQ plot) 그림은 데이터 세트가 특정 확률 분포를 따르는지 또는 두 데이터 샘플이 동일한 모집단에서 왔는지 확인하는 데 사용되는 시각적 방법입니다.</p>\n<p>QQ Plot은 데이터가 정규 분포를 따르는지 확인하는 데 사용할 수 있는 그래픽 방법 중 하나입니다.</p>\n<div class=\"content-ad\"></div>\n<p>QQ Plot에서는 이론상 분포의 분위수를 X축에, 데이터의 분위수를 Y축에 그립니다. 이러한 점들이 일직선(y=x)상에 있으면, 데이터가 해당 분포를 따른다는 것을 나타냅니다.</p>\n<p>이제 데이터를 가져와 정규 분포와 비교하고, 해당 데이터가 정규 분포에서 나온 것인지 확인해봅시다.</p>\n<p>우선, 다양한 라이브러리를 가져오겠습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n<span class=\"hljs-keyword\">import</span> scipy.<span class=\"hljs-property\">stats</span> <span class=\"hljs-keyword\">as</span> stats\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">import</span> seaborn <span class=\"hljs-keyword\">as</span> sns\n<span class=\"hljs-keyword\">import</span> statsmodels.<span class=\"hljs-property\">api</span> <span class=\"hljs-keyword\">as</span> sm\n<span class=\"hljs-keyword\">import</span> matplotlib.<span class=\"hljs-property\">pyplot</span> <span class=\"hljs-keyword\">as</span> plt\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>이제, 데이터셋을 불러올게요.</p>\n<pre><code class=\"hljs language-js\">df1=pd.<span class=\"hljs-title function_\">read_csv</span>(<span class=\"hljs-string\">\"https://gist.githubusercontent.com/stoicsapien1/4c0d96aa3b6f99178f5ee071bef23d10/raw/281efb659ff1713ac64b680a9bf44a53ce367e38/data.csv\"</span>)\n</code></pre>\n<p>Scipy 라이브러리를 사용하여 QQ Plot을 생성해볼까요?</p>\n<p>우선 데이터를 표준화한 다음 QQ Plot을 만들어볼 거에요.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\">df.<span class=\"hljs-title function_\">head</span>(<span class=\"hljs-number\">5</span>)\n</code></pre>\n<img src=\"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_1.png\">\n<pre><code class=\"hljs language-js\">df[<span class=\"hljs-string\">\"Z\"</span>]=(df[<span class=\"hljs-string\">\"data\"</span>]-df[<span class=\"hljs-string\">\"data\"</span>].<span class=\"hljs-title function_\">mean</span>())/df[<span class=\"hljs-string\">\"data\"</span>].<span class=\"hljs-title function_\">std</span>()\n</code></pre>\n<p>새롭게 표준화된 데이터 열을 생성했어요. 데이터의 상위 내용은 아래에 제공됩니다.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_2.png\" alt=\"QQ Plot\"></p>\n<p>이제 Scipy 라이브러리를 사용하여 QQ 플롯을 생성해 봅시다.</p>\n<pre><code class=\"hljs language-python\">stats.probplot(df[<span class=\"hljs-string\">\"Z\"</span>], dist=<span class=\"hljs-string\">\"norm\"</span>, plot=plt)\nplt.show()\n</code></pre>\n<p><img src=\"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_3.png\" alt=\"QQ Plot\"></p>\n<div class=\"content-ad\"></div>\n<p>statsmodels 라이브러리를 사용하여 QQ Plot을 생성할 수도 있습니다. 그럼 시작해 보겠습니다.</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> statsmodels.api <span class=\"hljs-keyword\">as</span> sm\n<span class=\"hljs-keyword\">import</span> matplotlib.pyplot <span class=\"hljs-keyword\">as</span> plt\n\nsm.qqplot(df[<span class=\"hljs-string\">\"Z\"</span>], line=<span class=\"hljs-string\">\"45\"</span>)\nplt.show()\n</code></pre>\n<p><img src=\"/assets/img/2024-05-17-MasteringQQPlotsADataScientistsSecretWeapon_4.png\" alt=\"QQ Plot\"></p>\n<p>대부분의 점이 직선(빨간 선) 위에 있는 경우, 데이터가 정규 분포를 따른다고 추정할 수 있습니다. 여기서는 대부분의 데이터가 직선 위에 있는 것을 관찰할 수 있지만, 추가적인 통계 검정을 통해 정규성을 확인해야 합니다.</p>\n<div class=\"content-ad\"></div>\n<p>깃허브 저장소: EDA-Projects/QQ Plot at main · stoicsapien1/EDA-Projects (github.com)</p>\n<p>여러 가지 통계적 검정 방법 중 하나는 콜모고로프-스미르노프 검정입니다. 이에 대해 더 알아보려면 콜모고로프-스미르노프 검정에 대한 내 블로그를 읽어주세요.</p>\n<p>안녕히 가세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}