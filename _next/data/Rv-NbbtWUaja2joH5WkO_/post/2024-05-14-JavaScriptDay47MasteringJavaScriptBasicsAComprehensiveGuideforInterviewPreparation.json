{"pageProps":{"post":{"title":"자바스크립트 47일차 - 자바스크립트 기초 마스터하기 면접 준비를 위한 포괄적인 가이드","description":"","date":"2024-05-14 15:21","slug":"2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation","content":"\n\n100일간의 자바스크립트 면접 준비: 초보자의 여정 | 코딩 라운드\n\n![이미지](/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_0.png)\n\n## 상위 10개 중요한 인터뷰 자바스크립트 코딩 라운드 인터뷰 질문\n\n## 자바스크립트에서 ARRAY의 ARRAY를 펼치는 방법?\n\n\n\n```js\nconst arry = [[1, 2, [3]], 4, [5, [6, 7]]]\n\n// 출력  [1, 2, 3, 4, 5, 6, 7]\n```\n\n답변\n\n단계 1 — flattenMyArray 함수는 배열을 입력으로 받고 각 요소를 반복합니다.\n\n단계 2 — 요소가 배열이면 해당 하위 배열을 펼치기 위해 재귀적으로 자신을 호출합니다.\n\n\n\n**단계 3** — 그렇지 않으면, 요소를 평탄화된 배열에 추가합니다.\n\n**단계 4** — 마지막으로, 평탄화된 배열을 반환합니다.\n\n# 방법 1 — (ForEach 방법)\n\n**단계 1** — 평탄화해야 할 입력 배열을 정의합니다.\n\n\n\n```js\nconst nestedArray = [[1, 2, [3]], 4, [5, [6, 7]]]\n```\n\nStep 2— `flattenArray` 함수와 결과값(펼쳐진 배열)을 저장할 빈 배열을 만듭니다.\n\n```js\nconst nestedArray = [[1, 2, [3]], 4, [5, [6, 7]]]\n\nfunction flattenArray(arr) {\n    let flattened = [];\n\n}\n```\n\nStep 3— 각 요소를 `forEach` 방법으로 반복하고 함수의 끝에 펼쳐진 값을 반환합니다.\n\n\n\n```js\nconst nestedArray = [[1, 2, [3]], 4, [5, [6, 7]]]\n\nfunction flattenArray(arr) {\n   let flattened = [];\n\n   arr.forEach(item => {\n     console.log(item)\n       \n   });\n\n    return flattened;\n}\n```\n\n제 4단계 — 입력 배열로 함수를 호출하고 항목에 대한 console.log를 확인합니다.\n\n```js\nconst nestedArray = [[1, 2, [3]], 4, [5, [6, 7]]]\n\nfunction flattenArray(arr) {\n   let flattened = [];\n\n   arr.forEach(item => {\n     console.log(item)\n       \n   });\n\n    return flattened;\n}\n\nconst flattenedArray = flattenArray(nestedArray);\n```\n\n<img src=\"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_1.png\" />\n\n\n\n\nStep 5— foreach 코드 안에 위의 console.log 관찰에 따라 몇 가지 조건을 추가해 봅시다.\n\n- 요소가 배열인 경우, 해당 하위 배열을 평탄화하도록 재귀적으로 자신을 호출합니다.\n- 그렇지 않으면, 해당 요소를 평탄화된 배열에 푸시합니다.\n\n```js\nconst nestedArray = [[1, 2, [3]], 4, [5, [6, 7]]]\n\nfunction flattenArray(arr) {\n   let flattened = [];\n\n   arr.forEach(item => {\n   /* 요소가 배열인 경우, 해당 하위 배열을 재귀적으로 평탄화하도록 호출합니다. */\n    if (Array.isArray(item)) {\n            flattened = flattened.concat(flattenArray(item));\n        } else {\n   // 그렇지 않으면, 해당 요소를 평탄화된 배열에 푸시합니다\n            flattened.push(item);\n        }\n\n   });\n\n    return flattened;\n}\n\nconst flattenedArray = flattenArray(nestedArray);\n```\n\n![JavaScript Basics](/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_2.png)\n\n\n\n# 최종 코드\n\n```js\nconst nestedArray = [[1, 2, [3]], 4, [5, [6, 7]]];\n\nfunction flattenArray(arr) {\n   let flattened = [];\n\n   arr.forEach(item => {\n   /* 만약 요소가 배열이라면 해당 하위 배열을 평탄화하기 위해 재귀적으로 자신을 호출합니다. */\n    if (Array.isArray(item)) {\n            flattened = flattened.concat(flattenArray(item));\n        } else {\n   // 그렇지 않으면 요소를 평탄화된 배열에 추가합니다.\n            flattened.push(item);\n        }\n\n   });\n\n    return flattened;\n}\n\nconst flattenedArray = flattenArray(nestedArray);\n```\n\nES6 Map 방법을 사용한 또 다른 방법을 DAY 48에서 논의할 예정입니다.\n\n![JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_3.png](/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_3.png)\n\n\n\n# 행복한 코딩 하세요 그리고 기대해주세요 :)\n\n# 만약 제 블로그가 도움이 되었다면 구독, 박수와 팔로우 부탁드립니다 :)","ogImage":{"url":"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_0.png"},"coverImage":"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>100일간의 자바스크립트 면접 준비: 초보자의 여정 | 코딩 라운드</p>\n<p><img src=\"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_0.png\" alt=\"이미지\"></p>\n<h2>상위 10개 중요한 인터뷰 자바스크립트 코딩 라운드 인터뷰 질문</h2>\n<h2>자바스크립트에서 ARRAY의 ARRAY를 펼치는 방법?</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> arry = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]]\n\n<span class=\"hljs-comment\">// 출력  [1, 2, 3, 4, 5, 6, 7]</span>\n</code></pre>\n<p>답변</p>\n<p>단계 1 — flattenMyArray 함수는 배열을 입력으로 받고 각 요소를 반복합니다.</p>\n<p>단계 2 — 요소가 배열이면 해당 하위 배열을 펼치기 위해 재귀적으로 자신을 호출합니다.</p>\n<p><strong>단계 3</strong> — 그렇지 않으면, 요소를 평탄화된 배열에 추가합니다.</p>\n<p><strong>단계 4</strong> — 마지막으로, 평탄화된 배열을 반환합니다.</p>\n<h1>방법 1 — (ForEach 방법)</h1>\n<p><strong>단계 1</strong> — 평탄화해야 할 입력 배열을 정의합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> nestedArray = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]]\n</code></pre>\n<p>Step 2— <code>flattenArray</code> 함수와 결과값(펼쳐진 배열)을 저장할 빈 배열을 만듭니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> nestedArray = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]]\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flattenArray</span>(<span class=\"hljs-params\">arr</span>) {\n    <span class=\"hljs-keyword\">let</span> flattened = [];\n\n}\n</code></pre>\n<p>Step 3— 각 요소를 <code>forEach</code> 방법으로 반복하고 함수의 끝에 펼쳐진 값을 반환합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> nestedArray = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]]\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flattenArray</span>(<span class=\"hljs-params\">arr</span>) {\n   <span class=\"hljs-keyword\">let</span> flattened = [];\n\n   arr.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =></span> {\n     <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(item)\n       \n   });\n\n    <span class=\"hljs-keyword\">return</span> flattened;\n}\n</code></pre>\n<p>제 4단계 — 입력 배열로 함수를 호출하고 항목에 대한 console.log를 확인합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> nestedArray = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]]\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flattenArray</span>(<span class=\"hljs-params\">arr</span>) {\n   <span class=\"hljs-keyword\">let</span> flattened = [];\n\n   arr.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =></span> {\n     <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(item)\n       \n   });\n\n    <span class=\"hljs-keyword\">return</span> flattened;\n}\n\n<span class=\"hljs-keyword\">const</span> flattenedArray = <span class=\"hljs-title function_\">flattenArray</span>(nestedArray);\n</code></pre>\n<img src=\"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_1.png\">\n<p>Step 5— foreach 코드 안에 위의 console.log 관찰에 따라 몇 가지 조건을 추가해 봅시다.</p>\n<ul>\n<li>요소가 배열인 경우, 해당 하위 배열을 평탄화하도록 재귀적으로 자신을 호출합니다.</li>\n<li>그렇지 않으면, 해당 요소를 평탄화된 배열에 푸시합니다.</li>\n</ul>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> nestedArray = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]]\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flattenArray</span>(<span class=\"hljs-params\">arr</span>) {\n   <span class=\"hljs-keyword\">let</span> flattened = [];\n\n   arr.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =></span> {\n   <span class=\"hljs-comment\">/* 요소가 배열인 경우, 해당 하위 배열을 재귀적으로 평탄화하도록 호출합니다. */</span>\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(item)) {\n            flattened = flattened.<span class=\"hljs-title function_\">concat</span>(<span class=\"hljs-title function_\">flattenArray</span>(item));\n        } <span class=\"hljs-keyword\">else</span> {\n   <span class=\"hljs-comment\">// 그렇지 않으면, 해당 요소를 평탄화된 배열에 푸시합니다</span>\n            flattened.<span class=\"hljs-title function_\">push</span>(item);\n        }\n\n   });\n\n    <span class=\"hljs-keyword\">return</span> flattened;\n}\n\n<span class=\"hljs-keyword\">const</span> flattenedArray = <span class=\"hljs-title function_\">flattenArray</span>(nestedArray);\n</code></pre>\n<p><img src=\"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_2.png\" alt=\"JavaScript Basics\"></p>\n<h1>최종 코드</h1>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> nestedArray = [[<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">3</span>]], <span class=\"hljs-number\">4</span>, [<span class=\"hljs-number\">5</span>, [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>]]];\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flattenArray</span>(<span class=\"hljs-params\">arr</span>) {\n   <span class=\"hljs-keyword\">let</span> flattened = [];\n\n   arr.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =></span> {\n   <span class=\"hljs-comment\">/* 만약 요소가 배열이라면 해당 하위 배열을 평탄화하기 위해 재귀적으로 자신을 호출합니다. */</span>\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(item)) {\n            flattened = flattened.<span class=\"hljs-title function_\">concat</span>(<span class=\"hljs-title function_\">flattenArray</span>(item));\n        } <span class=\"hljs-keyword\">else</span> {\n   <span class=\"hljs-comment\">// 그렇지 않으면 요소를 평탄화된 배열에 추가합니다.</span>\n            flattened.<span class=\"hljs-title function_\">push</span>(item);\n        }\n\n   });\n\n    <span class=\"hljs-keyword\">return</span> flattened;\n}\n\n<span class=\"hljs-keyword\">const</span> flattenedArray = <span class=\"hljs-title function_\">flattenArray</span>(nestedArray);\n</code></pre>\n<p>ES6 Map 방법을 사용한 또 다른 방법을 DAY 48에서 논의할 예정입니다.</p>\n<p><img src=\"/assets/img/2024-05-14-JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_3.png\" alt=\"JavaScriptDay47MasteringJavaScriptBasicsAComprehensiveGuideforInterviewPreparation_3.png\"></p>\n<h1>행복한 코딩 하세요 그리고 기대해주세요 :)</h1>\n<h1>만약 제 블로그가 도움이 되었다면 구독, 박수와 팔로우 부탁드립니다 :)</h1>\n</body>\n</html>\n"},"__N_SSG":true}