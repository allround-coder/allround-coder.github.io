{"pageProps":{"post":{"title":"React에서 JWT 토큰을 로컬 스토리지에 저장하는 방법","description":"","date":"2024-05-12 19:15","slug":"2024-05-12-HowtostoreJWTTokeninLocalStorageforReact","content":"\n\n## 간단히 말해, JWT란 무엇인가요?\n\nJWT은 JSON Web Token의 약자입니다. 이것은 정보를 안전하게 JSON 객체로 파티 간에 전송하는 간결하고 자체 포함된 방법입니다. 웹 개발에서 인증 및 정보 교환에 일반적으로 사용됩니다.\n\n## 프론트엔드용 요약\n\n\n\n백엔드에서 관리되는 암호화된 JSON 객체로, 사용자 계정이 생성되거나 로그인할 때 Frontend로 전송됩니다. 이 토큰을 이용하면 사용자가 웹 서비스의 일부에 대한 권한/접속을 얻을 수 있습니다. 클라이언트 측에서 사용하기 위해 이를 Local storage, 세션 또는 쿠키에 저장할 수 있습니다 (각각에는 고유한 보안 문제가 있으니 더 자세히 알아보세요).\n\n또한 https://jwt.io/를 방문하여 토큰을 해독하고 내용을 확인할 수 있습니다.\n\n## 이 페이지는 이를 로컬 스토리지에 저장하는 내용입니다.\n\n토큰을 사용하면서, 성공적인 로그인 후에 액세스 토큰과 리프레시 토큰을 로컬 스토리지에 저장하려고 했습니다.\n\n\n\n개발자 도구를 열고 `Application -` Local storage를 클릭하면 저장소를 확인할 수 있습니다.\n\n# 실제 코드로 넘어가보겠습니다\n\n## 여기 styled-components를 사용하여 만든 Login.jsx 파일이 있습니다\n\n아직 토큰 기능 설정은 포함되어 있지 않습니다. 요소를 설정하고 Styled-components를 사용하여 스타일을 지정하는 방법의 기본 구조만 보여드립니다.\n\n\n\n만약 이와 같은 라이브러리를 사용한다면, 코드를 더 깔끔하고 효율적으로 작성할 수 있어요! 그러나 이 경우에는 React hook useState만을 사용했어요.\n\n```js\nimport React, { useState } from \"react\";\nimport { styled } from \"styled-components\";\n```\n\n```js\nexport const Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n \n  return (\n    <LoginContainer>\n      <h1>Login</h1>\n      <Form >\n        <label htmlFor=\"email\">Email</label>\n        <Input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button>Login</Button>\n        <button>Logout</button>\n      </Form>\n    </LoginContainer>\n  );\n};\nconst LoginContainer = styled.section`\n  border: 1px solid black;\n  height: 400px;\n  width: 350px;\n  margin: 100px auto;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  height: 200px;\n`;\nconst Input = styled.input`\n  width: 240px;\n  height: 28px;\n  border-radius: 3px;\n  border-color: rgba(0, 0, 0, 0.2);\n  padding: 3px;\n`;\nconst Button = styled.button`\n  width: 200px;\n  border-color: rgba(0, 0, 0, 0.2);\n  height: 30px;\n  margin-top: 10px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n```\n\n# 로그인 페이지 스타일링 결과\n\n\n\n<img src=\"/assets/img/2024-05-12-HowtostoreJWTTokeninLocalStorageforReact_0.png\" /> \n\n# handleSubmit 함수 생성\n\nhandleSubmit 함수를 만들어서 로그인 세부 정보를 서버로 전송했습니다(fetch는 아직 사용하지 않았습니다). e.preventDefault()를 사용하면 로그인 버튼을 클릭할 때 페이지가 새로고침되지 않도록 합니다.\n\n```js\nconst handleSubmit = (e) => {\n    e.preventDefault();\n}\n```\n\n\n\n```js\n// JSX\n<Form onSubmit={handleSubmit}>\n```\n\n## (handleSubmit 함수 추가) POST를 사용하여 데이터를 가져오고 헤더를 추가하기\n\n사용자 정보를 가져오기 위해 별도의 requestOptions 변수를 생성했습니다. 사용자 로그인이 성공하면 다음 작업을 수행합니다.\n\n- 사용자 이메일 및 비밀번호 입력 요소를 \" \"으로 초기화합니다.\n- console.log(data)를 사용하여 토큰을 검색합니다.\n- 접근 토큰 및 리프레시 토큰이 가져와졌음을 확인한 후, 구조분해 할당을 사용하여 이를 로컬 스토리지에 저장할 수 있습니다.\n- localStorage.setItem(\"_변수\", _저장값)\n- localStorage.getItem(\"_변수)\n\n\n\n```js\nconst handleSubmit = (e) => {\n    e.preventDefault();\n```\n\n```js\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    };\n    fetch(INSERT_API_HERE, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        setEmail(\"\");\n        setPassword(\"\");\n        console.log(data);\n        // note using deconstructuring is better for cleaner code\n        const {access, refresh} = data.access_token;\n        localStorage.setItem(\"accessToken\", access);\n        localStorage.setItem(\"refreshToken\", refresh);\n      });\n    \n  };\n```\n\n마지막으로, CORS 오류와 같은 API 문제가 없다면 토큰이 로컬 스토리지에 저장되는 것을 확인할 수 있습니다. 로컬 스토리지는 브라우저의 개발자 도구를 통해 액세스할 수 있으며 “Application\"으로 이동하여 확인할 수 있습니다.\n\n이제 토큰이 있으므로 무엇을 할 수 있을까요? 영구적 로그인을 설정하거나, 헤더 UI를 사용자에 맞게 변경하거나, 인증된 클라이언트 페이지를 더욱 개선할 수 있습니다. 물론, 새로고침 시 네비게이션 바가 업데이트되지 않는 것을 방지하기 위해 Zustand 또는 Redux와 같은 상태 관리자를 사용하는 것이 좋습니다.```\n\n\n\n당신은 여기에서 나의 persistent login 게시물에 대한 Zustand 설정을 확인할 수 있어요.\n\n# 추가: 로컬 스토리지 초기화\n\n```js\nconst handleLogout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    alert(\"토큰이 제거되었습니다\");\n};\n```\n\n```js\n<button onClick={handleLogout}>로그아웃</button>\n```\n\n\n\n여기에 전체 코드가 있습니다.\n\n```js\nimport React, { useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { Navigate } from \"react-router-dom\";\n```\n\n```js\nexport const Login = ({ login }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [navigate, setNavigate] = useState(false);\n  const LOGIN_URL = \"INSERT_YOUR_API\";\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    };\n    fetch(LOGIN_URL, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        setEmail(\"\");\n        setPassword(\"\");\n        setNavigate(true)\n        // console.log(data);\n        // note using deconstructuring is better for cleaner code\n        const {access, refresh} = data.access_token;\n        localStorage.setItem(\"accessToken\", access);\n        localStorage.setItem(\"refreshToken\", refresh);\n      });\n      \n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    alert(\"Tokens have been removed\");\n  };\n  if (navigate) {\n    return <Navigate to=\"/signup\" />;\n  }\n  return (\n    <LoginContainer>\n      <h1>Login</h1>\n      <Form onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">Email</label>\n        <Input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button>Login</Button>\n        <button onClick={handleLogout}>Logout</button>\n      </Form>\n    </LoginContainer>\n  );\n};\nconst LoginContainer = styled.section`\n  border: 1px solid black;\n  height: 400px;\n  width: 350px;\n  margin: 100px auto;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  height: 200px;\n`;\nconst Input = styled.input`\n  width: 240px;\n  height: 28px;\n  border-radius: 3px;\n  border-color: rgba(0, 0, 0, 0.2);\n  padding: 3px;\n`;\nconst Button = styled.button`\n  width: 200px;\n  border-color: rgba(0, 0, 0, 0.2);\n  height: 30px;\n  margin-top: 10px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n```","ogImage":{"url":"/assets/img/2024-05-12-HowtostoreJWTTokeninLocalStorageforReact_0.png"},"coverImage":"/assets/img/2024-05-12-HowtostoreJWTTokeninLocalStorageforReact_0.png","tag":["Tech"],"readingTime":7},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"간단히 말해, JWT란 무엇인가요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"JWT은 JSON Web Token의 약자입니다. 이것은 정보를 안전하게 JSON 객체로 파티 간에 전송하는 간결하고 자체 포함된 방법입니다. 웹 개발에서 인증 및 정보 교환에 일반적으로 사용됩니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"프론트엔드용 요약\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"백엔드에서 관리되는 암호화된 JSON 객체로, 사용자 계정이 생성되거나 로그인할 때 Frontend로 전송됩니다. 이 토큰을 이용하면 사용자가 웹 서비스의 일부에 대한 권한/접속을 얻을 수 있습니다. 클라이언트 측에서 사용하기 위해 이를 Local storage, 세션 또는 쿠키에 저장할 수 있습니다 (각각에는 고유한 보안 문제가 있으니 더 자세히 알아보세요).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"또한 https://jwt.io/를 방문하여 토큰을 해독하고 내용을 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"이 페이지는 이를 로컬 스토리지에 저장하는 내용입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"토큰을 사용하면서, 성공적인 로그인 후에 액세스 토큰과 리프레시 토큰을 로컬 스토리지에 저장하려고 했습니다.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"개발자 도구를 열고 \", _jsx(_components.code, {\n        children: \"Application -\"\n      }), \" Local storage를 클릭하면 저장소를 확인할 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"실제 코드로 넘어가보겠습니다\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"여기 styled-components를 사용하여 만든 Login.jsx 파일이 있습니다\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아직 토큰 기능 설정은 포함되어 있지 않습니다. 요소를 설정하고 Styled-components를 사용하여 스타일을 지정하는 방법의 기본 구조만 보여드립니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"만약 이와 같은 라이브러리를 사용한다면, 코드를 더 깔끔하고 효율적으로 작성할 수 있어요! 그러나 이 경우에는 React hook useState만을 사용했어요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { useState } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { styled } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"styled-components\\\"\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"Login\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [email, setEmail] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [password, setPassword] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n \\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"LoginContainer\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"Login\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Form\"\n            }), \" >\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"htmlFor\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \">\"]\n          }), \"Email\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Input\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{email}\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setEmail(e.target.value)}\\n        />\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"htmlFor\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \">\"]\n          }), \"Password\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Input\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{password}\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setPassword(e.target.value)}\\n        />\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Button\"\n            }), \">\"]\n          }), \"Login\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Button\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"Logout\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Form\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"LoginContainer\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n};\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"LoginContainer\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"section\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  border: 1px solid black;\\n  height: 400px;\\n  width: 350px;\\n  margin: 100px auto;\\n  border-radius: 12px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-evenly;\\n`\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Form\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"form\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-evenly;\\n  height: 200px;\\n`\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Input\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"input\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  width: 240px;\\n  height: 28px;\\n  border-radius: 3px;\\n  border-color: rgba(0, 0, 0, 0.2);\\n  padding: 3px;\\n`\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Button\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"button\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  width: 200px;\\n  border-color: rgba(0, 0, 0, 0.2);\\n  height: 30px;\\n  margin-top: 10px;\\n  &:hover {\\n    cursor: pointer;\\n  }\\n`\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"로그인 페이지 스타일링 결과\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-12-HowtostoreJWTTokeninLocalStorageforReact_0.png\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"handleSubmit 함수 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"handleSubmit 함수를 만들어서 로그인 세부 정보를 서버로 전송했습니다(fetch는 아직 사용하지 않았습니다). e.preventDefault()를 사용하면 로그인 버튼을 클릭할 때 페이지가 새로고침되지 않도록 합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleSubmit\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"e\"\n        }), \") => {\\n    e.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"preventDefault\"\n        }), \"();\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// JSX\"\n        }), \"\\n<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Form\"\n        }), \" onSubmit={handleSubmit}>\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"(handleSubmit 함수 추가) POST를 사용하여 데이터를 가져오고 헤더를 추가하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사용자 정보를 가져오기 위해 별도의 requestOptions 변수를 생성했습니다. 사용자 로그인이 성공하면 다음 작업을 수행합니다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"사용자 이메일 및 비밀번호 입력 요소를 \\\" \\\"으로 초기화합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"console.log(data)를 사용하여 토큰을 검색합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"접근 토큰 및 리프레시 토큰이 가져와졌음을 확인한 후, 구조분해 할당을 사용하여 이를 로컬 스토리지에 저장할 수 있습니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"localStorage.setItem(\\\"_변수\\\", _저장값)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"localStorage.getItem(\\\"_변수)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleSubmit\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"e\"\n        }), \") => {\\n    e.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"preventDefault\"\n        }), \"();\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" requestOptions = {\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"POST\\\"\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"headers\"\n        }), \": { \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Content-Type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"application/json\\\"\"\n        }), \" },\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"body\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"JSON\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"stringify\"\n        }), \"({\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": email,\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": password,\\n      }),\\n    };\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fetch\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"INSERT_API_HERE\"\n        }), \", requestOptions)\\n      .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"response\"\n          }), \") =>\"]\n        }), \" response.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"json\"\n        }), \"())\\n      .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"data\"\n          }), \") =>\"]\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setEmail\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setPassword\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(data);\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// note using deconstructuring is better for cleaner code\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" {access, refresh} = data.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"access_token\"\n        }), \";\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"accessToken\\\"\"\n        }), \", access);\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"refreshToken\\\"\"\n        }), \", refresh);\\n      });\\n    \\n  };\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마지막으로, CORS 오류와 같은 API 문제가 없다면 토큰이 로컬 스토리지에 저장되는 것을 확인할 수 있습니다. 로컬 스토리지는 브라우저의 개발자 도구를 통해 액세스할 수 있으며 “Application\\\"으로 이동하여 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 토큰이 있으므로 무엇을 할 수 있을까요? 영구적 로그인을 설정하거나, 헤더 UI를 사용자에 맞게 변경하거나, 인증된 클라이언트 페이지를 더욱 개선할 수 있습니다. 물론, 새로고침 시 네비게이션 바가 업데이트되지 않는 것을 방지하기 위해 Zustand 또는 Redux와 같은 상태 관리자를 사용하는 것이 좋습니다.```\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"당신은 여기에서 나의 persistent login 게시물에 대한 Zustand 설정을 확인할 수 있어요.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"추가: 로컬 스토리지 초기화\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleLogout\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"accessToken\\\"\"\n        }), \");\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"refreshToken\\\"\"\n        }), \");\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"alert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"토큰이 제거되었습니다\\\"\"\n        }), \");\\n};\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"<button onClick={handleLogout}>로그아웃</button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"여기에 전체 코드가 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { useState } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { styled } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"styled-components\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Navigate\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react-router-dom\\\"\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"Login\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"{ login }\"\n        }), \") => {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [email, setEmail] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [password, setPassword] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" [navigate, setNavigate] = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useState\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \");\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"LOGIN_URL\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"INSERT_YOUR_API\\\"\"\n        }), \";\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleSubmit\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"e\"\n        }), \") => {\\n    e.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"preventDefault\"\n        }), \"();\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" requestOptions = {\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"method\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"POST\\\"\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"headers\"\n        }), \": { \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Content-Type\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"application/json\\\"\"\n        }), \" },\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"body\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"JSON\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"stringify\"\n        }), \"({\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": email,\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": password,\\n      }),\\n    };\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fetch\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"LOGIN_URL\"\n        }), \", requestOptions)\\n      .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"response\"\n          }), \") =>\"]\n        }), \" response.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"json\"\n        }), \"())\\n      .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"then\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"data\"\n          }), \") =>\"]\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setEmail\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setPassword\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \");\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setNavigate\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \")\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// console.log(data);\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// note using deconstructuring is better for cleaner code\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" {access, refresh} = data.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"access_token\"\n        }), \";\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"accessToken\\\"\"\n        }), \", access);\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"refreshToken\\\"\"\n        }), \", refresh);\\n      });\\n      \\n  };\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"handleLogout\"\n        }), \" = (\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") => {\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"accessToken\\\"\"\n        }), \");\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"localStorage\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"removeItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"refreshToken\\\"\"\n        }), \");\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"alert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Tokens have been removed\\\"\"\n        }), \");\\n  };\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (navigate) {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"xml\",\n          children: _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Navigate\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"to\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"/signup\\\"\"\n            }), \" />\"]\n          })\n        }), \";\\n  }\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"LoginContainer\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"Login\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Form\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onSubmit\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{handleSubmit}\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"htmlFor\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \">\"]\n          }), \"Email\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Input\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{email}\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setEmail(e.target.value)}\\n        />\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"htmlFor\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \">\"]\n          }), \"Password\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Input\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"value\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{password}\"\n            }), \"\\n          \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onChange\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{(e)\"\n            }), \" =>\"]\n          }), \" setPassword(e.target.value)}\\n        />\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Button\"\n            }), \">\"]\n          }), \"Login\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Button\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onClick\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{handleLogout}\"\n            }), \">\"]\n          }), \"Logout\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Form\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"LoginContainer\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n};\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"LoginContainer\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"section\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  border: 1px solid black;\\n  height: 400px;\\n  width: 350px;\\n  margin: 100px auto;\\n  border-radius: 12px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-evenly;\\n`\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Form\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"form\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-evenly;\\n  height: 200px;\\n`\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Input\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"input\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  width: 240px;\\n  height: 28px;\\n  border-radius: 3px;\\n  border-color: rgba(0, 0, 0, 0.2);\\n  padding: 3px;\\n`\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Button\"\n        }), \" = styled.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"button\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"`\\n  width: 200px;\\n  border-color: rgba(0, 0, 0, 0.2);\\n  height: 30px;\\n  margin-top: 10px;\\n  &:hover {\\n    cursor: pointer;\\n  }\\n`\"\n        }), \";\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}