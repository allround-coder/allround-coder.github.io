{"pageProps":{"post":{"title":"백엔드 서버를 작성하면 어드민 대시보드를 무료로 제공받을 수 있습니다","description":"","date":"2024-05-16 16:30","slug":"2024-05-16-WriteabackendserverandyougetanAdminDashboardforfree","content":"\n\n테오(Teo)는 당신을 위해 관리자 대시보드를 생성할 수 있는 훌륭한 웹 프레임워크입니다.\n\n![Teo Admin Dashboard](https://miro.medium.com/v2/resize:fit:1400/1*1SeQK64Z5ERRtbDqA4sEmQ.gif)\n\n이 기사에서는 당신에게 Teo를 사용하여 간단한 백엔드 서버를 작성하고 무료로 생성된 관리자 대시보드를 보여드릴 것입니다.\n\n# 프로젝트 생성\n\n<div class=\"content-ad\"></div>\n\n새로운 디렉토리를 만들어서 그 안에 \"schema.teo\"라는 파일을 생성합시다. 문법 강조와 자동 완성을 위해 이 VSCode 플러그인을 설치할 수 있어요.\n\n```js\nconnector {\n  provider: .sqlite,\n  url: \"sqlite:./database.sqlite\",\n}\n\nserver {\n  bind: (\"0.0.0.0\", 5054)\n}\n\nadmin {\n  dest: \"../hello-teo-admin-dashboard\",\n  host: .inject(\"process.env.TEO_HOST\"),\n  languages: [.enUs, .enUk, .de, .es, .fr, .he, .hi, .ja, .ko, .zhCn, .zhTw]\n}\n\n@identity.tokenIssuer($identity.jwt(expired: 3600 * 24 * 365))\n@identity.jwtSecret(ENV[\"JWT_SECRET\"]!) @admin.administrator\nmodel Root {\n  @id @autoIncrement @readonly\n  id: Int\n  @unique @onSet($if($presents, $isEmail)) @identity.id\n  email: String\n  @writeonly @onSet($presents.bcrypt.salt) @admin.secureInput\n  @identity.checker($get(.value).presents.bcrypt.verify($self.get(.password).presents))\n  password: String\n\n  include handler identity.signIn\n  include handler identity.identity\n}\n\n@identity.tokenIssuer($identity.jwt(expired: 3600 * 24 * 365))\n@identity.jwtSecret(ENV[\"JWT_SECRET\"]!) @admin.administrator\nmodel Admin {\n  @id @autoIncrement @readonly\n  id: Int\n  @unique @onSet($if($presents, $isEmail)) @identity.id\n  email: String\n  @unique @identity.id\n  phoneNo: String\n  @writeonly @onSet($presents.bcrypt.salt) @admin.secureInput\n  @identity.checker($get(.value).presents.bcrypt.verify($self.get(.password).presents))\n  password: String\n\n  include handler identity.signIn\n  include handler identity.identity\n}\n\nenum Sex {\n  male\n  female\n}\n\nmodel Record {\n  @id @autoIncrement @readonly\n  id: Int\n  string: String\n  bool: Bool\n  int: Int\n  float: Float\n  decimal: Decimal\n  date: Date\n  dateTime: DateTime\n  sex: Sex\n}\n\nmodel NullableRecord {\n  @id @autoIncrement @readonly\n  id: Int\n  string: String?\n  bool: Bool?\n  int: Int?\n  float: Float?\n  decimal: Decimal?\n  date: Date?\n  dateTime: DateTime?\n  sex: Sex?\n}\n\nmiddlewares [identity.identityFromJwt(secret: ENV[\"JWT_SECRET\"]!)]\n\nautoseed dataset default {\n  group Admin {\n    record admin {\n      email: \"admin@gmail.com\",\n      phoneNo: \"13588888888\",\n      password: \"Aa123456\"\n    }\n  }\n  group Root {\n    record root {\n      email: \"root@gmail.com\",\n      password: \"Aa123456\"\n    }\n  }\n}\n```\n\n테오 스키마 언어는 아주 자세하고 읽기 쉽습니다. 이 스키마에서 다음과 같은 사항을 선언합니다:\n\n- HTTP 서버가 어떻게 바인딩되는지\n- 어떤 데이터베이스에 연결하는지\n- 어디에 우리의 Admin 대시보드 코드를 생성하는지\n- 인증 미들웨어\n- 모델 정의\n- 시드 데이터\n\n<div class=\"content-ad\"></div>\n\n우리는 딱 100줄로 많은 것들을 선언했어요. 구문이 매우 간결해요.\n\n인증 미들웨어와 모델 데코레이터에서 \"JWT_SECRET\"라는 환경 변수가 있을 거에요. 이 내용을 담은 \" .env\" 파일을 만들어봐요.\n\n```js\nJWT_SECRET=my_top_secret\n```\n\n# Teo 설치하기\n\n<div class=\"content-ad\"></div>\n\n당신의 기술 스택과 선호도에 따라 Rust 버전, Node.js 버전 또는 Python 버전을 설치할 수 있어요. 이 중 하나를 선택해 주세요. \n\nRust 버전을 설치하려면 \"cargo\"를 사용하세요.\n\n```js\ncargo install teo\n```\n\nNode.js 버전을 설치하려면, 이 명령을 실행하여 로컬 디렉토리에 설치하세요.\n\n<div class=\"content-ad\"></div>\n\n\nnpm init -y\nnpm install typescript ts-node -D\nnpx tsc --init\nnpm install @teocloud/teo\n\n\n파이썬 버전을 설치하려면 venv를 추천합니다.\n\n\npython3.12 -m venv .venv\nsource .venv/bin/activate\npip install teo\n\n\nTeo는 다른 웹 프레임워크와 마찬가지로 프로그래밍 코드로 라우트 핸들러를 작성하고 Teo의 ORM API에 접근할 수 있습니다. 이 글에서는 그를 다루지 않을 거예요.\n\n\n<div class=\"content-ad\"></div>\n\n# 어드민 대시보드 생성하기\n\nTeo를 설치한 후, 이 몤령어를 실행하여 어드민 대시보드 코드를 생성하세요. 어드민 대시보드는 TypeScript와 React로 작성되어 있습니다. 완전히 사용자 정의가 가능합니다. 생성된 코드와 사용자 확장 코드는 충돌하지 않습니다.\n\nRust 명령어:\n\n```js\ncargo teo generate admin\n```\n\n<div class=\"content-ad\"></div>\n\nNode.js 명령어:\n\n```bash\nnpx teo generate admin\n```\n\nPython 명령어 (venv를 활성화한 상태):\n\n```bash\nteo generate admin\n```\n\n<div class=\"content-ad\"></div>\n\n# 서버 시작하기\n\n서버를 시작하려면 'teo serve' 명령을 사용하세요.\n\nRust 명령:\n\n```js\ncargo teo serve\n```\n\n<div class=\"content-ad\"></div>\n\nMarkdown 형식의 표:\n\n| 언어 | 명령어 |\n|------|---------|\n| Node.js | `npx teo serve` |\n| Python (venv 활성화) | `teo serve` |\n\n<div class=\"content-ad\"></div>\n\n# 관리자 대시보드 시작하기\n\n생성된 관리자 대시보드가 있는 디렉토리로 이동하세요. 의존성을 설치하고 웹팩 서버를 시작하세요. 시스템에 Node.js가 설치되어 있어야 합니다.\n\n```js\nnpm install\nnpm start\n```\n\n# 브라우저에서 localhost:9000 열기\n\n<div class=\"content-ad\"></div>\n\n마지막 단계는 브라우저를 열어 확인해 보는 거예요. 여기 로그인 자격 증명이 있어요:\n\n- 관리자 이메일: admin@gmail.com\n- 루트 이메일: root@gmail.com\n- 비밀번호: Aa123456\n\n계정 중 하나를 선택해서 로그인하세요.\n\n이제 레코드를 나열하거나 생성, 업데이트, 삭제할 수 있어요. 차트, 그래프 및 표와 같은 더 많은 기능이 나중에 구현될 거예요.\n\n<div class=\"content-ad\"></div>\n\n![image](https://miro.medium.com/v2/resize:fit:1400/1*vEfD5wQTIrAAsGBqxOapJw.gif)\n\n# 요약\n\n이 글이 마음에 드셨다면, GitHub에서 별을 클릭하여 우리에게 격려를 해주세요.\n\nGitHub: https://github.com/teocloud/teo\n\n<div class=\"content-ad\"></div>\n\n공식 웹사이트: [https://teodev.io](https://teodev.io)\n\n더욱 개선해 나갈 것이며, 여러분의 요구에 맞게 더 많은 기능을 추가할 예정입니다.","ogImage":{"url":"/assets/img/2024-05-16-WriteabackendserverandyougetanAdminDashboardforfree_0.png"},"coverImage":"/assets/img/2024-05-16-WriteabackendserverandyougetanAdminDashboardforfree_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"테오(Teo)는 당신을 위해 관리자 대시보드를 생성할 수 있는 훌륭한 웹 프레임워크입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:1400/1*1SeQK64Z5ERRtbDqA4sEmQ.gif\",\n        alt: \"Teo Admin Dashboard\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 기사에서는 당신에게 Teo를 사용하여 간단한 백엔드 서버를 작성하고 무료로 생성된 관리자 대시보드를 보여드릴 것입니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"프로젝트 생성\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"새로운 디렉토리를 만들어서 그 안에 \\\"schema.teo\\\"라는 파일을 생성합시다. 문법 강조와 자동 완성을 위해 이 VSCode 플러그인을 설치할 수 있어요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"connector {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"provider\"\n        }), \": .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"sqlite\"\n        }), \",\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"url\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"sqlite:./database.sqlite\\\"\"\n        }), \",\\n}\\n\\nserver {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"bind\"\n        }), \": (\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0.0.0.0\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5054\"\n        }), \")\\n}\\n\\nadmin {\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dest\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"../hello-teo-admin-dashboard\\\"\"\n        }), \",\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"host\"\n        }), \": .\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"inject\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"process.env.TEO_HOST\\\"\"\n        }), \"),\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"languages\"\n        }), \": [.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"enUs\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"enUk\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"de\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"es\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"fr\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"he\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"hi\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ja\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ko\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"zhCn\"\n        }), \", .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"zhTw\"\n        }), \"]\\n}\\n\\n@identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"tokenIssuer\"\n        }), \"($identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"jwt\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"expired\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3600\"\n        }), \" * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"24\"\n        }), \" * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"365\"\n        }), \"))\\n@identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"jwtSecret\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ENV\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"JWT_SECRET\\\"\"\n        }), \"]!) @admin.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"administrator\"\n        }), \"\\nmodel \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Root\"\n        }), \" {\\n  @id @autoIncrement @readonly\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"\\n  @unique @\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onSet\"\n        }), \"($if($presents, $isEmail)) @identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"id\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"\\n  @writeonly @\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onSet\"\n        }), \"($presents.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bcrypt\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"salt\"\n        }), \") @admin.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"secureInput\"\n        }), \"\\n  @identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"checker\"\n        }), \"($get(.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"value\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"presents\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bcrypt\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"verify\"\n        }), \"($self.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"password\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"presents\"\n        }), \"))\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"\\n\\n  include handler identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"signIn\"\n        }), \"\\n  include handler identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"identity\"\n        }), \"\\n}\\n\\n@identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"tokenIssuer\"\n        }), \"($identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"jwt\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"expired\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3600\"\n        }), \" * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"24\"\n        }), \" * \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"365\"\n        }), \"))\\n@identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"jwtSecret\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ENV\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"JWT_SECRET\\\"\"\n        }), \"]!) @admin.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"administrator\"\n        }), \"\\nmodel \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Admin\"\n        }), \" {\\n  @id @autoIncrement @readonly\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"\\n  @unique @\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onSet\"\n        }), \"($if($presents, $isEmail)) @identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"id\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"\\n  @unique @identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"id\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"phoneNo\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"\\n  @writeonly @\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onSet\"\n        }), \"($presents.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bcrypt\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"salt\"\n        }), \") @admin.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"secureInput\"\n        }), \"\\n  @identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"checker\"\n        }), \"($get(.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"value\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"presents\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bcrypt\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"verify\"\n        }), \"($self.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"get\"\n        }), \"(.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"password\"\n        }), \").\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"presents\"\n        }), \"))\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"\\n\\n  include handler identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"signIn\"\n        }), \"\\n  include handler identity.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"identity\"\n        }), \"\\n}\\n\\nenum \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Sex\"\n        }), \" {\\n  male\\n  female\\n}\\n\\nmodel \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Record\"\n        }), \" {\\n  @id @autoIncrement @readonly\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"string\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"bool\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Bool\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"int\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"float\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Float\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"decimal\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Decimal\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"date\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dateTime\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DateTime\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"sex\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Sex\"\n        }), \"\\n}\\n\\nmodel \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NullableRecord\"\n        }), \" {\\n  @id @autoIncrement @readonly\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"id\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"string\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"bool\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Bool\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"int\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"float\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Float\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"decimal\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Decimal\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"date\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Date\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dateTime\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DateTime\"\n        }), \"?\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"sex\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Sex\"\n        }), \"?\\n}\\n\\nmiddlewares [identity.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"identityFromJwt\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"secret\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ENV\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"JWT_SECRET\\\"\"\n        }), \"]!)]\\n\\nautoseed dataset \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" {\\n  group \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Admin\"\n        }), \" {\\n    record admin {\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"admin@gmail.com\\\"\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"phoneNo\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"13588888888\\\"\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Aa123456\\\"\"\n        }), \"\\n    }\\n  }\\n  group \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Root\"\n        }), \" {\\n    record root {\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"root@gmail.com\\\"\"\n        }), \",\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Aa123456\\\"\"\n        }), \"\\n    }\\n  }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"테오 스키마 언어는 아주 자세하고 읽기 쉽습니다. 이 스키마에서 다음과 같은 사항을 선언합니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"HTTP 서버가 어떻게 바인딩되는지\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"어떤 데이터베이스에 연결하는지\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"어디에 우리의 Admin 대시보드 코드를 생성하는지\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"인증 미들웨어\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"모델 정의\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"시드 데이터\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"우리는 딱 100줄로 많은 것들을 선언했어요. 구문이 매우 간결해요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"인증 미들웨어와 모델 데코레이터에서 \\\"JWT_SECRET\\\"라는 환경 변수가 있을 거에요. 이 내용을 담은 \\\" .env\\\" 파일을 만들어봐요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"JWT_SECRET\"\n        }), \"=my_top_secret\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Teo 설치하기\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"당신의 기술 스택과 선호도에 따라 Rust 버전, Node.js 버전 또는 Python 버전을 설치할 수 있어요. 이 중 하나를 선택해 주세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust 버전을 설치하려면 \\\"cargo\\\"를 사용하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"cargo install teo\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Node.js 버전을 설치하려면, 이 명령을 실행하여 로컬 디렉토리에 설치하세요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"npm init -y\\nnpm install typescript ts-node -D\\nnpx tsc --init\\nnpm install @teocloud/teo\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"파이썬 버전을 설치하려면 venv를 추천합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"python3.12 -m venv .venv\\nsource .venv/bin/activate\\npip install teo\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Teo는 다른 웹 프레임워크와 마찬가지로 프로그래밍 코드로 라우트 핸들러를 작성하고 Teo의 ORM API에 접근할 수 있습니다. 이 글에서는 그를 다루지 않을 거예요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"어드민 대시보드 생성하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Teo를 설치한 후, 이 몤령어를 실행하여 어드민 대시보드 코드를 생성하세요. 어드민 대시보드는 TypeScript와 React로 작성되어 있습니다. 완전히 사용자 정의가 가능합니다. 생성된 코드와 사용자 확장 코드는 충돌하지 않습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust 명령어:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"cargo teo generate admin\\n\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Node.js 명령어:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-bash\",\n        children: \"npx teo generate admin\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Python 명령어 (venv를 활성화한 상태):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-bash\",\n        children: \"teo generate admin\\n\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"서버 시작하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"서버를 시작하려면 'teo serve' 명령을 사용하세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rust 명령:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"cargo teo serve\\n\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Markdown 형식의 표:\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"| 언어 | 명령어 |\\n|------|---------|\\n| Node.js | \", _jsx(_components.code, {\n        children: \"npx teo serve\"\n      }), \" |\\n| Python (venv 활성화) | \", _jsx(_components.code, {\n        children: \"teo serve\"\n      }), \" |\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"관리자 대시보드 시작하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"생성된 관리자 대시보드가 있는 디렉토리로 이동하세요. 의존성을 설치하고 웹팩 서버를 시작하세요. 시스템에 Node.js가 설치되어 있어야 합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install\\nnpm start\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"브라우저에서 localhost:9000 열기\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마지막 단계는 브라우저를 열어 확인해 보는 거예요. 여기 로그인 자격 증명이 있어요:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"관리자 이메일: admin@gmail.com\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"루트 이메일: root@gmail.com\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"비밀번호: Aa123456\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"계정 중 하나를 선택해서 로그인하세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 레코드를 나열하거나 생성, 업데이트, 삭제할 수 있어요. 차트, 그래프 및 표와 같은 더 많은 기능이 나중에 구현될 거예요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:1400/1*vEfD5wQTIrAAsGBqxOapJw.gif\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"요약\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 글이 마음에 드셨다면, GitHub에서 별을 클릭하여 우리에게 격려를 해주세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GitHub: https://github.com/teocloud/teo\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"공식 웹사이트: \", _jsx(_components.a, {\n        href: \"https://teodev.io\",\n        children: \"https://teodev.io\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"더욱 개선해 나갈 것이며, 여러분의 요구에 맞게 더 많은 기능을 추가할 예정입니다.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}