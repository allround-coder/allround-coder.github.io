{"pageProps":{"post":{"title":"테라폼을 사용한 Sumo Logic 통합","description":"","date":"2024-05-15 03:43","slug":"2024-05-15-Sumologicintegrationusingterraform","content":"\n\n<img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_0.png\" />\n\n프로젝트에서 매우 기술에 능통한 고객을 위해 작업 중입니다. 그들은 매일 많은 수의 API를 활용하여 방대한 기술 생태계를 구축했습니다. 이들 API의 특정 활동을 분석하고 로깅하여 시스템을 더 잘 관리하고 개선하기 위해 다수의 활성 모니터를 가진 경보 시스템을 생성해야 했습니다.\n\n이 경보 시스템에서 그들은 Sumologic을 경보 시스템으로 선택했습니다.\n\n사용 사례:\n제 사용 사례는 다음과 같습니다. Sumologic 대시보드를 통해 모든 이러한 모니터를 수동으로 생성 및 구성했는데, 많은 수의 모니터를 관리하고 생성하는 작업은 번거로운 작업일 수 있습니다. 제 작업은 이 모니터 생성 및 관리 프로세스를 수동 작업에서 자동화된 방식 또는 코드를 통해 관리하는 것으로 변경하는 것이었습니다. 다시 말해, Sumologic 모니터를 Terraform과 통합하는 것입니다.\n\n\n\n아래 섹션에서는 수동으로 작성한 모든 Sumologic 모니터를 테라폼으로 변환하는 데 수행한 모든 단계를 안내할 것입니다.\n\n준비 사항:\n\n- 테라폼에 대한 기본 지식이 충분히 갖춰져 있다면 시작할 수 있습니다(테라폼 문서)\n\nSumologic 모니터:\n\n\n\n테라폼 코드를 올바르게 작성하여 Sumologic 모니터를 만들려면 먼저 Sumologic에서 이러한 모니터를 만드는 데 필요한 필드를 시각화해야 합니다.\n\nSumologic 대시보드에서 모니터를 만드는 \"Create a Monitor\"를 클릭하면 아래 화면이 나타납니다.\n\n![이미지](/assets/img/2024-05-15-Sumologicintegrationusingterraform_1.png)\n\n![이미지](/assets/img/2024-05-15-Sumologicintegrationusingterraform_2.png)\n\n\n\n![이미지](/assets/img/2024-05-15-Sumologicintegrationusingterraform_3.png)\n\n지금 보시는 예제 모니터의 설정을 테라폼 자원인 \"sumologic_monitor\"를 사용하여 생성할 수 있습니다. sumologic_monitor 자원 블록은 실제 모니터 필드와 매핑되는 몇 가지 특정 키-값 인수를 받아들일 것입니다.\n\n다음은 테라폼 코드와 SumoLogic 모니터 필드의 몇 가지 매핑 예시입니다.\n\n테라폼 모니터 생성:\n\n\n\n\n![Sumologic Integration using Terraform - Screenshot 4](/assets/img/2024-05-15-Sumologicintegrationusingterraform_4.png)\n\n```js\nresource \"sumologic_monitor\" \"any_name\" {\n\ntrigger_condition {\n   logs_static_condition {\n        ...\n   }\n}\n```\n\n![Sumologic Integration using Terraform - Screenshot 5](/assets/img/2024-05-15-Sumologicintegrationusingterraform_5.png)\n\n```js\nresource \"sumologic_monitor\" \"any_name\" {\n\ntrigger_condition {\n   logs_static_condition {\n     critical {\n       time_range = \"5m\"\n       alert {\n         thresold = \"0\"\n         thresold_type = \"GreaterThan\"\n       }\n       resolution {\n         thresold = \"0\"\n         thresold_type = \"LessThanOrEqual\"\n         resolution_window = \"5m\" \n       }\n     }\n   }\n}\n``` \n\n\n\n\n\n![image](/assets/img/2024-05-15-Sumologicintegrationusingterraform_6.png)\n\n```js\nresource \"sumologic_monitor\" \"any_name\" {\n  queries {\n    row_id = \"A\"\n    query = \"실행될 조건에 대한 실제 쿼리\"\n  }\n}\n```\n\n![image](/assets/img/2024-05-15-Sumologicintegrationusingterraform_7.png)\n\n통지를 위해 Slack, Webhook, Email 등과 같은 다양한 connection_type을 설정할 수 있습니다. sumologic 대시보드에 이미 있는 연결에 connection_id를 지정하거나 사용자 정의 연결을 만들고 알림 페이로드를 생성할 수 있습니다.\n\n\n\n\n|| Sumologic API를 참조하고 curl을 실행하여 모든 연결을 가져와서 connection_id를 이름으로 필터링할 수 있어요-\n\ncurl -u \"`accessId`:`accessKey`\" -X GET https://api.`deployment`.sumologic.com/api/v1/connections\n\n```js\nresource \"sumologic_monitor\" \"any_name\" {\n notifications: {\n  // 여러 알림 블록을 만들 수 있어요\n  notification: {\n   connection_type = \"Email\" //Slack | Webhook | Email 등\n   connection_id = \"<ID>\" //기존 ID\n  }\n  notification: {\n   connection_type = \"Slack\"\n   //이것은 사용자 정의된 payload에요\n   payload_override = <<JSON \n    {\n     \"service_key\": \"your_pagerduty_api_integration_key\",\n     \"event_type\": \"trigger\",\n     \"description\": \"Alert: Triggered {TriggerType} for Monitor {Name}\",\n     \"client\": \"Sumo Logic\",\n     \"client_url\": \"{QueryUrl}\"\n    }\n   JSON\n  }\n  run_for_trigger_types = [\"Critical\", \"ResolvedCritical\"] //위의 알림 모니터 이미지용 체크박스를 선택할 거에요\n}\n```\n\n<img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_8.png\" />\n\n```js\nresource \"sumologic_monitor\" \"any_name\" {\n name = \"monitor_name\"\n parent_id = \"<ID>\" //모니터가 생성될 폴더의 ID\n description = \"설명 문자열\"\n is_disabled = boolean // 이것은 모니터를 활성화 또는 비활성화할 거에요\n}\n```\n\n\n\n아래는 담당자의 작업 요약입니다:\n\n1. 'init.tf' 또는 'main.tf' 파일을 추가하여 Sumo Logic Terraform 공급자를 설치하고 초기화해야 합니다. main.tf 파일에 다음과 같은 코드를 추가하세요.\n\n```js\nterraform {\n\n backend \"s3\" {}\n\n required_providers {\n  sumologic = {\n   source = \"sumologic/sumologic\"\n   version = \"2.28.2\"\n  }\n }\n\n}\n\nprovider \"sumologic\" {\n access_id = \"\"\n access_key = \"\"\n}\n```\n\n2. 'sumologic-monitor.tf' 파일을 추가하여 위에서 언급한 내용이 포함된 'sumologic_monitor' 리소스를 추가하세요.\n3. 이후에는 테라폼 명령을 실행하면 됩니다.\n\n\n\n```js\nterrafrom init\nterrafrom plan\nterrafrom apply\n```\n\n참고 문서 -\n\n- Sumologic 모니터 생성에 대한 자세한 내용은 다음을 참조하세요: [Sumologic 모니터 생성](https://help.sumologic.com/docs/alerts/monitors/create-monitor/)\n- Terraform을 사용한 Sumologic 모니터 생성에 대한 자세한 내용은 다음을 참조하세요: [Sumologic 모니터 Terraform 문서](https://registry.terraform.io/providers/SumoLogic/sumologic/latest/docs/resources/monitor)\n- Sumologic API에 대한 자세한 내용은 다음을 참조하세요: [Sumologic API](https://api.sumologic.com/docs/#section/Getting-Started/API-Endpoints)","ogImage":{"url":"/assets/img/2024-05-15-Sumologicintegrationusingterraform_0.png"},"coverImage":"/assets/img/2024-05-15-Sumologicintegrationusingterraform_0.png","tag":["Tech"],"readingTime":5},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>프로젝트에서 매우 기술에 능통한 고객을 위해 작업 중입니다. 그들은 매일 많은 수의 API를 활용하여 방대한 기술 생태계를 구축했습니다. 이들 API의 특정 활동을 분석하고 로깅하여 시스템을 더 잘 관리하고 개선하기 위해 다수의 활성 모니터를 가진 경보 시스템을 생성해야 했습니다.</p>\n<p>이 경보 시스템에서 그들은 Sumologic을 경보 시스템으로 선택했습니다.</p>\n<p>사용 사례:\n제 사용 사례는 다음과 같습니다. Sumologic 대시보드를 통해 모든 이러한 모니터를 수동으로 생성 및 구성했는데, 많은 수의 모니터를 관리하고 생성하는 작업은 번거로운 작업일 수 있습니다. 제 작업은 이 모니터 생성 및 관리 프로세스를 수동 작업에서 자동화된 방식 또는 코드를 통해 관리하는 것으로 변경하는 것이었습니다. 다시 말해, Sumologic 모니터를 Terraform과 통합하는 것입니다.</p>\n<p>아래 섹션에서는 수동으로 작성한 모든 Sumologic 모니터를 테라폼으로 변환하는 데 수행한 모든 단계를 안내할 것입니다.</p>\n<p>준비 사항:</p>\n<ul>\n<li>테라폼에 대한 기본 지식이 충분히 갖춰져 있다면 시작할 수 있습니다(테라폼 문서)</li>\n</ul>\n<p>Sumologic 모니터:</p>\n<p>테라폼 코드를 올바르게 작성하여 Sumologic 모니터를 만들려면 먼저 Sumologic에서 이러한 모니터를 만드는 데 필요한 필드를 시각화해야 합니다.</p>\n<p>Sumologic 대시보드에서 모니터를 만드는 \"Create a Monitor\"를 클릭하면 아래 화면이 나타납니다.</p>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_1.png\" alt=\"이미지\"></p>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_2.png\" alt=\"이미지\"></p>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_3.png\" alt=\"이미지\"></p>\n<p>지금 보시는 예제 모니터의 설정을 테라폼 자원인 \"sumologic_monitor\"를 사용하여 생성할 수 있습니다. sumologic_monitor 자원 블록은 실제 모니터 필드와 매핑되는 몇 가지 특정 키-값 인수를 받아들일 것입니다.</p>\n<p>다음은 테라폼 코드와 SumoLogic 모니터 필드의 몇 가지 매핑 예시입니다.</p>\n<p>테라폼 모니터 생성:</p>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_4.png\" alt=\"Sumologic Integration using Terraform - Screenshot 4\"></p>\n<pre><code class=\"hljs language-js\">resource <span class=\"hljs-string\">\"sumologic_monitor\"</span> <span class=\"hljs-string\">\"any_name\"</span> {\n\ntrigger_condition {\n   logs_static_condition {\n        ...\n   }\n}\n</code></pre>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_5.png\" alt=\"Sumologic Integration using Terraform - Screenshot 5\"></p>\n<pre><code class=\"hljs language-js\">resource <span class=\"hljs-string\">\"sumologic_monitor\"</span> <span class=\"hljs-string\">\"any_name\"</span> {\n\ntrigger_condition {\n   logs_static_condition {\n     critical {\n       time_range = <span class=\"hljs-string\">\"5m\"</span>\n       alert {\n         thresold = <span class=\"hljs-string\">\"0\"</span>\n         thresold_type = <span class=\"hljs-string\">\"GreaterThan\"</span>\n       }\n       resolution {\n         thresold = <span class=\"hljs-string\">\"0\"</span>\n         thresold_type = <span class=\"hljs-string\">\"LessThanOrEqual\"</span>\n         resolution_window = <span class=\"hljs-string\">\"5m\"</span> \n       }\n     }\n   }\n}\n</code></pre>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_6.png\" alt=\"image\"></p>\n<pre><code class=\"hljs language-js\">resource <span class=\"hljs-string\">\"sumologic_monitor\"</span> <span class=\"hljs-string\">\"any_name\"</span> {\n  queries {\n    row_id = <span class=\"hljs-string\">\"A\"</span>\n    query = <span class=\"hljs-string\">\"실행될 조건에 대한 실제 쿼리\"</span>\n  }\n}\n</code></pre>\n<p><img src=\"/assets/img/2024-05-15-Sumologicintegrationusingterraform_7.png\" alt=\"image\"></p>\n<p>통지를 위해 Slack, Webhook, Email 등과 같은 다양한 connection_type을 설정할 수 있습니다. sumologic 대시보드에 이미 있는 연결에 connection_id를 지정하거나 사용자 정의 연결을 만들고 알림 페이로드를 생성할 수 있습니다.</p>\n<p>|| Sumologic API를 참조하고 curl을 실행하여 모든 연결을 가져와서 connection_id를 이름으로 필터링할 수 있어요-</p>\n<p>curl -u \"<code>accessId</code>:<code>accessKey</code>\" -X GET <a href=\"https://api.%60deployment%60.sumologic.com/api/v1/connections\" rel=\"nofollow\" target=\"_blank\">https://api.`deployment`.sumologic.com/api/v1/connections</a></p>\n<pre><code class=\"hljs language-js\">resource <span class=\"hljs-string\">\"sumologic_monitor\"</span> <span class=\"hljs-string\">\"any_name\"</span> {\n <span class=\"hljs-attr\">notifications</span>: {\n  <span class=\"hljs-comment\">// 여러 알림 블록을 만들 수 있어요</span>\n  <span class=\"hljs-attr\">notification</span>: {\n   connection_type = <span class=\"hljs-string\">\"Email\"</span> <span class=\"hljs-comment\">//Slack | Webhook | Email 등</span>\n   connection_id = <span class=\"hljs-string\">\"&#x3C;ID>\"</span> <span class=\"hljs-comment\">//기존 ID</span>\n  }\n  <span class=\"hljs-attr\">notification</span>: {\n   connection_type = <span class=\"hljs-string\">\"Slack\"</span>\n   <span class=\"hljs-comment\">//이것은 사용자 정의된 payload에요</span>\n   payload_override = &#x3C;&#x3C;<span class=\"hljs-title class_\">JSON</span> \n    {\n     <span class=\"hljs-string\">\"service_key\"</span>: <span class=\"hljs-string\">\"your_pagerduty_api_integration_key\"</span>,\n     <span class=\"hljs-string\">\"event_type\"</span>: <span class=\"hljs-string\">\"trigger\"</span>,\n     <span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Alert: Triggered {TriggerType} for Monitor {Name}\"</span>,\n     <span class=\"hljs-string\">\"client\"</span>: <span class=\"hljs-string\">\"Sumo Logic\"</span>,\n     <span class=\"hljs-string\">\"client_url\"</span>: <span class=\"hljs-string\">\"{QueryUrl}\"</span>\n    }\n   <span class=\"hljs-title class_\">JSON</span>\n  }\n  run_for_trigger_types = [<span class=\"hljs-string\">\"Critical\"</span>, <span class=\"hljs-string\">\"ResolvedCritical\"</span>] <span class=\"hljs-comment\">//위의 알림 모니터 이미지용 체크박스를 선택할 거에요</span>\n}\n</code></pre>\n<pre><code class=\"hljs language-js\">resource <span class=\"hljs-string\">\"sumologic_monitor\"</span> <span class=\"hljs-string\">\"any_name\"</span> {\n name = <span class=\"hljs-string\">\"monitor_name\"</span>\n parent_id = <span class=\"hljs-string\">\"&#x3C;ID>\"</span> <span class=\"hljs-comment\">//모니터가 생성될 폴더의 ID</span>\n description = <span class=\"hljs-string\">\"설명 문자열\"</span>\n is_disabled = boolean <span class=\"hljs-comment\">// 이것은 모니터를 활성화 또는 비활성화할 거에요</span>\n}\n</code></pre>\n<p>아래는 담당자의 작업 요약입니다:</p>\n<ol>\n<li>'init.tf' 또는 'main.tf' 파일을 추가하여 Sumo Logic Terraform 공급자를 설치하고 초기화해야 합니다. main.tf 파일에 다음과 같은 코드를 추가하세요.</li>\n</ol>\n<pre><code class=\"hljs language-js\">terraform {\n\n backend <span class=\"hljs-string\">\"s3\"</span> {}\n\n required_providers {\n  sumologic = {\n   source = <span class=\"hljs-string\">\"sumologic/sumologic\"</span>\n   version = <span class=\"hljs-string\">\"2.28.2\"</span>\n  }\n }\n\n}\n\nprovider <span class=\"hljs-string\">\"sumologic\"</span> {\n access_id = <span class=\"hljs-string\">\"\"</span>\n access_key = <span class=\"hljs-string\">\"\"</span>\n}\n</code></pre>\n<ol start=\"2\">\n<li>'sumologic-monitor.tf' 파일을 추가하여 위에서 언급한 내용이 포함된 'sumologic_monitor' 리소스를 추가하세요.</li>\n<li>이후에는 테라폼 명령을 실행하면 됩니다.</li>\n</ol>\n<pre><code class=\"hljs language-js\">terrafrom init\nterrafrom plan\nterrafrom apply\n</code></pre>\n<p>참고 문서 -</p>\n<ul>\n<li>Sumologic 모니터 생성에 대한 자세한 내용은 다음을 참조하세요: <a href=\"https://help.sumologic.com/docs/alerts/monitors/create-monitor/\" rel=\"nofollow\" target=\"_blank\">Sumologic 모니터 생성</a></li>\n<li>Terraform을 사용한 Sumologic 모니터 생성에 대한 자세한 내용은 다음을 참조하세요: <a href=\"https://registry.terraform.io/providers/SumoLogic/sumologic/latest/docs/resources/monitor\" rel=\"nofollow\" target=\"_blank\">Sumologic 모니터 Terraform 문서</a></li>\n<li>Sumologic API에 대한 자세한 내용은 다음을 참조하세요: <a href=\"https://api.sumologic.com/docs/#section/Getting-Started/API-Endpoints\" rel=\"nofollow\" target=\"_blank\">Sumologic API</a></li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}