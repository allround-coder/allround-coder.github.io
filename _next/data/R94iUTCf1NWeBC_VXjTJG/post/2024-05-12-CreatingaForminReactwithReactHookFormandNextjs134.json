{"pageProps":{"post":{"title":"React Hook Form과 Nextjs 134를 사용하여 React에서 폼 만들기","description":"","date":"2024-05-12 20:29","slug":"2024-05-12-CreatingaForminReactwithReactHookFormandNextjs134","content":"\n\n![이미지](/assets/img/2024-05-12-CreatingaForminReactwithReactHookFormandNextjs134_0.png)\n\n이번 튜토리얼에서는 React Hook Form을 사용하여 폼 처리 및 유효성 검사를 수행하는 Next.js 애플리케이션에서 로그인 폼을 만들겠습니다. 또한 Zod 라이브러리를 사용하여 폼 스키마를 정의하고 유효성을 검사할 것입니다. 이 튜토리얼이 끝나면 클라이언트 측 유효성을 갖춘 완전히 작동하는 로그인 폼이 준비될 것입니다.\n\n# 준비물\n\n시작하기 전에 다음이 설치되어 있는지 확인하세요:\n\n\n\n- 노드.js 및 npm (Node Package Manager)\n- Next.js 버전 13.4 이상\n\n## 프로젝트 설정\n\n다음 단계로 Next.js 프로젝트를 설정하고 필요한 종속성을 설치해보겠습니다.\n\n- 다음 명령어를 실행하여 새 Next.js 프로젝트를 생성하세요:\n\n\n\n```js\nnpx create-next-app login-form-app\ncd login-form-app\n```\n\n2. **폼 처리 및 유효성 검사를 위해 필요한 패키지 설치:**\n\n```js\nnpm install react-hook-form @hookform/resolvers zod\n```\n\n# 폼 생성하기```\n\n\n\n이 예제에서는 이메일과 비밀번호를 입력 필드로 사용하는 로그인 양식을 만들겠습니다.\n\n다음 내용을 가진 src 디렉토리에 LoginForm.tsx라는 새 파일을 생성하세요:\n\n```js\n// app/components/LoginForm.tsx\n\"use client\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { loginSchema } from \"../zodSchema/login\";\n\ntype FormData = z.infer<typeof loginSchema>;\n\nexport default function LoginForm() {\n  const router = useRouter();\n  const {\n    handleSubmit,\n    register,\n    formState: { errors, isSubmitting, isDirty, isValid },\n  } = useForm<FormData>({\n    resolver: zodResolver(loginSchema),\n  });\n\n  async function onSubmit(data: FormData) {\n    console.log(isSubmitting);\n    console.log(data);\n    // 이를 서버 액션으로 변경하거나 인증 API 엔드포인트를 가져오세요\n    await new Promise<void>((resolve) => {\n      setTimeout(() => {\n        resolve();\n      }, 2000); // 2초를 밀리초로 변환\n    });\n    router.push(\"/tweets\");\n  }\n\n  return (\n    <div className=\"selection:bg-rose-500 selection:text-white\">\n      <div className=\"flex min-h-screen items-center justify-center bg-rose-100\">\n        <div className=\"flex-1 p-8\">\n          <div className=\"mx-auto w-80 overflow-hidden rounded-3xl bg-white shadow-xl\">\n            {/* 양식 헤더 */}\n            <div className=\"rounded-bl-4xl relative h-44 bg-rose-500\">\n              <svg\n                className=\"absolute bottom-0\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 1440 320\"\n              >\n                <path\n                  fill=\"#ffffff\"\n                  fillOpacity=\"1\"\n                  d=\"M0,64L48,80C96,96,192,128,288,128C384,128,480,96,576,85.3C672,75,768,85,864,122.7C960,160,1056,224,1152,245.3C1248,267,1344,245,1392,234.7L1440,224L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\n                ></path>\n              </svg>\n            </div>\n\n            {/* 양식 본문 */}\n            <div className=\"rounded-tr-4xl bg-white px-10 pb-8 pt-4\">\n              <h1 className=\"text-2xl font-semibold text-gray-900\">\n                다시 오신 것을 환영합니다!\n              </h1>\n              <form\n                className=\"mt-12\"\n                action=\"\"\n                method=\"POST\"\n                onSubmit={handleSubmit(onSubmit)}\n              >\n                {/* 이메일 입력 */}\n                <div className=\"relative\">\n                  <input\n                    {...register(\"email\", { required: true })}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"text\"\n                    className=\"peer h-10 w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:border-rose-600 focus:outline-none\"\n                    placeholder=\"john@doe.com\"\n                    autoComplete=\"off\"\n                  />\n                  {errors?.email && (\n                    <p className=\"text-red-600 text-sm\">\n                      {errors?.email?.message}\n                    </p>\n                  )}\n                  <label\n                    htmlFor=\"email\"\n                    className=\"absolute -top-3.5 left-0 text-sm text-gray-600 transition-all peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:-top-3.5 peer-focus:text-sm peer-focus:text-gray-600\"\n                  >\n                    이메일 주소\n                  </label>\n                </div>\n\n                {/* 비밀번호 입력 */}\n                <div className=\"relative mt-10\">\n                  <input\n                    {...register(\"password\", { required: true })}\n                    id=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"peer h-10 w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:border-rose-600 focus:outline-none\"\n                    placeholder=\"비밀번호\"\n                    autoComplete=\"off\"\n                  />\n                  {errors?.password && (\n                    <p className=\"text-red-600 text-sm\">\n                      {errors?.password?.message}\n                    </p>\n                  )}\n                  <label\n                    htmlFor=\"password\"\n                    className=\"absolute -top-3.5 left-0 text-sm text-gray-600 transition-all peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:-top-3.5 peer-focus:text-sm peer-focus:text-gray-600\"\n                  >\n                    비밀번호\n                  </label>\n                </div>\n\n                {/* 제출 버튼 */}\n                <button\n                  type=\"submit\"\n                  disabled={!isDirty || !isValid || isSubmitting}\n                  className=\"mt-20 block w-full cursor-pointer rounded bg-rose-500 px-4 py-2 text-center font-semibold text-white hover:bg-rose-400 focus:outline-none focus:ring focus:ring-rose-500 focus:ring-opacity-80 focus:ring-offset-2 disabled:opacity-70\"\n                >\n                  {isSubmitting ? (\n                    <div role=\"status\">\n                      <svg\n                        aria-hidden=\"true\"\n                        className=\"inline w-6 h-6 mr-2 text-white animate-spin fill-rose-600 opacity-100\"\n                        viewBox=\"0 0 100 101\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        {/* 스피너 애니메이션용 SVG */}\n                      </svg>\n                    </div>\n                  ) : (\n                    \"로그인\"\n                  )}\n                </button>\n              </form>\n\n              {/* 비밀번호 잊은 경우 링크 */}\n              <a\n                href=\"#\"\n                className=\"mt-4 block text-center text-sm font-medium text-rose-600 hover:underline focus:outline-none focus:ring-2 focus:ring-rose-500\"\n              >\n                비밀번호를 잊으셨나요?\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n```\n\n이제 LoginForm 컴포넌트를 만들었으므로 메인 페이지 컴포넌트에서 가져와 사용할 수 있습니다.\n\n\n\n페이지 디렉토리에 index.tsx라는 새 파일을 만들어서 아래 내용을 넣어주세요:\n\n```js\n// app/page.tsx\n\nimport LoginForm from \"../src/components/LoginForm\";\n\nexport default function HomePage() {\n  return (\n      <LoginForm />\n  );\n}\n```\n\n이 파일에서는 LoginForm 컴포넌트를 import하여 HomePage 컴포넌트 내에서 렌더링하고 있습니다.\n\n# Zod Schema\n\n\n\n다음으로, 로그인 양식 유효성 검사를 위해 Zod를 사용하여 loginSchema를 정의해 봅시다. 다음 내용을 포함하는 src/zodSchema 디렉토리에 login.ts라는 새 파일을 만들어주세요:\n\n```js\n// src/zodSchema/login.ts\n\nimport z from \"zod\";\n\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\nexport type User = z.infer<typeof loginSchema>;\n```\n\n이 스키마는 로그인 양식 필드에서 예상하는 데이터의 구조를 정의합니다.\n\n# 양식 테스트\n\n\n\n이제 클라이언트 측 유효성 검사가 포함된 완전히 작동하는 로그인 폼이 있습니다. 이 폼은 제출을 허용하기 전에 이메일이 올바른 형식인지와 비밀번호가 최소 8자 이상인지를 확인할 것입니다.\n\n폼을 테스트하려면 Next.js 애플리케이션을 실행하세요:\n\n```js\nnpm run dev\n```\n\n브라우저에서 http://localhost:3000을 방문하여 로그인 폼이 작동하는 것을 확인할 수 있습니다.\n\n\n\n# 요약\n\n이 튜토리얼에서는 React Hook Form을 사용하여 Next.js 애플리케이션에서 로그인 폼을 만드는 방법을 배웠습니다. 폼 처리와 유효성 검사를 위해 사용했습니다. 우리는 Zod를 사용하여 폼 스키마를 정의하고 유효성을 검사했습니다. 사용자가 잘못된 데이터를 입력하면 오류 메시지가 표시되고, 폼이 올바르게 작성될 때까지 제출 버튼이 비활성화됩니다. 이 구현은 React 및 Next.js 프로젝트에서 더 복잡한 폼을 만드는 좋은 시작점을 제공합니다.\n\n사용자 경험을 향상시키는 좋은 방법인 클라이언트 측 유효성 검사를 기억해주세요. 하지만 로그인 폼의 유일한 보안 계층이 되어서는 안 됩니다. 항상 강력한 서버 측 유효성 검사와 인증 메커니즘을 갖추어 애플리케이션을 잠재적인 보안 위협으로부터 보호해야 합니다.\n\n즐거운 코딩! 🚀","ogImage":{"url":"/assets/img/2024-05-12-CreatingaForminReactwithReactHookFormandNextjs134_0.png"},"coverImage":"/assets/img/2024-05-12-CreatingaForminReactwithReactHookFormandNextjs134_0.png","tag":["Tech"],"readingTime":9},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    strong: \"strong\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-12-CreatingaForminReactwithReactHookFormandNextjs134_0.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이번 튜토리얼에서는 React Hook Form을 사용하여 폼 처리 및 유효성 검사를 수행하는 Next.js 애플리케이션에서 로그인 폼을 만들겠습니다. 또한 Zod 라이브러리를 사용하여 폼 스키마를 정의하고 유효성을 검사할 것입니다. 이 튜토리얼이 끝나면 클라이언트 측 유효성을 갖춘 완전히 작동하는 로그인 폼이 준비될 것입니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"준비물\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시작하기 전에 다음이 설치되어 있는지 확인하세요:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"노드.js 및 npm (Node Package Manager)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Next.js 버전 13.4 이상\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"프로젝트 설정\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음 단계로 Next.js 프로젝트를 설정하고 필요한 종속성을 설치해보겠습니다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"다음 명령어를 실행하여 새 Next.js 프로젝트를 생성하세요:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npx create-next-app login-form-app\\ncd login-form-app\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.strong, {\n          children: \"폼 처리 및 유효성 검사를 위해 필요한 패키지 설치:\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install react-hook-form @hookform/resolvers zod\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"폼 생성하기```\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 예제에서는 이메일과 비밀번호를 입력 필드로 사용하는 로그인 양식을 만들겠습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음 내용을 가진 src 디렉토리에 LoginForm.tsx라는 새 파일을 생성하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// app/components/LoginForm.tsx\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"use client\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { zodResolver } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@hookform/resolvers/zod\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { useRouter } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"next/router\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { useForm } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react-hook-form\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" * \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" z \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"zod\\\"\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { loginSchema } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"../zodSchema/login\\\"\"\n        }), \";\\n\\ntype \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FormData\"\n        }), \" = z.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"infer\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"typeof\"\n        }), \" loginSchema>;\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"LoginForm\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" router = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"useRouter\"\n        }), \"();\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" {\\n    handleSubmit,\\n    register,\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"formState\"\n        }), \": { errors, isSubmitting, isDirty, isValid },\\n  } = useForm<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FormData\"\n        }), \">({\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"resolver\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"zodResolver\"\n        }), \"(loginSchema),\\n  });\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"async\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onSubmit\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"data: FormData\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(isSubmitting);\\n    \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"log\"\n        }), \"(data);\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 이를 서버 액션으로 변경하거나 인증 API 엔드포인트를 가져오세요\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"await\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Promise\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \">(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"resolve\"\n          }), \") =>\"]\n        }), \" {\\n      \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"setTimeout\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-function\",\n          children: \"() =>\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"resolve\"\n        }), \"();\\n      }, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2000\"\n        }), \"); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 2초를 밀리초로 변환\"\n        }), \"\\n    });\\n    router.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"push\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"/tweets\\\"\"\n        }), \");\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"selection:bg-rose-500 selection:text-white\\\"\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"flex min-h-screen items-center justify-center bg-rose-100\\\"\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"flex-1 p-8\\\"\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"mx-auto w-80 overflow-hidden rounded-3xl bg-white shadow-xl\\\"\"\n            }), \">\"]\n          }), \"\\n            {/* 양식 헤더 */}\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"rounded-bl-4xl relative h-44 bg-rose-500\\\"\"\n            }), \">\"]\n          }), \"\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"svg\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"absolute bottom-0\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"xmlns\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"http://www.w3.org/2000/svg\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"viewBox\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"0 0 1440 320\\\"\"\n            }), \"\\n              >\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"path\"\n            }), \"\\n                  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"fill\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"#ffffff\\\"\"\n            }), \"\\n                  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"fillOpacity\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"1\\\"\"\n            }), \"\\n                  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"d\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"M0,64L48,80C96,96,192,128,288,128C384,128,480,96,576,85.3C672,75,768,85,864,122.7C960,160,1056,224,1152,245.3C1248,267,1344,245,1392,234.7L1440,224L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\\\"\"\n            }), \"\\n                >\"]\n          }), _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"path\"\n            }), \">\"]\n          }), \"\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"svg\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n\\n            {/* 양식 본문 */}\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"rounded-tr-4xl bg-white px-10 pb-8 pt-4\\\"\"\n            }), \">\"]\n          }), \"\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text-2xl font-semibold text-gray-900\\\"\"\n            }), \">\"]\n          }), \"\\n                다시 오신 것을 환영합니다!\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"form\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"mt-12\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"action\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"method\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"POST\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"onSubmit\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{handleSubmit(onSubmit)}\"\n            }), \"\\n              >\"]\n          }), \"\\n                {/* 이메일 입력 */}\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"relative\\\"\"\n            }), \">\"]\n          }), \"\\n                  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"input\"\n            }), \"\\n                    {\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"...register\"\n            }), \"(\\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"email\"\n            }), \"\\\", { \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"required:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"true\"\n            }), \" })}\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"name\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"peer h-10 w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:border-rose-600 focus:outline-none\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"placeholder\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"john@doe.com\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"autoComplete\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"off\\\"\"\n            }), \"\\n                  />\"]\n          }), \"\\n                  {errors?.email && (\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text-red-600 text-sm\\\"\"\n            }), \">\"]\n          }), \"\\n                      {errors?.email?.message}\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                  )}\\n                  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"htmlFor\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"email\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"absolute -top-3.5 left-0 text-sm text-gray-600 transition-all peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:-top-3.5 peer-focus:text-sm peer-focus:text-gray-600\\\"\"\n            }), \"\\n                  >\"]\n          }), \"\\n                    이메일 주소\\n                  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n\\n                {/* 비밀번호 입력 */}\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"relative mt-10\\\"\"\n            }), \">\"]\n          }), \"\\n                  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"input\"\n            }), \"\\n                    {\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"...register\"\n            }), \"(\\\"\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"password\"\n            }), \"\\\", { \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"required:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"true\"\n            }), \" })}\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"id\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"name\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"peer h-10 w-full border-b-2 border-gray-300 text-gray-900 placeholder-transparent focus:border-rose-600 focus:outline-none\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"placeholder\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"비밀번호\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"autoComplete\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"off\\\"\"\n            }), \"\\n                  />\"]\n          }), \"\\n                  {errors?.password && (\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"text-red-600 text-sm\\\"\"\n            }), \">\"]\n          }), \"\\n                      {errors?.password?.message}\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                  )}\\n                  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"htmlFor\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"password\\\"\"\n            }), \"\\n                    \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"absolute -top-3.5 left-0 text-sm text-gray-600 transition-all peer-placeholder-shown:top-2 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:-top-3.5 peer-focus:text-sm peer-focus:text-gray-600\\\"\"\n            }), \"\\n                  >\"]\n          }), \"\\n                    비밀번호\\n                  \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"label\"\n            }), \">\"]\n          }), \"\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n\\n                {/* 제출 버튼 */}\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \"\\n                  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"type\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"submit\\\"\"\n            }), \"\\n                  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"disabled\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{!isDirty\"\n            }), \" || !\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"isValid\"\n            }), \" || \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"isSubmitting\"\n            }), \"}\\n                  \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"mt-20 block w-full cursor-pointer rounded bg-rose-500 px-4 py-2 text-center font-semibold text-white hover:bg-rose-400 focus:outline-none focus:ring focus:ring-rose-500 focus:ring-opacity-80 focus:ring-offset-2 disabled:opacity-70\\\"\"\n            }), \"\\n                >\"]\n          }), \"\\n                  {isSubmitting ? (\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"role\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"status\\\"\"\n            }), \">\"]\n          }), \"\\n                      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"svg\"\n            }), \"\\n                        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"aria-hidden\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"true\\\"\"\n            }), \"\\n                        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"inline w-6 h-6 mr-2 text-white animate-spin fill-rose-600 opacity-100\\\"\"\n            }), \"\\n                        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"viewBox\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"0 0 100 101\\\"\"\n            }), \"\\n                        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"fill\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"none\\\"\"\n            }), \"\\n                        \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"xmlns\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"http://www.w3.org/2000/svg\\\"\"\n            }), \"\\n                      >\"]\n          }), \"\\n                        {/* 스피너 애니메이션용 SVG */}\\n                      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"svg\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n                  ) : (\\n                    \\\"로그인\\\"\\n                  )}\\n                \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"button\"\n            }), \">\"]\n          }), \"\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"form\"\n            }), \">\"]\n          }), \"\\n\\n              {/* 비밀번호 잊은 경우 링크 */}\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"href\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"#\\\"\"\n            }), \"\\n                \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"mt-4 block text-center text-sm font-medium text-rose-600 hover:underline focus:outline-none focus:ring-2 focus:ring-rose-500\\\"\"\n            }), \"\\n              >\"]\n          }), \"\\n                비밀번호를 잊으셨나요?\\n              \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"a\"\n            }), \">\"]\n          }), \"\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n          \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 LoginForm 컴포넌트를 만들었으므로 메인 페이지 컴포넌트에서 가져와 사용할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"페이지 디렉토리에 index.tsx라는 새 파일을 만들어서 아래 내용을 넣어주세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// app/page.tsx\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"LoginForm\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"../src/components/LoginForm\\\"\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"HomePage\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n      \", _jsx(_components.span, {\n          className: \"xml\",\n          children: _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"LoginForm\"\n            }), \" />\"]\n          })\n        }), \"\\n  );\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 파일에서는 LoginForm 컴포넌트를 import하여 HomePage 컴포넌트 내에서 렌더링하고 있습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Zod Schema\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음으로, 로그인 양식 유효성 검사를 위해 Zod를 사용하여 loginSchema를 정의해 봅시다. 다음 내용을 포함하는 src/zodSchema 디렉토리에 login.ts라는 새 파일을 만들어주세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// src/zodSchema/login.ts\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" z \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"zod\\\"\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" loginSchema = z.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"object\"\n        }), \"({\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"email\"\n        }), \": z.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"string\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"email\"\n        }), \"(),\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"password\"\n        }), \": z.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"string\"\n        }), \"().\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"min\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \"),\\n});\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" type \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"User\"\n        }), \" = z.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"infer\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"typeof\"\n        }), \" loginSchema>;\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 스키마는 로그인 양식 필드에서 예상하는 데이터의 구조를 정의합니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"양식 테스트\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 클라이언트 측 유효성 검사가 포함된 완전히 작동하는 로그인 폼이 있습니다. 이 폼은 제출을 허용하기 전에 이메일이 올바른 형식인지와 비밀번호가 최소 8자 이상인지를 확인할 것입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"폼을 테스트하려면 Next.js 애플리케이션을 실행하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm run dev\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"브라우저에서 http://localhost:3000을 방문하여 로그인 폼이 작동하는 것을 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"요약\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 튜토리얼에서는 React Hook Form을 사용하여 Next.js 애플리케이션에서 로그인 폼을 만드는 방법을 배웠습니다. 폼 처리와 유효성 검사를 위해 사용했습니다. 우리는 Zod를 사용하여 폼 스키마를 정의하고 유효성을 검사했습니다. 사용자가 잘못된 데이터를 입력하면 오류 메시지가 표시되고, 폼이 올바르게 작성될 때까지 제출 버튼이 비활성화됩니다. 이 구현은 React 및 Next.js 프로젝트에서 더 복잡한 폼을 만드는 좋은 시작점을 제공합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사용자 경험을 향상시키는 좋은 방법인 클라이언트 측 유효성 검사를 기억해주세요. 하지만 로그인 폼의 유일한 보안 계층이 되어서는 안 됩니다. 항상 강력한 서버 측 유효성 검사와 인증 메커니즘을 갖추어 애플리케이션을 잠재적인 보안 위협으로부터 보호해야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"즐거운 코딩! 🚀\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}