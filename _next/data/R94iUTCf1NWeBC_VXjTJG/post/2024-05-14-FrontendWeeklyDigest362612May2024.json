{"pageProps":{"post":{"title":"프론트엔드 주간 다이제스트 362 2024년 5월 6일5월 12일","description":"","date":"2024-05-14 12:23","slug":"2024-05-14-FrontendWeeklyDigest362612May2024","content":"\n\n![이미지](/assets/img/2024-05-14-FrontendWeeklyDigest362612May2024_0.png)\n\n# 웹 개발\n\n- HTML 툴팁에 Popover API 사용하기\n- Figma의 모바일 엔진 진화: TypeScript로의 Figma 여정\n- Google Gemini를 활용한 채팅 통합 구축\n- Frontend 용어 분석: Jamstack에 대해\n- 모바일 핀테크 API 작업의 어려움 극복하기\n- 의도적인 렌더링 차단\n- React Three Fiber로 3D 텍스트 왜곡 효과 탐색\n- Target=_blank은 rel=noopener를 의미합니다\n\n- 도구\n  - 5개의 노드 버전 관리자 비교 - 어떤 것이 적합한가요?\n  - Gulp 개발자 설문조사 소개\n\n- 접근성\n  - 왜 웹 접근성에 크게 관심을 가지고 있고 당신도 해야 할 이유\n  - 유럽 접근성 법안 (EAA) 소개\n  - 강조된 텍스트에 대한 간단한 주의 문단\n\n\n\n# CSS\n\n- 섹션 기반 스크롤 진행 표시기에 CSS 스크롤-드리븐 애니메이션 사용하기\n- CSS 앵커 위치 지정 API 소개\n- CSS 모양 만드는 현대 가이드\n- 왜 더 이상 CSS를 최소화하는 것에 대해 이야기하지 않을까요?\n\n# JavaScript\n\n- JavaScript에 대한 5가지 기본적인 것, 비 JavaScript 중심 웹 디자이너에 도움이 될 것\n- innerHTML에 대한 새로운 대안\n- 글로벌 변수 수정이 해로운 이유\n- JavaScript에서 완벽한 깊은 동등성 얻는 방법\n\n\n\n- 리액트\n\t- [리액트 개발자 도구 사용 방법 - 예제를 통한 설명](#)\n\t- [리액트 서버 컴포넌트(RSCs)의 범죄 조사](#)\n\t- [왜 리액트 쿼리를 사용해야 하는가?](#)\n\t- [코드 400줄로 나만의 리액트.js 만들기](#)\n\t- [리액트를 위한 헤들리스 UI v2.0](#)\n\t- [RedwoodJS에서 리액트 서버 컴포넌트 활용하기](#)\n\t- [반응형 디자인을 위해 리사이즈 옵저버 API 사용하기](#)\n\n- 앵귤러\n\t- [앵귤러에서 미뤄진 뷰에서의 번들 크기 개선](#)\n\t- [앵귤러의 변경 감지에 대한 신비를 해소하다: 철저한 가이드](#)\n\t- [앵귤러 뷰 엔진 vs Ivy: 철저한 가이드](#)\n\t- [앵귤러: DOM 살포화](#)","ogImage":{"url":"/assets/img/2024-05-14-FrontendWeeklyDigest362612May2024_0.png"},"coverImage":"/assets/img/2024-05-14-FrontendWeeklyDigest362612May2024_0.png","tag":["Tech"],"readingTime":2},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-14-FrontendWeeklyDigest362612May2024_0.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"웹 개발\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"HTML 툴팁에 Popover API 사용하기\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Figma의 모바일 엔진 진화: TypeScript로의 Figma 여정\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Google Gemini를 활용한 채팅 통합 구축\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Frontend 용어 분석: Jamstack에 대해\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"모바일 핀테크 API 작업의 어려움 극복하기\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"의도적인 렌더링 차단\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"React Three Fiber로 3D 텍스트 왜곡 효과 탐색\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Target=_blank은 rel=noopener를 의미합니다\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"도구\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"5개의 노드 버전 관리자 비교 - 어떤 것이 적합한가요?\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Gulp 개발자 설문조사 소개\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"접근성\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"왜 웹 접근성에 크게 관심을 가지고 있고 당신도 해야 할 이유\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"유럽 접근성 법안 (EAA) 소개\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"강조된 텍스트에 대한 간단한 주의 문단\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"CSS\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"섹션 기반 스크롤 진행 표시기에 CSS 스크롤-드리븐 애니메이션 사용하기\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CSS 앵커 위치 지정 API 소개\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CSS 모양 만드는 현대 가이드\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"왜 더 이상 CSS를 최소화하는 것에 대해 이야기하지 않을까요?\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"JavaScript\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"JavaScript에 대한 5가지 기본적인 것, 비 JavaScript 중심 웹 디자이너에 도움이 될 것\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"innerHTML에 대한 새로운 대안\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"글로벌 변수 수정이 해로운 이유\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"JavaScript에서 완벽한 깊은 동등성 얻는 방법\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"리액트\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"리액트 개발자 도구 사용 방법 - 예제를 통한 설명\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"리액트 서버 컴포넌트(RSCs)의 범죄 조사\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"왜 리액트 쿼리를 사용해야 하는가?\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"코드 400줄로 나만의 리액트.js 만들기\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"리액트를 위한 헤들리스 UI v2.0\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"RedwoodJS에서 리액트 서버 컴포넌트 활용하기\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"반응형 디자인을 위해 리사이즈 옵저버 API 사용하기\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"앵귤러\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"앵귤러에서 미뤄진 뷰에서의 번들 크기 개선\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"앵귤러의 변경 감지에 대한 신비를 해소하다: 철저한 가이드\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"앵귤러 뷰 엔진 vs Ivy: 철저한 가이드\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"#\",\n              children: \"앵귤러: DOM 살포화\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}