{"pageProps":{"post":{"title":"리액트 네이티브에서 네이티브 모듈 생성하기","description":"","date":"2024-05-14 11:38","slug":"2024-05-14-CreatingaNativeModuleinReactNative","content":"\n\n리액트 네이티브는 JavaScript와 React를 사용하여 모바일 앱을 개발할 수 있게 해주는 인기 있는 프레임워크입니다. 때때로 자바스크립트에서 사용할 수 없는 플랫폼별 기능에 액세스해야 할 수도 있습니다. 이때 네이티브 모듈이 필요한데, 이를 통해 iOS의 Swift나 안드로이드의 코틀린과 같은 네이티브 언어로 코드를 작성하여 사용할 수 있습니다.\n\n## 네이티브 모듈이란?\n\n네이티브 모듈은 JavaScript로 처리할 수 없는 작업을 수행할 수 있도록 해주는, 네이티브 플랫폼 언어(Swift, Kotlin 등)로 작성된 코드 조각입니다. 디바이스 하드웨어 기능에 액세스하거나 복잡한 계산을 수행하는 것 등이 그 예시에 해당합니다.\n\n## 요구 사항\n\n\n\n시작하기 전에 설치해야 할 사항들을 확인해 주세요:\n\n- Node.js와 npm\n- React Native CLI\n- Xcode (iOS 개발을 위해)\n- 안드로이드 스튜디오 (Android 개발을 위해)\n\n## 단계별 안내\n\n1. 개발 환경 설정하기\n\n\n\n우선, 아직 React Native 프로젝트를 설정하지 않았다면 다음을 따르세요:\n\n```js\nnpx react-native init MyNativeModuleProject\ncd MyNativeModuleProject\n```\n\n2. 네이티브 모듈 생성\n\niOS 및 Android 모두에서 기기 정보를 제공하는 네이티브 모듈을 생성해봅시다.\n\n\n\n안드로이드용으로:\n\n- Kotlin 파일 생성: 안드로이드 프로젝트 디렉토리로 이동하세요:\n\n```js\ncd android/app/src/main/java/com/mynativemoduleproject/\n```\n\n- 패키지 내에 DeviceInfoModule.kt라는 새로운 Kotlin 파일을 생성하세요.\n- Kotlin 파일 편집:\n\n\n\n이 네이티브 모듈의 Kotlin 코드입니다:\n\n```js\npackage com.mynativemoduleproject\n\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.facebook.react.bridge.ReactContextBaseJavaModule\nimport com.facebook.react.bridge.ReactMethod\nimport com.facebook.react.bridge.Promise\n\nclass DeviceInfoModule(reactContext: ReactApplicationContext) : ReactContextBaseJavaModule(reactContext) {\n    override fun getName(): String {\n        return \"DeviceInfo\"\n    }\n\n    @ReactMethod\n    fun getDeviceInfo(promise: Promise) {\n        try {\n            val deviceInfo = mapOf(\"device\" to android.os.Build.MODEL, \"OS\" to android.os.Build.VERSION.RELEASE)\n            promise.resolve(deviceInfo)\n        } catch (e: Exception) {\n            promise.reject(\"Error\", e.localizedMessage)\n        }\n    }\n}\n```\n\n이 모듈은 기기 모델과 OS 버전을 반환합니다.\n\n시각적 표현:\n\n\n\n- 모듈 등록하기: 이 모듈을 당신의 주 애플리케이션 파일에 등록해야 합니다.\n- MainApplication.java 파일 편집하기:\n\n```js\npackage com.mynativemoduleproject;\n\nimport com.facebook.react.ReactPackage;\nimport com.facebook.react.shell.MainReactPackage;\nimport com.facebook.soloader.SoLoader;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MainApplication extends Application implements ReactApplication {\n\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n        @Override\n        public boolean getUseDeveloperSupport() {\n            return BuildConfig.DEBUG;\n        }\n\n        @Override\n        protected List<ReactPackage> getPackages() {\n            return Arrays.<ReactPackage>asList(\n                new MainReactPackage(),\n                new DeviceInfoPackage()  // 여기에 패키지 등록\n            );\n        }\n\n        @Override\n        protected String getJSMainModuleName() {\n            return \"index\";\n        }\n    };\n\n    @Override\n    public ReactNativeHost getReactNativeHost() {\n        return mReactNativeHost;\n    }\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        SoLoader.init(this, /* native exopackage */ false);\n    }\n}\n```\n\niOS 경우:\n\n- Swift 파일 생성하기: Xcode에서 iOS 프로젝트 디렉토리로 이동한 후 MyDeviceInfo.swift라는 새로운 Swift 파일을 생성합니다.\n- Swift 파일 편집하기:\n\n\n\n여기 네이티브 모듈을 위한 Swift 코드가 있어요:\n\n```js\n// MyDeviceInfo.swift\nimport Foundation\nimport UIKit\n\n@objc(MyDeviceInfo)\nclass MyDeviceInfo: NSObject {\n\n  @objc\n  func getDeviceInfo(_ callback: RCTResponseSenderBlock) {\n    callback([nil, [\"device\": UIDevice.current.model, \"OS\": UIDevice.current.systemVersion]])\n  }\n\n  @objc\n  static func requiresMainQueueSetup() -> Bool {\n    return true\n  }\n}\n```\n\n이 코드 스니펫은 안드로이드 버전과 유사한 기능을 제공하여, 디바이스 모델과 OS 버전을 반환해 주는 거예요.\n\n비주얼 표현:\n\n\n\n- 모듈 등록: Bridging-Header.h 파일을 편집하여 Swift 파일이 React Native에서 보이도록 합니다:\n\n```js\n#import \"React/RCTBridgeModule.h\"\n```\n\n- JavaScript에서 네이티브 모듈 사용\n\n이제 JavaScript 코드에서 네이티브 모듈을 사용할 수 있습니다.\n\n\n\n```js\nimport React, { Component } from 'react';\nimport { View, Text, NativeModules } from 'react-native';\n\nconst { DeviceInfo } = NativeModules;\n\nclass App extends Component {\n  state = {\n    deviceInfo: {}\n  };\n\n  componentDidMount() {\n    DeviceInfo.getDeviceInfo((error, info) => {\n      if (error) {\n        console.error(error);\n      } else {\n        this.setState({ deviceInfo: info });\n      }\n    });\n  }\n\n  render() {\n    const { deviceInfo } = this.state;\n    return (\n      <View style={ flex: 1, justifyContent: 'center', alignItems: 'center' }>\n        <Text>기기 모델: {deviceInfo.device}</Text>\n        <Text>OS 버전: {deviceInfo.OS}</Text>\n      </View>\n    );\n  }\n}\n\nexport default App;\n```\n\n이 React 컴포넌트는 네이티브 모듈에서 불러온 기기 정보를 표시합니다.\n\n## 결론\n\nReact Native에서 네이티브 모듈을 생성하는 것은 플랫폼별 코드를 활용하여 앱의 기능을 확장하는 강력한 방법입니다. 이 단계를 따르면 네이티브 기능에 액세스하여 모바일 애플리케이션을 효과적으로 강화할 수 있습니다. 즐거운 코딩하세요!\n\n\n\n\n참고 : https://reactnative.dev/docs/native-modules-android","ogImage":{"url":"/assets/img/2024-05-14-CreatingaNativeModuleinReactNative_0.png"},"coverImage":"/assets/img/2024-05-14-CreatingaNativeModuleinReactNative_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"리액트 네이티브는 JavaScript와 React를 사용하여 모바일 앱을 개발할 수 있게 해주는 인기 있는 프레임워크입니다. 때때로 자바스크립트에서 사용할 수 없는 플랫폼별 기능에 액세스해야 할 수도 있습니다. 이때 네이티브 모듈이 필요한데, 이를 통해 iOS의 Swift나 안드로이드의 코틀린과 같은 네이티브 언어로 코드를 작성하여 사용할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"네이티브 모듈이란?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"네이티브 모듈은 JavaScript로 처리할 수 없는 작업을 수행할 수 있도록 해주는, 네이티브 플랫폼 언어(Swift, Kotlin 등)로 작성된 코드 조각입니다. 디바이스 하드웨어 기능에 액세스하거나 복잡한 계산을 수행하는 것 등이 그 예시에 해당합니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"요구 사항\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시작하기 전에 설치해야 할 사항들을 확인해 주세요:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Node.js와 npm\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"React Native CLI\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Xcode (iOS 개발을 위해)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"안드로이드 스튜디오 (Android 개발을 위해)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"단계별 안내\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"개발 환경 설정하기\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"우선, 아직 React Native 프로젝트를 설정하지 않았다면 다음을 따르세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"npx react-native init \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MyNativeModuleProject\"\n        }), \"\\ncd \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MyNativeModuleProject\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"네이티브 모듈 생성\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iOS 및 Android 모두에서 기기 정보를 제공하는 네이티브 모듈을 생성해봅시다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"안드로이드용으로:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Kotlin 파일 생성: 안드로이드 프로젝트 디렉토리로 이동하세요:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"cd android/app/src/main/java/com/mynativemoduleproject/\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"패키지 내에 DeviceInfoModule.kt라는 새로운 Kotlin 파일을 생성하세요.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Kotlin 파일 편집:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 네이티브 모듈의 Kotlin 코드입니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"package com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"mynativemoduleproject\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"react\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bridge\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ReactApplicationContext\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"react\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bridge\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ReactContextBaseJavaModule\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"react\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bridge\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ReactMethod\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"react\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bridge\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"Promise\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DeviceInfoModule\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"reactContext\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactApplicationContext\"\n        }), \") : \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactContextBaseJavaModule\"\n        }), \"(reactContext) {\\n    override fun \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getName\"\n        }), \"(): \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"DeviceInfo\\\"\"\n        }), \"\\n    }\\n\\n    @\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactMethod\"\n        }), \"\\n    fun \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getDeviceInfo\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"promise: \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"Promise\"\n          })]\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"try\"\n        }), \" {\\n            val deviceInfo = \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"mapOf\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"device\\\"\"\n        }), \" to android.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"os\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"Build\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"MODEL\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"OS\\\"\"\n        }), \" to android.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"os\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"Build\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"VERSION\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"RELEASE\"\n        }), \")\\n            promise.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"resolve\"\n        }), \"(deviceInfo)\\n        } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"catch\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"e\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Exception\"\n        }), \") {\\n            promise.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"reject\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Error\\\"\"\n        }), \", e.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"localizedMessage\"\n        }), \")\\n        }\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 모듈은 기기 모델과 OS 버전을 반환합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시각적 표현:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"모듈 등록하기: 이 모듈을 당신의 주 애플리케이션 파일에 등록해야 합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"MainApplication.java 파일 편집하기:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"package com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"mynativemoduleproject\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"react\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ReactPackage\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"react\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"shell\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"MainReactPackage\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" com.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"facebook\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"soloader\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"SoLoader\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" java.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"util\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"Arrays\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" java.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"util\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"List\"\n        }), \";\\n\\npublic \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MainApplication\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_ inherited__\",\n          children: \"Application\"\n        }), \" implements \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactApplication\"\n        }), \" {\\n\\n    private final \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactNativeHost\"\n        }), \" mReactNativeHost = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactNativeHost\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \") {\\n        @\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Override\"\n        }), \"\\n        public boolean \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getUseDeveloperSupport\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"BuildConfig\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"DEBUG\"\n        }), \";\\n        }\\n\\n        @\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Override\"\n        }), \"\\n        protected \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"List\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactPackage\"\n        }), \"> \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getPackages\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Arrays\"\n        }), \".<\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactPackage\"\n        }), \">\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"asList\"\n        }), \"(\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MainReactPackage\"\n        }), \"(),\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DeviceInfoPackage\"\n        }), \"()  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 여기에 패키지 등록\"\n        }), \"\\n            );\\n        }\\n\\n        @\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Override\"\n        }), \"\\n        protected \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getJSMainModuleName\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"index\\\"\"\n        }), \";\\n        }\\n    };\\n\\n    @\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Override\"\n        }), \"\\n    public \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ReactNativeHost\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getReactNativeHost\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" mReactNativeHost;\\n    }\\n\\n    @\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Override\"\n        }), \"\\n    public \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"void\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onCreate\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"super\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"onCreate\"\n        }), \"();\\n        \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"SoLoader\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"/* native exopackage */\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \");\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iOS 경우:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Swift 파일 생성하기: Xcode에서 iOS 프로젝트 디렉토리로 이동한 후 MyDeviceInfo.swift라는 새로운 Swift 파일을 생성합니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Swift 파일 편집하기:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"여기 네이티브 모듈을 위한 Swift 코드가 있어요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// MyDeviceInfo.swift\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Foundation\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIKit\"\n        }), \"\\n\\n@\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"objc\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MyDeviceInfo\"\n        }), \")\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MyDeviceInfo\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NSObject\"\n        }), \" {\\n\\n  @objc\\n  func \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getDeviceInfo\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"_ callback: RCTResponseSenderBlock\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"callback\"\n        }), \"([nil, [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"device\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIDevice\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"current\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"model\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"OS\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIDevice\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"current\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"systemVersion\"\n        }), \"]])\\n  }\\n\\n  @objc\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"static\"\n        }), \" func requiresMainQueueSetup() -> \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Bool\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \"\\n  }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 코드 스니펫은 안드로이드 버전과 유사한 기능을 제공하여, 디바이스 모델과 OS 버전을 반환해 주는 거예요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"비주얼 표현:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"모듈 등록: Bridging-Header.h 파일을 편집하여 Swift 파일이 React Native에서 보이도록 합니다:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"#\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"React/RCTBridgeModule.h\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"JavaScript에서 네이티브 모듈 사용\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 JavaScript 코드에서 네이티브 모듈을 사용할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Component\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"View\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Text\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NativeModules\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react-native'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DeviceInfo\"\n        }), \" } = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NativeModules\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_ inherited__\",\n          children: \"Component\"\n        }), \" {\\n  state = {\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"deviceInfo\"\n        }), \": {}\\n  };\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"componentDidMount\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"DeviceInfo\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getDeviceInfo\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"error, info\"\n          }), \") =>\"]\n        }), \" {\\n      \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (error) {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"console\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"error\"\n        }), \"(error);\\n      } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setState\"\n        }), \"({ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"deviceInfo\"\n        }), \": info });\\n      }\\n    });\\n  }\\n\\n  \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"render\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" { deviceInfo } = \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"state\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n      \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"View\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"style\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"flex:\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"1\"\n            }), \", \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"justifyContent:\"\n            }), \" '\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"center\"\n            }), \"', \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"alignItems:\"\n            }), \" '\", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"center\"\n            }), \"' }>\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Text\"\n            }), \">\"]\n          }), \"기기 모델: {deviceInfo.device}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Text\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Text\"\n            }), \">\"]\n          }), \"OS 버전: {deviceInfo.OS}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"Text\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"View\"\n            }), \">\"]\n          })]\n        }), \"\\n    );\\n  }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 React 컴포넌트는 네이티브 모듈에서 불러온 기기 정보를 표시합니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React Native에서 네이티브 모듈을 생성하는 것은 플랫폼별 코드를 활용하여 앱의 기능을 확장하는 강력한 방법입니다. 이 단계를 따르면 네이티브 기능에 액세스하여 모바일 애플리케이션을 효과적으로 강화할 수 있습니다. 즐거운 코딩하세요!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"참고 : https://reactnative.dev/docs/native-modules-android\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}