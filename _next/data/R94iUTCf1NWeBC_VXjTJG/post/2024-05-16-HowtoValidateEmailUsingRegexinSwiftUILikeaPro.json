{"pageProps":{"post":{"title":"SwiftUI에서 이메일을 전문가처럼 Regex로 유효성 검사하는 방법","description":"","date":"2024-05-16 16:45","slug":"2024-05-16-HowtoValidateEmailUsingRegexinSwiftUILikeaPro","content":"\n\n<div class=\"content-ad\"></div>\n\n이메일을 유효성 검사하려면 표준 형식과 일치하는 이메일을 확인하는 정규식(Regex) 패턴을 사용합니다. 유효한 이메일은 일반적으로 영숫자 조합으로 된 사용자 이름, \"@gmail.com\" 기호, 도메인 이름 및 도메인 확장자가 포함되어 있습니다.\n\n유효한 이메일 주소 예시:\n\n- example@domain.com\n- user.name@sub.domain.co.uk\n- user_name@domain.org\n\n유효하지 않은 이메일 주소 예시:\n\n<div class=\"content-ad\"></div>\n\n- example@domain (TLD이 누락됨)\n- @domain.com (로컬 부분이 누락됨)\n- user@.com (도메인 이름이 누락됨)\n\n![이미지](/assets/img/2024-05-16-HowtoValidateEmailUsingRegexinSwiftUILikeaPro_1.png)\n\n## 먼저 Regex 유효성 검사 추가하기\n\n정규표현식(Regex는 Regular Expression의 약자)은 검색 패턴을 정의하는 문자 시퀀스입니다. 문자열을 일치시키는 간결하고 유연한 수단을 제공하므로 입력 유효성 검사와 같은 작업에 이상적입니다. SwiftUI의 맥락에서 Regex는 사용자 입력의 특정 패턴(예: 여권 번호 형식)을 강제하는 데 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```swift\nimport SwiftUI\n\nstruct ExampleValidate: View {\n    // 이메일 입력, 표시 모드 및 유효성 검사 플래그를 관리하는 상태 변수\n    @State private var email: String = \"\"\n    @Environment(\\.presentationMode) var presentationMode: Binding<PresentationMode>\n    @State var isWrongEmail = false\n    @State var isRightEmail = false\n    @State var show = false\n    @State var isValidate = false\n    @State var animateCircle = false\n    \n    // 아이콘, 텍스트 및 색상을 사용자 정의할 수 있는 속성\n    var icon: UIImage = UIImage(systemName: \"checkmark.circle\")!\n    var iconError: UIImage = UIImage(systemName: \"xmark.circle\")!\n    var text = \"Berhasil\"\n    var gridentColor: Color = .green\n    var circleAColor: Color = .green\n    var gridentColorEr: Color = .red\n    var circleAColorEr: Color = .red\n    var details: String = \"메시지를 입력하세요\"\n    var corner: CGFloat = 30\n    \n    var body: some View {\n        // 여기에 뷰 내용을 입력하세요\n    }\n    \n    // 정규식을 사용하여 이메일 유효성을 검사하는 함수\n    func isEmail(valid: String) -> Bool {\n        let pattern = \"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}\"\n        return NSPredicate(format: \"SELF MATCHES %@\", pattern).evaluate(with: valid)\n    }\n}\n```\n\n# SwiftUI에서 ValidationView 구현\n\n다음 SwiftUI 뷰, ExampleValidate,은 실시간 피드백을 제공하는 이메일 유효성 검사 양식을 생성하는 방법을 보여줍니다.\n\n```swift\nimport SwiftUI\n\nstruct ExampleValidate: View {\n    // 이메일 입력, 표시 모드 및 유효성 검사 플래그를 관리하는 상태 변수\n    @State private var email: String = \"\"\n    @State var isWrongEmail = false\n    @State var isRightEmail = false\n    @State var show = false\n    @State var isValidate = false\n    @State var animateCircle = false\n    \n    // 아이콘, 텍스트 및 색상을 사용자 정의할 수 있는 속성\n    var icon: UIImage = UIImage(systemName: \"checkmark.circle\")!\n    var iconError: UIImage = UIImage(systemName: \"xmark.circle\")!\n    var text = \"Berhasil\"\n    var gridentColor: Color = .green\n    var circleAColor: Color = .green\n    var gridentColorEr: Color = .red\n    var circleAColorEr: Color = .red\n    var details: String = \"메시지를 입력하세요\"\n    var corner: CGFloat = 30\n    \n    var body: some View {\n        ZStack {\n            ScrollView {\n                VStack {\n                    // 뒤로 가기 버튼과 제목이 있는 헤더\n                    HStack {\n                        Button(action: { }, label: {\n                            Image(systemName: \"chevron.backward\")\n                                .resizable()\n                                .frame(width: 10, height: 15)\n                        })\n                        Spacer()\n                        Text(\"Regex Email\").font(.title2)\n                        Spacer()\n                    }\n                    .foregroundStyle(.primary)\n                    .padding(.horizontal, 20)\n                    .padding(.top, 10)\n                    \n                    // 이메일 입력 필드\n                    VStack(spacing: 30) {\n                        CustomTextField(placeHolder: \"이메일\", imageName: \"envelope\", bColor: \"text1\", tOpacity: 0.6, value: $email)\n                    }\n                    .padding(.horizontal, 10)\n                    .padding(.vertical, 15)\n                    \n                    // 제출 버튼\n                    Button(action: {\n                        if isEmail(valid: email) == false {\n                            isWrongEmail = true\n                        } else {\n                            isRightEmail = true\n                        }\n                    }, label: {\n                        Text(\"제출\")\n                            .fontWeight(.medium)\n                            .foregroundColor(.white)\n                            .frame(height: 50)\n                            .frame(minWidth: 0, maxWidth: .infinity)\n                            .background(Color(\"color1\"))\n                            .cornerRadius(20)\n                            .padding(.horizontal, 10)\n                    })\n                    .padding(.top, 20)\n                }\n            }\n            \n            // 성공 모달 뷰\n            if isRightEmail {\n                VStack {\n                    Spacer()\n                    ZStack {\n                        Color.black\n                            .opacity(0.3)\n                            .shadow(color: Color.black.opacity(0.08), radius: 40, x: 0, y: 5)\n                            .ignoresSafeArea()\n                            .onTapGesture {\n                                isRightEmail = false\n                            }\n                        \n                        ZStack {\n                            RoundedRectangle(cornerRadius: corner)\n                                .foregroundColor(.white)\n                                .frame(height: 250)\n                                .shadow(color: .black.opacity(0.01), radius: 20, x: 0.0, y: 0.0)\n                                .shadow(color: .black.opacity(0.1), radius: 30, x: 0.0, y: 0.0)\n                                .padding(.horizontal, 20)\n                            \n                            VStack(spacing: 10) {\n                                ZStack {\n                                    Circle()\n                                        .stroke(lineWidth: 2)\n                                        .foregroundStyle(circleAColor)\n                                        .frame(width: 80, height: 80)\n                                        .scaleEffect(animateCircle ? 1.3 : 0.90)\n                                        .opacity(animateCircle ? 0 : 1)\n                                        .animation(.easeInOut(duration: 2).delay(1).repeatForever(autoreverses: false), value: animateCircle)\n                                    \n                                    Circle()\n                                        .stroke(lineWidth: 2)\n                                        .foregroundStyle(circleAColor)\n                                        .frame(width: 80, height: 80)\n                                        .scaleEffect(animateCircle ? 1.3 : 0.90)\n                                        .opacity(animateCircle ? 0 : 1)\n                                        .animation(.easeInOut(duration: 2).delay(1.5).repeatForever(autoreverses: false), value: animateCircle)\n                                        .onAppear {\n                                            animateCircle.toggle()\n                                        }\n                                    \n                                    Image(uiImage: icon)\n                                        .resizable()\n                                        .frame(width: 90, height: 90)\n                                }\n                                \n                                Text(\"이메일이 올바릅니다\").bold().font(.system(size: 25))\n                                Text(\"이메일 유효성 검사 성공\").opacity(0.5)\n                                Button(action: {\n                                    isRightEmail = false\n                                }, label: {\n                                    Text(\"확인\")\n                                        .fontWeight(.medium)\n                                        .font(.system(size: 15))\n                                        .foregroundColor(.white)\n                                        .frame(width: 80, height: 40)\n                                        .background(Color(\"color1\"))\n                                        .cornerRadius(20)\n                                        .padding(.horizontal, 50)\n                                }).padding(.top, 7)\n                            }\n                        }.padding()\n                    }\n                    Spacer()\n                }.ignoresSafeArea()\n            }\n            \n            // 오류 모달 뷰\n            if isWrongEmail {\n                VStack {\n                    Spacer()\n                    ZStack {\n                        Color.black\n                            .opacity(0.3)\n                            .shadow(color: Color.black.opacity(0.08), radius: 40, x: 0, y: 5)\n                            .ignoresSafeArea()\n                            .onTapGesture {\n                                isWrongEmail = false\n                            }\n                        \n                        ZStack {\n                            RoundedRectangle(cornerRadius: corner)\n                                .foregroundColor(.white)\n                                .frame(height: 250)\n                                .shadow(color: .black.opacity(0.01), radius: 20, x: 0.0, y: 0.0)\n                                .shadow(color: .black.opacity(0.1), radius: 30, x: 0.0, y: 0.0)\n                                .padding(.horizontal, 20)\n                            \n                            VStack(spacing: 10) {\n                                ZStack {\n                                    Circle()\n                                        .stroke(lineWidth: 2)\n                                        .foregroundStyle(circleAColorEr)\n                                        .frame(width: 80, height: 80)\n                                        .scaleEffect(animateCircle ? 1.3 : 0.90)\n                                        .opacity(animateCircle ? 0 : 1)\n                                        .animation(.easeInOut(duration: 2).delay(1).repeatForever(autoreverses: false), value: animateCircle)\n                                    \n                                    Circle()\n                                        .stroke(lineWidth: 2)\n                                        .foregroundStyle(circleAColor)\n                                        .frame(width: 80, height: 80)\n                                        .scaleEffect(animateCircle ? 1.3 : 0.90)\n                                        .opacity(animateCircle ? 0 : 1)\n                                        .animation(.easeInOut(duration: 2).delay(1.5).repeatForever(autoreverses: false), value: animateCircle)\n                                        .onAppear {\n                                            animateCircle.toggle()\n                                        }\n                                    \n                                    Image(uiImage: iconError)\n                                        .resizable()\n                                        .frame(width: 90, height: 90)\n                                }\n                                \n                                Text(\"잘못된 이메일\").\n\n<div class=\"content-ad\"></div>\n\n## 이 글을 마무리하며:\n\n사용자가 올바른 형식의 이메일 주소를 제공하도록 하는 것이 중요합니다. 이는 사용자 경험을 향상시키는데 도움이 되는데 더불어 애플리케이션의 데이터 정확성과 통신 신뢰성을 향상시킵니다. 읽어 주셔서 감사합니다! Naufal Adli의 더 많은 SwiftUI 기사가 곧 나올 예정이니 많은 기대 부탁드립니다. 이 기사는 수작업으로 만들어졌으며 마음을 담아 제작되었습니다. ❤️ 이제부터 좋아요와 팔로우도 잊지 마세요.","ogImage":{"url":"/assets/img/2024-05-16-HowtoValidateEmailUsingRegexinSwiftUILikeaPro_0.png"},"coverImage":"/assets/img/2024-05-16-HowtoValidateEmailUsingRegexinSwiftUILikeaPro_0.png","tag":["Tech"],"readingTime":12},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    img: \"img\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이메일을 유효성 검사하려면 표준 형식과 일치하는 이메일을 확인하는 정규식(Regex) 패턴을 사용합니다. 유효한 이메일은 일반적으로 영숫자 조합으로 된 사용자 이름, \\\"@gmail.com\\\" 기호, 도메인 이름 및 도메인 확장자가 포함되어 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"유효한 이메일 주소 예시:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"example@domain.com\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"user.name@sub.domain.co.uk\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"user_name@domain.org\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"유효하지 않은 이메일 주소 예시:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"example@domain (TLD이 누락됨)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"@domain.com (로컬 부분이 누락됨)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"user@.com (도메인 이름이 누락됨)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-HowtoValidateEmailUsingRegexinSwiftUILikeaPro_1.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"먼저 Regex 유효성 검사 추가하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"정규표현식(Regex는 Regular Expression의 약자)은 검색 패턴을 정의하는 문자 시퀀스입니다. 문자열을 일치시키는 간결하고 유연한 수단을 제공하므로 입력 유효성 검사와 같은 작업에 이상적입니다. SwiftUI의 맥락에서 Regex는 사용자 입력의 특정 패턴(예: 여권 번호 형식)을 강제하는 데 사용할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-swift\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" SwiftUI\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ExampleValidate\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"View\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 이메일 입력, 표시 모드 및 유효성 검사 플래그를 관리하는 상태 변수\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" email: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@Environment\"\n        }), \"(\\\\.presentationMode) \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" presentationMode: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Binding\"\n        }), \"<\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"PresentationMode\"\n        }), \">\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isWrongEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isRightEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" show \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isValidate \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 아이콘, 텍스트 및 색상을 사용자 정의할 수 있는 속성\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" icon: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \"(systemName: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"checkmark.circle\\\"\"\n        }), \")\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"!\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" iconError: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \"(systemName: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"xmark.circle\\\"\"\n        }), \")\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"!\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" text \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Berhasil\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" gridentColor: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .green\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" circleAColor: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .green\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" gridentColorEr: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .red\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" circleAColorEr: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .red\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" details: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"메시지를 입력하세요\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" corner: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"CGFloat\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \"\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" body: \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 여기에 뷰 내용을 입력하세요\"\n        }), \"\\n    }\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 정규식을 사용하여 이메일 유효성을 검사하는 함수\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"isEmail\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"valid\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \") -> \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Bool\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" pattern \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"\\\"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\", _jsx(_components.span, {\n            className: \"hljs-subst\",\n            children: \"\\\\\\\\\"\n          }), \".[A-Za-z]{2,64}\\\"\"]\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"NSPredicate\"\n        }), \"(format: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"SELF MATCHES %@\\\"\"\n        }), \", pattern).evaluate(with: valid)\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"SwiftUI에서 ValidationView 구현\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음 SwiftUI 뷰, ExampleValidate,은 실시간 피드백을 제공하는 이메일 유효성 검사 양식을 생성하는 방법을 보여줍니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-swift\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" SwiftUI\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ExampleValidate\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"View\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 이메일 입력, 표시 모드 및 유효성 검사 플래그를 관리하는 상태 변수\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" email: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isWrongEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isRightEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" show \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isValidate \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 아이콘, 텍스트 및 색상을 사용자 정의할 수 있는 속성\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" icon: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \"(systemName: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"checkmark.circle\\\"\"\n        }), \")\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"!\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" iconError: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIImage\"\n        }), \"(systemName: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"xmark.circle\\\"\"\n        }), \")\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"!\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" text \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Berhasil\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" gridentColor: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .green\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" circleAColor: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .green\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" gridentColorEr: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .red\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" circleAColorEr: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" .red\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" details: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"메시지를 입력하세요\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" corner: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"CGFloat\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \"\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" body: \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ScrollView\"\n        }), \" {\\n                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \" {\\n                    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 뒤로 가기 버튼과 제목이 있는 헤더\"\n        }), \"\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"HStack\"\n        }), \" {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Button\"\n        }), \"(action: { }, label: {\\n                            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Image\"\n        }), \"(systemName: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"chevron.backward\\\"\"\n        }), \")\\n                                .resizable()\\n                                .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"15\"\n        }), \")\\n                        })\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Spacer\"\n        }), \"()\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Regex Email\\\"\"\n        }), \").font(.title2)\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Spacer\"\n        }), \"()\\n                    }\\n                    .foregroundStyle(.primary)\\n                    .padding(.horizontal, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n                    .padding(.top, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n                    \\n                    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 이메일 입력 필드\"\n        }), \"\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \"(spacing: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \") {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"CustomTextField\"\n        }), \"(placeHolder: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"이메일\\\"\"\n        }), \", imageName: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"envelope\\\"\"\n        }), \", bColor: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"text1\\\"\"\n        }), \", tOpacity: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \", value: \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"$email\"\n        }), \")\\n                    }\\n                    .padding(.horizontal, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n                    .padding(.vertical, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"15\"\n        }), \")\\n                    \\n                    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 제출 버튼\"\n        }), \"\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Button\"\n        }), \"(action: {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" isEmail(valid: email) \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \" {\\n                            isWrongEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \"\\n                        } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n                            isRightEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \"\\n                        }\\n                    }, label: {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"제출\\\"\"\n        }), \")\\n                            .fontWeight(.medium)\\n                            .foregroundColor(.white)\\n                            .frame(height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \")\\n                            .frame(minWidth: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", maxWidth: .infinity)\\n                            .background(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"color1\\\"\"\n        }), \"))\\n                            .cornerRadius(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n                            .padding(.horizontal, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n                    })\\n                    .padding(.top, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n                }\\n            }\\n            \\n            \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 성공 모달 뷰\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" isRightEmail {\\n                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \" {\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Spacer\"\n        }), \"()\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".black\\n                            .opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.3\"\n        }), \")\\n                            .shadow(color: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".black.opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.08\"\n        }), \"), radius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"40\"\n        }), \", x: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \")\\n                            .ignoresSafeArea()\\n                            .onTapGesture {\\n                                isRightEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n                            }\\n                        \\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n                            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"RoundedRectangle\"\n        }), \"(cornerRadius: corner)\\n                                .foregroundColor(.white)\\n                                .frame(height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"250\"\n        }), \")\\n                                .shadow(color: .black.opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"), radius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \", x: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \", y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \")\\n                                .shadow(color: .black.opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.1\"\n        }), \"), radius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \", x: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \", y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \")\\n                                .padding(.horizontal, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n                            \\n                            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \"(spacing: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \") {\\n                                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n                                        .stroke(lineWidth: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \")\\n                                        .foregroundStyle(circleAColor)\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \")\\n                                        .scaleEffect(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.3\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.90\"\n        }), \")\\n                                        .opacity(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \")\\n                                        .animation(.easeInOut(duration: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \").delay(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \").repeatForever(autoreverses: \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"), value: animateCircle)\\n                                    \\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n                                        .stroke(lineWidth: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \")\\n                                        .foregroundStyle(circleAColor)\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \")\\n                                        .scaleEffect(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.3\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.90\"\n        }), \")\\n                                        .opacity(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \")\\n                                        .animation(.easeInOut(duration: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \").delay(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.5\"\n        }), \").repeatForever(autoreverses: \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"), value: animateCircle)\\n                                        .onAppear {\\n                                            animateCircle.toggle()\\n                                        }\\n                                    \\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Image\"\n        }), \"(uiImage: icon)\\n                                        .resizable()\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"90\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"90\"\n        }), \")\\n                                }\\n                                \\n                                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"이메일이 올바릅니다\\\"\"\n        }), \").bold().font(.system(size: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"25\"\n        }), \"))\\n                                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"이메일 유효성 검사 성공\\\"\"\n        }), \").opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.5\"\n        }), \")\\n                                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Button\"\n        }), \"(action: {\\n                                    isRightEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n                                }, label: {\\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"확인\\\"\"\n        }), \")\\n                                        .fontWeight(.medium)\\n                                        .font(.system(size: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"15\"\n        }), \"))\\n                                        .foregroundColor(.white)\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"40\"\n        }), \")\\n                                        .background(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"color1\\\"\"\n        }), \"))\\n                                        .cornerRadius(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n                                        .padding(.horizontal, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \")\\n                                }).padding(.top, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"7\"\n        }), \")\\n                            }\\n                        }.padding()\\n                    }\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Spacer\"\n        }), \"()\\n                }.ignoresSafeArea()\\n            }\\n            \\n            \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 오류 모달 뷰\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" isWrongEmail {\\n                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \" {\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Spacer\"\n        }), \"()\\n                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".black\\n                            .opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.3\"\n        }), \")\\n                            .shadow(color: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".black.opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.08\"\n        }), \"), radius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"40\"\n        }), \", x: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \")\\n                            .ignoresSafeArea()\\n                            .onTapGesture {\\n                                isWrongEmail \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n                            }\\n                        \\n                        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n                            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"RoundedRectangle\"\n        }), \"(cornerRadius: corner)\\n                                .foregroundColor(.white)\\n                                .frame(height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"250\"\n        }), \")\\n                                .shadow(color: .black.opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"), radius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \", x: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \", y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \")\\n                                .shadow(color: .black.opacity(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.1\"\n        }), \"), radius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \", x: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \", y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \")\\n                                .padding(.horizontal, \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n                            \\n                            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \"(spacing: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \") {\\n                                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n                                        .stroke(lineWidth: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \")\\n                                        .foregroundStyle(circleAColorEr)\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \")\\n                                        .scaleEffect(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.3\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.90\"\n        }), \")\\n                                        .opacity(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \")\\n                                        .animation(.easeInOut(duration: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \").delay(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \").repeatForever(autoreverses: \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"), value: animateCircle)\\n                                    \\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n                                        .stroke(lineWidth: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \")\\n                                        .foregroundStyle(circleAColor)\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"80\"\n        }), \")\\n                                        .scaleEffect(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.3\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.90\"\n        }), \")\\n                                        .opacity(animateCircle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" : \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \")\\n                                        .animation(.easeInOut(duration: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \").delay(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.5\"\n        }), \").repeatForever(autoreverses: \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"), value: animateCircle)\\n                                        .onAppear {\\n                                            animateCircle.toggle()\\n                                        }\\n                                    \\n                                    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Image\"\n        }), \"(uiImage: iconError)\\n                                        .resizable()\\n                                        .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"90\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"90\"\n        }), \")\\n                                }\\n                                \\n                                \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Text\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"잘못된 이메일\\\"\"\n        }), \").\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"<\"\n        }), \"div \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \"=\\\"\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"content\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ad\"\n        }), \"\\\"></\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"div\"\n        }), \">\\n\\n## 이 글을 마무리하며:\\n\\n사용자가 올바른 형식의 이메일 주소를 제공하도록 하는 것이 중요합니다. 이는 사용자 경험을 향상시키는데 도움이 되는데 더불어 애플리케이션의 데이터 정확성과 통신 신뢰성을 향상시킵니다. 읽어 주셔서 감사합니다! \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Naufal\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Adli\"\n        }), \"의 더 많은 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"SwiftUI\"\n        }), \" 기사가 곧 나올 예정이니 많은 기대 부탁드립니다. 이 기사는 수작업으로 만들어졌으며 마음을 담아 제작되었습니다. ❤️ 이제부터 좋아요와 팔로우도 잊지 마세요.\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}