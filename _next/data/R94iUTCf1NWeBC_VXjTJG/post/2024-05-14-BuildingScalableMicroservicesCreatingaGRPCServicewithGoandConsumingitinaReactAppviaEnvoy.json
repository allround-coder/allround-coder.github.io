{"pageProps":{"post":{"title":"스켈러블한 마이크로서비스 구축 Go로 GRPC 서비스 만들기 및 Envoy를 통해 React 앱에서 사용하기","description":"","date":"2024-05-14 10:14","slug":"2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy","content":"\n\n<img src=\"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_0.png\" />\n\n# 준비물\n\n구현에 들어가기 전에 시스템에 다음 사항이 설치되어 있는지 확인하세요:\n\n- Go: 공식 웹사이트(https://golang.org/)에서 Go를 설치하세요.\n- Node.js와 npm: (https://nodejs.org/)에서 Node.js를 다운로드하고 설치하세요.\n- Docker: Envoy 프록시 컨테이너를 실행하기 위해 Docker를 설치하세요(https://www.docker.com/).\n\n\n\n# 단계 1: Go에서 GRPC 서비스 만들기\n\n먼저 Go로 GRPC 서비스를 만들어봅시다. 프로젝트를 위한 새 디렉토리를 만들고 Go 환경을 설정해보세요:\n\n```js\ngo-grpc-server-with-envoy\n```\n\n아래 명령을 실행하여 프로젝트를 초기화하세요:\n\n\n\n```js\ncd go-grpc-server-with-envoy\ngo mod init\n```\n\n지금은 새로운 Go 파일을 만들어서 서비스를 구현해보세요. 예를 들어 main.go 파일을 만들 수 있습니다. 이 파일에서 GRPC 서비스와 그 메서드를 정의해보세요. 다음은 간단한 예시입니다:\n\n```js\npackage main\n\nimport (\n\t\"context\"\n\t\"log\"\n\t\"net\"\n\t\"google.golang.org/grpc\"\n)\n\n// YourService should implement the methods of your GRPC service.\ntype YourService struct{}\n\n// 여기에 GRPC 메서드를 구현하세요.\n\nfunc main() {\n\tlistener, err := net.Listen(\"tcp\", \":8080\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Failed to listen: %v\", err)\n\t}\n\n\tgrpcServer := grpc.NewServer()\n\t// 여기에 서비스를 등록하세요.\n\n\tif err := grpcServer.Serve(listener); err != nil {\n\t\tlog.Fatalf(\"Failed to serve: %v\", err)\n\t}\n}\n```\n\n# 스텝 2: 프로토버프 정의 만들기\n\n\n\n\n서비스와 메시지를 Protocol Buffers(Protobuf)를 사용하여 정의하세요. \"proto\" 폴더 안에 .proto 파일을 만들어주세요. 예를 들어 UserInfo.proto 파일을 만들어서 서비스와 메시지 유형을 정의해주세요:\n\n```js\nsyntax = \"proto3\";\n\npackage proto;\n\noption go_package = \"app/proto\";\n\nmessage User {\n    string name = 1;\n    int32 age = 2;\n    Address address = 3;\n    PhoneNumber phone = 4;\n    string updated_at = 5;\n    string created_at = 6;\n}\n\nmessage Address {\n    string street = 1;\n    string city = 2;\n    string state = 3;\n    string zip = 4;\n}\n\nmessage PhoneNumber {\n    string primary = 1;\n    map<string, string> others = 2;\n}\n\nmessage UserRequest {\n    string name = 1;\n}\n\nmessage UserResponse {\n    User user = 1;\n    int32 status = 2;\n    string error = 3;\n}\n\nservice Usr {\n    rpc GetUser(UserRequest) returns (UserResponse) {}\n}\n```\n\n.proto 파일을 컴파일하여 Go 코드를 생성하세요:\n\n```js\n protoc ./proto/userInfo.proto --go_out=. --go-grpc_out=.\n```\n\n\n\n# 단계 3: GRPC 서비스 구현하기\n\nmain.go 파일에 .proto 파일의 정의에 따라 GRPC 서비스 메소드를 구현해주세요.\n\n```go\npackage main\n\nimport (\n    \"context\"\n    \"log\"\n    \"net\"\n    \"time\"\n\n    \"github.com/digvijay17july/golang-projects/go-grpc-react-example/go-grpc-server-with-envoy/app/proto\"\n    \"google.golang.org/grpc\"\n)\n\ntype server struct {\n    proto.UnimplementedUsrServer\n}\n\nfunc (*server) GetUser(ctx context.Context, in *proto.UserRequest) (*proto.UserResponse, error) {\n    \n    others := make(map[string]string)\n    others[\"secondary\"] = \"233453\"\n    phone := &proto.PhoneNumber{Primary: \"1234567890\", Others: others}\n    user := &proto.User{Name: \"Digvijay\", Age: 23, Address: &proto.Address{Street: \"Pune\", City: \"Pune\", State: \"MAHARASHTRA\", Zip: \"201223\"}, Phone: phone, UpdatedAt: time.Now().UTC().String(), CreatedAt: time.Now().UTC().String()}\n    return &proto.UserResponse{User: user, Status: 200, Error: \"\"}, nil\n}\n\nfunc main() {\n    lis, err := net.Listen(\"tcp\", \":8080\")\n    if err != nil {\n        log.Fatalf(\"failed to listen: %v\", err)\n    }\n    s := grpc.NewServer()\n    grpcServer := &server{}\n    proto.RegisterUsrServer(s, grpcServer)\n    log.Printf(\"Starting server on port :%v\", lis.Addr())\n    if err := s.Serve(lis); err != nil {\n        log.Fatalf(\"failed to serve: %v\", err)\n    }\n\n}\n```\n\n# 단계 4: GRPC 서비스 Docker 이미지 빌드 및 실행하기\n\n\n\nDockerfile for the Grpc Service app -\n\n```js\nFROM golang:1.21.4-alpine\n\nWORKDIR /app\n\nCOPY go.sum ./\n\nCOPY . ./\n\nRUN go build -o /go-grpc-server-with-envoy\n\nEXPOSE 8080\n\nCMD [\"/go-grpc-server-with-envoy\"]\n```\n\n이미지 빌드하기 -\n\n```js\ndocker build -t go-grpc-server-with-envoy .\n```\n\n\n\n# 단계 5: Envoy Proxy 설정하기\n\nEnvoy 폴더를 생성하세요. 이 폴더에는 2개의 파일이 포함됩니다.\n\n- ./config/envoy.yaml\n\n```js\nadmin:\n  address:\n    socket_address: { address: 0.0.0.0, port_value: 9901 }\nstatic_resources:\n  listeners:\n    - name: listener_0\n      address:\n        socket_address: { address: 0.0.0.0, port_value:  8080 }\n      filter_chains:\n        - filters:\n            - name: envoy.filters.network.http_connection_manager\n              typed_config:\n                \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n                codec_type: auto\n                stat_prefix: ingress_http\n                route_config:\n                  name: local_route\n                  virtual_hosts:\n                    - name: local_service\n                      domains: [\"*\"]\n                      routes:\n                        - match: { prefix: \"/\"}\n                          route: { cluster: grpc_service}\n                      cors:\n                        allow_origin_string_match:\n                          - prefix: \"*\"\n                        allow_methods: GET, PUT, DELETE, POST, OPTIONS\n                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout\n                        max_age: \"1728000\"\n                        expose_headers: custom-header-1,grpc-status,grpc-message\n                http_filters:\n                  - name: envoy.filters.http.grpc_web\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb\n                  - name: envoy.filters.http.cors\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors\n                  - name: envoy.filters.http.router\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n  clusters:\n    - name: grpc_service\n      connect_timeout: 0.25s\n      type: LOGICAL_DNS\n      typed_extension_protocol_options:\n        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\n          \"@type\": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\n          explicit_http_config:\n            http2_protocol_options: {}\n      lb_policy: ROUND_ROBIN\n      load_assignment:\n        cluster_name: grpc_service\n        endpoints:\n          - lb_endpoints:\n              - endpoint:\n                  address:\n                    socket_address:\n                      address: host.docker.internal\n                      port_value: 8080\n```\n\n\n\n2. ./config/Dockerfile\n\n```js\nFROM envoyproxy/envoy:v1.28.0\nCOPY ./envoy.yaml /etc/envoy/envoy.yaml\n```\n\n# 단계 6: 앱 실행을 위한 docker-compose.yaml 생성\n\n```js\nversion: '3'\nservices:\n  grpc-server:\n    image: go-grpc-server-with-envoy:latest  # 실제 Go gRPC 서버 이미지 이름과 태그로 변경\n    ports:\n      - \"8080:8080\"  # 컨테이너의 gRPC 포트를 호스트 머신에 매핑\n    networks:\n      - go-grpc-server-with-envoy\n\n  gateway-envoy:\n    build:\n      context: ./envoy/config\n      dockerfile: Dockerfile\n    ports:\n      - '8083:8080'\n\n    networks:\n      - go-grpc-server-with-envoy\n\nnetworks:\n  go-grpc-server-with-envoy:\n```\n\n\n\n백엔드를 Envoy 프록시로 실행하려면:\n\n```js\ndocker-compose up\n```\n\n출력:\n\n![이미지](/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_1.png)\n\n\n\n# 단계 7: 리액트 앱 생성하기\n\n```js\nnpx create-react-app my-grpc-app\ncd my-grpc-app\n```\n\n# 단계 8: gRPC-Web 및 google-protobuf 플러그인 설치\n\n```js\nnpm install -g protoc-gen-ts\nnpm i protoc-gen-grpc-web\n```\n\n\n\n# 단계 9: 리액트 앱에서 다른 종속성 구성하기\n\n```js\n  \"dependencies\": {\n    \"@grpc/proto-loader\": \"^0.7.10\",\n    \"@testing-library/jest-dom\": \"^5.17.0\",\n    \"@testing-library/react\": \"^13.4.0\",\n    \"@testing-library/user-event\": \"^13.5.0\",\n    \"@types/react\": \"^18.2.47\",\n    \"@types/react-dom\": \"^18.2.18\",\n    \"google-proto-files\": \"^4.0.0\",\n    \"google-protobuf\": \"3.21.2\",\n    \"grpc-web\": \"^1.5.0\",\n    \"protoc-gen-grpc-web\": \"^1.4.2\",\n    \"protoc-gen-ts\": \"^0.8.7\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-scripts\": \"5.0.1\",\n    \"web-vitals\": \"^2.1.4\"\n  }\n```\n\n# 단계 10: 리액트 앱을 위한 GRPC 클라이언트 코드 생성\n\n.proto 파일을 컴파일하여 js 코드를 생성하세요:\n\n\n\n```js\nprotoc -I=src/proto userInfo.proto --js_out=import_style=commonjs,binary:./src/proto --grpc-web_out=import_style=commonjs,mode=grpcwebtext:./src/proto\n```\n\n# 단계 11: React 앱 구성하기\n\nUserDetails.js\n\n```js\nimport React, { Component } from 'react';\nimport { UsrClient } from '../proto/userInfo_grpc_web_pb';\nimport { UserRequest } from '../proto/userInfo_pb';// 생성된 클라이언트 코드를 가져옵니다\n\nclass UserDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        const client = new UsrClient('http://localhost:8083'); // 사용 중인 gRPC 서버 URL로 교체해주세요\n\n        // 사용자 이름을 사용해 요청 생성\n        const request = new UserRequest();\n        // 원하는 사용자 이름으로 대체해주세요\n\n        // GetUser RPC 호출\n        client.getUser(request, {}, (err, response) => {\n            if (!err) {\n                this.setState({ user: response.getUser() });\n            } else {\n                this.setState({ error: '사용자 데이터를 불러오는 중 오류 발생' });\n            }\n        });\n    }\n\n    render() {\n        const { user, error } = this.state;\n\n        return (\n            <div>\n                {error ? (\n                    <p>Error: {error}</p>\n                ) : user ? (\n                    <div>\n                        <h1>사용자 세부 정보</h1>\n                        <p>이름: {user.getName()}</p>\n                        <p>나이: {user.getAge()}</p>\n                        <h2>주소</h2>\n                        <p>거리: {user.getAddress().getStreet()}</p>\n                        <p>도시: {user.getAddress().getCity()}</p>\n                        <p>주: {user.getAddress().getState()}</p>\n                        <p>우편번호: {user.getAddress().getZip()}</p>\n                        {/* 전화번호 정보를 비슷하게 표시할 수 있습니다 */}\n                        <p>업데이트 날짜: {user.getUpdatedAt()}</p>\n                        <p>생성 날짜: {user.getCreatedAt()}</p>\n                    </div>\n                ) : (\n                    <p>로딩 중...</p>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default UserDetail;\n```\n\n\n\nApp.js\n\n```js\nimport logo from './logo.svg';\nimport './App.css';\nimport UserDetail from './components/UserDetails';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <UserDetail>\n          \n        </UserDetail>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n### Step 12: React 앱 빌드 및 실행\n\nReact 앱을 빌드하고 실행하세요.\n\n\n\n```js\nnpm start\n```\n\n결과 -\n\n<img src=\"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_2.png\" />\n\n# 결론\n\n\n\n본 튜토리얼에서는 Go로 GRPC 서비스를 생성하는 방법, Envoy를 프록시로 구성하는 방법, 그리고 React 앱을 빌드하여 Envoy를 통해 GRPC 서비스와 통신하는 과정을 다루었습니다. 이 설정은 분산 시스템을 구축하는 확장 가능하고 효율적인 방법을 제공합니다. 필요에 따라 서비스 및 React 앱에 더 많은 GRPC 메서드와 기능을 추가하여 이 예제를 확장할 수 있습니다. 즐거운 코딩하세요!\n\n더 많은 정보를 위해 코드를 확인하세요: GitHub","ogImage":{"url":"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_0.png"},"coverImage":"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_0.png","tag":["Tech"],"readingTime":11},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ol: \"ol\",\n    img: \"img\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"img\", {\n      src: \"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_0.png\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"준비물\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"구현에 들어가기 전에 시스템에 다음 사항이 설치되어 있는지 확인하세요:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Go: 공식 웹사이트(https://golang.org/)에서 Go를 설치하세요.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Node.js와 npm: (https://nodejs.org/)에서 Node.js를 다운로드하고 설치하세요.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Docker: Envoy 프록시 컨테이너를 실행하기 위해 Docker를 설치하세요(https://www.docker.com/).\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 1: Go에서 GRPC 서비스 만들기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"먼저 Go로 GRPC 서비스를 만들어봅시다. 프로젝트를 위한 새 디렉토리를 만들고 Go 환경을 설정해보세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-envoy\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 명령을 실행하여 프로젝트를 초기화하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"cd go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-envoy\\ngo mod init\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"지금은 새로운 Go 파일을 만들어서 서비스를 구현해보세요. 예를 들어 main.go 파일을 만들 수 있습니다. 이 파일에서 GRPC 서비스와 그 메서드를 정의해보세요. 다음은 간단한 예시입니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"package main\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" (\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"context\\\"\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"log\\\"\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"net\\\"\"\n        }), \"\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"google.golang.org/grpc\\\"\"\n        }), \"\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// YourService should implement the methods of your GRPC service.\"\n        }), \"\\ntype \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"YourService\"\n        }), \" struct{}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 여기에 GRPC 메서드를 구현하세요.\"\n        }), \"\\n\\nfunc \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"main\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n\\tlistener, err := net.\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Listen\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"tcp\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\":8080\\\"\"\n        }), \")\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" err != nil {\\n\\t\\tlog.\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Fatalf\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Failed to listen: %v\\\"\"\n        }), \", err)\\n\\t}\\n\\n\\tgrpcServer := grpc.\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NewServer\"\n        }), \"()\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 여기에 서비스를 등록하세요.\"\n        }), \"\\n\\n\\t\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" err := grpcServer.\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Serve\"\n        }), \"(listener); err != nil {\\n\\t\\tlog.\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Fatalf\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Failed to serve: %v\\\"\"\n        }), \", err)\\n\\t}\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"스텝 2: 프로토버프 정의 만들기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"서비스와 메시지를 Protocol Buffers(Protobuf)를 사용하여 정의하세요. \\\"proto\\\" 폴더 안에 .proto 파일을 만들어주세요. 예를 들어 UserInfo.proto 파일을 만들어서 서비스와 메시지 유형을 정의해주세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"syntax = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"proto3\\\"\"\n        }), \";\\n\\npackage proto;\\n\\noption go_package = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"app/proto\\\"\"\n        }), \";\\n\\nmessage \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"User\"\n        }), \" {\\n    string name = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \";\\n    int32 age = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Address\"\n        }), \" address = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \";\\n    \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"PhoneNumber\"\n        }), \" phone = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \";\\n    string updated_at = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \";\\n    string created_at = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \";\\n}\\n\\nmessage \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Address\"\n        }), \" {\\n    string street = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \";\\n    string city = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n    string state = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \";\\n    string zip = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \";\\n}\\n\\nmessage \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"PhoneNumber\"\n        }), \" {\\n    string primary = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \";\\n    map<string, string> others = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n}\\n\\nmessage \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserRequest\"\n        }), \" {\\n    string name = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \";\\n}\\n\\nmessage \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserResponse\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"User\"\n        }), \" user = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \";\\n    int32 status = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \";\\n    string error = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \";\\n}\\n\\nservice \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Usr\"\n        }), \" {\\n    rpc \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"GetUser\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserRequest\"\n        }), \") returns (\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserResponse\"\n        }), \") {}\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".proto 파일을 컴파일하여 Go 코드를 생성하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\" protoc ./proto/userInfo.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"proto\"\n        }), \" --go_out=. --go-grpc_out=.\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 3: GRPC 서비스 구현하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"main.go 파일에 .proto 파일의 정의에 따라 GRPC 서비스 메소드를 구현해주세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-go\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"package\"\n        }), \" main\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" (\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"context\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"log\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"net\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"time\\\"\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"github.com/digvijay17july/golang-projects/go-grpc-react-example/go-grpc-server-with-envoy/app/proto\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"google.golang.org/grpc\\\"\"\n        }), \"\\n)\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"type\"\n        }), \" server \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"struct\"\n        }), \" {\\n    proto.UnimplementedUsrServer\\n}\\n\\n\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"func\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(*server)\"\n          })]\n        }), \" GetUser(ctx context.Context, in *proto.UserRequest) (*proto.UserResponse, \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"error\"\n        }), \") {\\n    \\n    others := \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"make\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"map\"\n        }), \"[\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"string\"\n        }), \"]\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"string\"\n        }), \")\\n    others[\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"secondary\\\"\"\n        }), \"] = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"233453\\\"\"\n        }), \"\\n    phone := &proto.PhoneNumber{Primary: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"1234567890\\\"\"\n        }), \", Others: others}\\n    user := &proto.User{Name: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Digvijay\\\"\"\n        }), \", Age: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"23\"\n        }), \", Address: &proto.Address{Street: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Pune\\\"\"\n        }), \", City: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Pune\\\"\"\n        }), \", State: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"MAHARASHTRA\\\"\"\n        }), \", Zip: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"201223\\\"\"\n        }), \"}, Phone: phone, UpdatedAt: time.Now().UTC().String(), CreatedAt: time.Now().UTC().String()}\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" &proto.UserResponse{User: user, Status: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"200\"\n        }), \", Error: \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \"}, \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"nil\"\n        }), \"\\n}\\n\\n\", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"func\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title\",\n            children: \"main\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          })]\n        }), \" {\\n    lis, err := net.Listen(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"tcp\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\":8080\\\"\"\n        }), \")\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" err != \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"nil\"\n        }), \" {\\n        log.Fatalf(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"failed to listen: %v\\\"\"\n        }), \", err)\\n    }\\n    s := grpc.NewServer()\\n    grpcServer := &server{}\\n    proto.RegisterUsrServer(s, grpcServer)\\n    log.Printf(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Starting server on port :%v\\\"\"\n        }), \", lis.Addr())\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" err := s.Serve(lis); err != \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"nil\"\n        }), \" {\\n        log.Fatalf(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"failed to serve: %v\\\"\"\n        }), \", err)\\n    }\\n\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 4: GRPC 서비스 Docker 이미지 빌드 및 실행하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Dockerfile for the Grpc Service app -\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"FROM\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"golang\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.21\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \"-alpine\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"WORKDIR\"\n        }), \" /app\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"COPY\"\n        }), \" go.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"sum\"\n        }), \" ./\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"COPY\"\n        }), \" . ./\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"RUN\"\n        }), \" go build -o /go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-envoy\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"EXPOSE\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8080\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"CMD\"\n        }), \" [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"/go-grpc-server-with-envoy\\\"\"\n        }), \"]\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이미지 빌드하기 -\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"docker build -t go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-envoy .\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 5: Envoy Proxy 설정하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Envoy 폴더를 생성하세요. 이 폴더에는 2개의 파일이 포함됩니다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"./config/envoy.yaml\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"admin\"\n        }), \":\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"address\"\n        }), \":\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"socket_address\"\n        }), \": { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"address\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"port_value\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"9901\"\n        }), \" }\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"static_resources\"\n        }), \":\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"listeners\"\n        }), \":\\n    - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": listener_0\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"address\"\n        }), \":\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"socket_address\"\n        }), \": { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"address\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"port_value\"\n        }), \":  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8080\"\n        }), \" }\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"filter_chains\"\n        }), \":\\n        - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"filters\"\n        }), \":\\n            - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"network\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http_connection_manager\"\n        }), \"\\n              \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"typed_config\"\n        }), \":\\n                \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@type\\\"\"\n        }), \": type.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"googleapis\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"com\"\n        }), \"/envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"extensions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"network\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http_connection_manager\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"v3\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"HttpConnectionManager\"\n        }), \"\\n                \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"codec_type\"\n        }), \": auto\\n                \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"stat_prefix\"\n        }), \": ingress_http\\n                \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"route_config\"\n        }), \":\\n                  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": local_route\\n                  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"virtual_hosts\"\n        }), \":\\n                    - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": local_service\\n                      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"domains\"\n        }), \": [\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*\\\"\"\n        }), \"]\\n                      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"routes\"\n        }), \":\\n                        - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"match\"\n        }), \": { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"prefix\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"/\\\"\"\n        }), \"}\\n                          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"route\"\n        }), \": { \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"cluster\"\n        }), \": grpc_service}\\n                      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"cors\"\n        }), \":\\n                        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allow_origin_string_match\"\n        }), \":\\n                          - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"prefix\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*\\\"\"\n        }), \"\\n                        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allow_methods\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"GET\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"PUT\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DELETE\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"POST\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"OPTIONS\"\n        }), \"\\n                        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"allow_headers\"\n        }), \": keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout\\n                        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"max_age\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"1728000\\\"\"\n        }), \"\\n                        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"expose_headers\"\n        }), \": custom-header-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \",grpc-status,grpc-message\\n                \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"http_filters\"\n        }), \":\\n                  - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"grpc_web\"\n        }), \"\\n                    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"typed_config\"\n        }), \":\\n                      \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@type\\\"\"\n        }), \": type.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"googleapis\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"com\"\n        }), \"/envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"extensions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"grpc_web\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"v3\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"GrpcWeb\"\n        }), \"\\n                  - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cors\"\n        }), \"\\n                    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"typed_config\"\n        }), \":\\n                      \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@type\\\"\"\n        }), \": type.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"googleapis\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"com\"\n        }), \"/envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"extensions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"cors\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"v3\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"Cors\"\n        }), \"\\n                  - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"router\"\n        }), \"\\n                    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"typed_config\"\n        }), \":\\n                      \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@type\\\"\"\n        }), \": type.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"googleapis\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"com\"\n        }), \"/envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"extensions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"filters\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"router\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"v3\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"Router\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"clusters\"\n        }), \":\\n    - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"name\"\n        }), \": grpc_service\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"connect_timeout\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.\"\n        }), \"25s\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"type\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"LOGICAL_DNS\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"typed_extension_protocol_options\"\n        }), \":\\n        envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"extensions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"upstreams\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"v3\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"HttpProtocolOptions\"\n        }), \":\\n          \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@type\\\"\"\n        }), \": type.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"googleapis\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"com\"\n        }), \"/envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"extensions\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"upstreams\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"http\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"v3\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"HttpProtocolOptions\"\n        }), \"\\n          \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"explicit_http_config\"\n        }), \":\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"http2_protocol_options\"\n        }), \": {}\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"lb_policy\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ROUND_ROBIN\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"load_assignment\"\n        }), \":\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"cluster_name\"\n        }), \": grpc_service\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"endpoints\"\n        }), \":\\n          - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"lb_endpoints\"\n        }), \":\\n              - \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"endpoint\"\n        }), \":\\n                  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"address\"\n        }), \":\\n                    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"socket_address\"\n        }), \":\\n                      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"address\"\n        }), \": host.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"docker\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"internal\"\n        }), \"\\n                      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"port_value\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8080\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"./config/Dockerfile\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"FROM\"\n        }), \" envoyproxy/\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"envoy\"\n        }), \":v1\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".28\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"COPY\"\n        }), \" ./envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"yaml\"\n        }), \" /etc/envoy/envoy.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"yaml\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 6: 앱 실행을 위한 docker-compose.yaml 생성\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"version\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'3'\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"services\"\n        }), \":\\n  grpc-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"server\"\n        }), \":\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"image\"\n        }), \": go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"envoy\"\n        }), \":latest  # 실제 \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Go\"\n        }), \" gRPC 서버 이미지 이름과 태그로 변경\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"ports\"\n        }), \":\\n      - \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"8080:8080\\\"\"\n        }), \"  # 컨테이너의 gRPC 포트를 호스트 머신에 매핑\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"networks\"\n        }), \":\\n      - go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-envoy\\n\\n  gateway-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"envoy\"\n        }), \":\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"build\"\n        }), \":\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"context\"\n        }), \": ./envoy/config\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"dockerfile\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Dockerfile\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"ports\"\n        }), \":\\n      - \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'8083:8080'\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"networks\"\n        }), \":\\n      - go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-envoy\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"networks\"\n        }), \":\\n  go-grpc-server-\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"envoy\"\n        }), \":\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"백엔드를 Envoy 프록시로 실행하려면:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"docker-compose up\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"출력:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_1.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 7: 리액트 앱 생성하기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npx create-react-app my-grpc-app\\ncd my-grpc-app\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 8: gRPC-Web 및 google-protobuf 플러그인 설치\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm install -g protoc-gen-ts\\nnpm i protoc-gen-grpc-web\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 9: 리액트 앱에서 다른 종속성 구성하기\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"  \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"dependencies\\\"\"\n        }), \": {\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@grpc/proto-loader\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^0.7.10\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@testing-library/jest-dom\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^5.17.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@testing-library/react\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^13.4.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@testing-library/user-event\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^13.5.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@types/react\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^18.2.47\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"@types/react-dom\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^18.2.18\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"google-proto-files\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^4.0.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"google-protobuf\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"3.21.2\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"grpc-web\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^1.5.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"protoc-gen-grpc-web\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^1.4.2\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"protoc-gen-ts\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^0.8.7\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^18.2.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react-dom\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^18.2.0\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"react-scripts\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"5.0.1\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"web-vitals\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^2.1.4\\\"\"\n        }), \"\\n  }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 10: 리액트 앱을 위한 GRPC 클라이언트 코드 생성\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".proto 파일을 컴파일하여 js 코드를 생성하세요:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"protoc -I=src/proto userInfo.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"proto\"\n        }), \" --js_out=import_style=commonjs,\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"binary\"\n        }), \":./src/proto --grpc-web_out=import_style=commonjs,mode=\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"grpcwebtext\"\n        }), \":./src/proto\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"단계 11: React 앱 구성하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"UserDetails.js\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"React\"\n        }), \", { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Component\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'react'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UsrClient\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../proto/userInfo_grpc_web_pb'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" { \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserRequest\"\n        }), \" } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'../proto/userInfo_pb'\"\n        }), \";\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 생성된 클라이언트 코드를 가져옵니다\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserDetail\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extends\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_ inherited__\",\n          children: \"Component\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"constructor\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"props\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"super\"\n        }), \"(props);\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"state\"\n        }), \" = {\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"user\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \",\\n            \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"error\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"null\"\n        }), \",\\n        };\\n    }\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"componentDidMount\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" client = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UsrClient\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'http://localhost:8083'\"\n        }), \"); \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 사용 중인 gRPC 서버 URL로 교체해주세요\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 사용자 이름을 사용해 요청 생성\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" request = \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"new\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserRequest\"\n        }), \"();\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 원하는 사용자 이름으로 대체해주세요\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// GetUser RPC 호출\"\n        }), \"\\n        client.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getUser\"\n        }), \"(request, {}, \", _jsxs(_components.span, {\n          className: \"hljs-function\",\n          children: [\"(\", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"err, response\"\n          }), \") =>\"]\n        }), \" {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" (!err) {\\n                \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setState\"\n        }), \"({ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"user\"\n        }), \": response.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"getUser\"\n        }), \"() });\\n            } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n                \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setState\"\n        }), \"({ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"error\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'사용자 데이터를 불러오는 중 오류 발생'\"\n        }), \" });\\n            }\\n        });\\n    }\\n\\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"render\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"const\"\n        }), \" { user, error } = \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"this\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"state\"\n        }), \";\\n\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n            \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n                {error ? (\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"Error: {error}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                ) : user ? (\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"사용자 세부 정보\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h1\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"이름: {user.getName()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"나이: {user.getAge()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h2\"\n            }), \">\"]\n          }), \"주소\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"h2\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"거리: {user.getAddress().getStreet()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"도시: {user.getAddress().getCity()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"주: {user.getAddress().getState()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"우편번호: {user.getAddress().getZip()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        {/* 전화번호 정보를 비슷하게 표시할 수 있습니다 */}\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"업데이트 날짜: {user.getUpdatedAt()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"생성 날짜: {user.getCreatedAt()}\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          }), \"\\n                ) : (\\n                    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"로딩 중...\", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"p\"\n            }), \">\"]\n          }), \"\\n                )}\\n            \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n        );\\n    }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserDetail\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"App.js\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" logo \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./logo.svg'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./App.css'\"\n        }), \";\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UserDetail\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'./components/UserDetails'\"\n        }), \";\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"App\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n  \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" (\\n    \", _jsxs(_components.span, {\n          className: \"xml\",\n          children: [_jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"App\\\"\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"header\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"App-header\\\"\"\n            }), \">\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"img\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"src\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"{logo}\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"className\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"App-logo\\\"\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-attr\",\n              children: \"alt\"\n            }), \"=\", _jsx(_components.span, {\n              className: \"hljs-string\",\n              children: \"\\\"logo\\\"\"\n            }), \" />\"]\n          }), \"\\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"<\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"UserDetail\"\n            }), \">\"]\n          }), \"\\n          \\n        \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"UserDetail\"\n            }), \">\"]\n          }), \"\\n      \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"header\"\n            }), \">\"]\n          }), \"\\n    \", _jsxs(_components.span, {\n            className: \"hljs-tag\",\n            children: [\"</\", _jsx(_components.span, {\n              className: \"hljs-name\",\n              children: \"div\"\n            }), \">\"]\n          })]\n        }), \"\\n  );\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"App\"\n        }), \";\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Step 12: React 앱 빌드 및 실행\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"React 앱을 빌드하고 실행하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"npm start\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"결과 -\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-14-BuildingScalableMicroservicesCreatingaGRPCServicewithGoandConsumingitinaReactAppviaEnvoy_2.png\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"본 튜토리얼에서는 Go로 GRPC 서비스를 생성하는 방법, Envoy를 프록시로 구성하는 방법, 그리고 React 앱을 빌드하여 Envoy를 통해 GRPC 서비스와 통신하는 과정을 다루었습니다. 이 설정은 분산 시스템을 구축하는 확장 가능하고 효율적인 방법을 제공합니다. 필요에 따라 서비스 및 React 앱에 더 많은 GRPC 메서드와 기능을 추가하여 이 예제를 확장할 수 있습니다. 즐거운 코딩하세요!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"더 많은 정보를 위해 코드를 확인하세요: GitHub\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}