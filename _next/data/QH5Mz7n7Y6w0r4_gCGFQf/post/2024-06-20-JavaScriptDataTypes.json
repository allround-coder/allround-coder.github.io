{"pageProps":{"post":{"title":"자바스크립트 데이터 유형","description":"","date":"2024-06-20 01:14","slug":"2024-06-20-JavaScriptDataTypes","content":"\n\n이해하기 쉬워요\n\n## JavaScript는 총 여덟 가지의 다른 데이터 유형을 지원합니다. 일곱 가지의 기본 유형과 하나의 비 기본 유형이 있어요.\n\n이러한 데이터 유형을 이해하는 것은 효율적이고 버그 없는 코드를 작성하는 데 중요해요. 이 블로그에서는 각 데이터 유형에 대해 자세히 살펴볼 거에요.\n\n데이터 유형에 대해 계속 진행하기 전에 JavaScript의 console.log() 메서드에 대해 이야기하고 싶어요.\n\n<div class=\"content-ad\"></div>\n\n`console.log()`은 웹 콘솔에 메시지를 출력하는 JavaScript의 메서드입니다. 일반적으로는 변수의 값이나 표현식의 결과와 같은 정보를 인쇄하기 위해 디버깅 목적으로 사용되며, 이를 통해 개발자들은 코드의 동작을 검사할 수 있습니다.\n\n```js\nconsole.log(\"Hello, world!\"); // 출력: Hello, world!\nconsole.log(42);              // 출력: 42\n\n// 변수 출력\nlet greeting = \"Hello, world!\";\nconsole.log(greeting); // 출력: Hello, world!\n```\n\n- Number\n\nNumber 타입은 정수와 부동 소수점 숫자를 모두 나타냅니다. JavaScript는 두 유형을 구분하지 않습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// 정수 값\nconst age = 21;\n\n// 부동 소수점 값\nconst temperature = 32.5;\n```\n\n2. 문자열\n\n문자열 유형은 텍스트를 형성하는 문자 시퀀스를 나타냅니다.\n\n```js\n// 문자열 예시\nconst name = \"제 이름은 요기이고 웹 개발자입니다\";\n```\n\n<div class=\"content-ad\"></div>\n\n3. 불리언\n\n불리언 유형에는 true 또는 false의 두 가지 값만 있습니다. 일반적으로 조건문에서 사용됩니다.\n\n```js\n// 불리언 예시\n\n// True 저장\nconst isAdmin = true;\n\n// False 저장\nconst isLoggedIn = false;\n```\n\n4. 널\n\n<div class=\"content-ad\"></div>\n\nnull 타입은 의도적으로 어떤 객체 값도 없음을 나타냅니다. 기본적으로 변수를 정의하고 그 때 어떤 값을 추가하고 싶지 않을 때, 그리고 나중에도 해당 변수에 값을 추가하고 싶지 않을 때 사용합니다.\n\n```js\n// Null의 예시\nconst dummy = null;\n```\n\n5. Undefined\n\n값이 할당되지 않은 변수는 undefined 타입입니다. 기본적으로 변수를 선언했지만 아직 값이 할당되지 않은 상태를 의미합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// Undefined 예제\nlet name;\n```\n\n6. BigInt\n\nBigInt을 사용하면 Number 타입이 처리할 수 있는 정수보다 큰 정수를 표현할 수 있습니다.\n\nNumber에서 BigInt로 변환하려면 값 뒤에 `n`을 추가하기만 하면 됩니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// BigInt의 예시\nlet Money = 54215484215484212n;\n```\n\n7. Symbol\n\nSymbol은 고유하고 변경할 수 없는 데이터 유형으로서, 객체 속성의 식별자로 사용할 수 있습니다.\n\n여기서 '변경할 수 없는'이란 한 번 선언된 심볼의 값은 변경할 수 없다는 의미이고, '고유한'이란 동일한 값으로 여러 심볼 변수를 만들더라도 각각 메모리에서 고유하다는 의미입니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n// Symbol 예제\nconst Variable_one = Symbol(\"abc\");\nconst Variable_two = Symbol(\"abc\");\n```\n\n위 예제를 보면 변수 one과 two가 심볼 데이터 유형의 동일한 값을 가지고 있는 것처럼 보이지만, 두 변수 간에는 어떤 유사성도 없습니다. 두 변수는 서로 다릅니다.\n\n8. 객체\n\n객체는 속성들의 모음이며, JavaScript에서 유일한 원시 데이터 윕입니다.\n\n\n<div class=\"content-ad\"></div>\n\n자바스크립트에서는 객체 키가 객체 내의 특정 속성에 대한 고유 식별자로 작용합니다. 이러한 키는 문자열 또는 숫자가 될 수 있습니다.\n\n일반적으로 문자열은 키로 직접 사용되지만, 숫자는 사용될 때 자동으로 문자열로 변환됩니다.\n\n이 유연성을 통해 객체는 자바스크립트 응용 프로그램 내에서 구조화된 데이터의 저장 및 검색을 용이하게 합니다.\n\n```js\n// 객체 예제\nlet obj = {\n  name: \"yogi parmar\",\n  age: 21,\n  isGood: true,\n  storingNull: null,\n  undefinedPropertu: undefined,\n  1: \"one\",\n}\n```\n\n<div class=\"content-ad\"></div>\n\n우리의 다음 블로그에서는 자바스크립트에서 변수의 기초를 탐구할 것이며, 데이터를 저장하는 용기로서의 역할에 중점을 둘 것입니다.\n게다가, 변수의 이름 짓는 데 대한 최상의 실천법과 관습에 대해 탐구할 것입니다.","ogImage":{"url":"/assets/img/2024-06-20-JavaScriptDataTypes_0.png"},"coverImage":"/assets/img/2024-06-20-JavaScriptDataTypes_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>이해하기 쉬워요</p>\n<h2>JavaScript는 총 여덟 가지의 다른 데이터 유형을 지원합니다. 일곱 가지의 기본 유형과 하나의 비 기본 유형이 있어요.</h2>\n<p>이러한 데이터 유형을 이해하는 것은 효율적이고 버그 없는 코드를 작성하는 데 중요해요. 이 블로그에서는 각 데이터 유형에 대해 자세히 살펴볼 거에요.</p>\n<p>데이터 유형에 대해 계속 진행하기 전에 JavaScript의 console.log() 메서드에 대해 이야기하고 싶어요.</p>\n<div class=\"content-ad\"></div>\n<p><code>console.log()</code>은 웹 콘솔에 메시지를 출력하는 JavaScript의 메서드입니다. 일반적으로는 변수의 값이나 표현식의 결과와 같은 정보를 인쇄하기 위해 디버깅 목적으로 사용되며, 이를 통해 개발자들은 코드의 동작을 검사할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Hello, world!\"</span>); <span class=\"hljs-comment\">// 출력: Hello, world!</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-number\">42</span>);              <span class=\"hljs-comment\">// 출력: 42</span>\n\n<span class=\"hljs-comment\">// 변수 출력</span>\n<span class=\"hljs-keyword\">let</span> greeting = <span class=\"hljs-string\">\"Hello, world!\"</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(greeting); <span class=\"hljs-comment\">// 출력: Hello, world!</span>\n</code></pre>\n<ul>\n<li>Number</li>\n</ul>\n<p>Number 타입은 정수와 부동 소수점 숫자를 모두 나타냅니다. JavaScript는 두 유형을 구분하지 않습니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 정수 값</span>\n<span class=\"hljs-keyword\">const</span> age = <span class=\"hljs-number\">21</span>;\n\n<span class=\"hljs-comment\">// 부동 소수점 값</span>\n<span class=\"hljs-keyword\">const</span> temperature = <span class=\"hljs-number\">32.5</span>;\n</code></pre>\n<ol start=\"2\">\n<li>문자열</li>\n</ol>\n<p>문자열 유형은 텍스트를 형성하는 문자 시퀀스를 나타냅니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 문자열 예시</span>\n<span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">\"제 이름은 요기이고 웹 개발자입니다\"</span>;\n</code></pre>\n<div class=\"content-ad\"></div>\n<ol start=\"3\">\n<li>불리언</li>\n</ol>\n<p>불리언 유형에는 true 또는 false의 두 가지 값만 있습니다. 일반적으로 조건문에서 사용됩니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 불리언 예시</span>\n\n<span class=\"hljs-comment\">// True 저장</span>\n<span class=\"hljs-keyword\">const</span> isAdmin = <span class=\"hljs-literal\">true</span>;\n\n<span class=\"hljs-comment\">// False 저장</span>\n<span class=\"hljs-keyword\">const</span> isLoggedIn = <span class=\"hljs-literal\">false</span>;\n</code></pre>\n<ol start=\"4\">\n<li>널</li>\n</ol>\n<div class=\"content-ad\"></div>\n<p>null 타입은 의도적으로 어떤 객체 값도 없음을 나타냅니다. 기본적으로 변수를 정의하고 그 때 어떤 값을 추가하고 싶지 않을 때, 그리고 나중에도 해당 변수에 값을 추가하고 싶지 않을 때 사용합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// Null의 예시</span>\n<span class=\"hljs-keyword\">const</span> dummy = <span class=\"hljs-literal\">null</span>;\n</code></pre>\n<ol start=\"5\">\n<li>Undefined</li>\n</ol>\n<p>값이 할당되지 않은 변수는 undefined 타입입니다. 기본적으로 변수를 선언했지만 아직 값이 할당되지 않은 상태를 의미합니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// Undefined 예제</span>\n<span class=\"hljs-keyword\">let</span> name;\n</code></pre>\n<ol start=\"6\">\n<li>BigInt</li>\n</ol>\n<p>BigInt을 사용하면 Number 타입이 처리할 수 있는 정수보다 큰 정수를 표현할 수 있습니다.</p>\n<p>Number에서 BigInt로 변환하려면 값 뒤에 <code>n</code>을 추가하기만 하면 됩니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// BigInt의 예시</span>\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">Money</span> = <span class=\"hljs-number\">54215484215484212n</span>;\n</code></pre>\n<ol start=\"7\">\n<li>Symbol</li>\n</ol>\n<p>Symbol은 고유하고 변경할 수 없는 데이터 유형으로서, 객체 속성의 식별자로 사용할 수 있습니다.</p>\n<p>여기서 '변경할 수 없는'이란 한 번 선언된 심볼의 값은 변경할 수 없다는 의미이고, '고유한'이란 동일한 값으로 여러 심볼 변수를 만들더라도 각각 메모리에서 고유하다는 의미입니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// Symbol 예제</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Variable</span>_one = <span class=\"hljs-title class_\">Symbol</span>(<span class=\"hljs-string\">\"abc\"</span>);\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Variable</span>_two = <span class=\"hljs-title class_\">Symbol</span>(<span class=\"hljs-string\">\"abc\"</span>);\n</code></pre>\n<p>위 예제를 보면 변수 one과 two가 심볼 데이터 유형의 동일한 값을 가지고 있는 것처럼 보이지만, 두 변수 간에는 어떤 유사성도 없습니다. 두 변수는 서로 다릅니다.</p>\n<ol start=\"8\">\n<li>객체</li>\n</ol>\n<p>객체는 속성들의 모음이며, JavaScript에서 유일한 원시 데이터 윕입니다.</p>\n<div class=\"content-ad\"></div>\n<p>자바스크립트에서는 객체 키가 객체 내의 특정 속성에 대한 고유 식별자로 작용합니다. 이러한 키는 문자열 또는 숫자가 될 수 있습니다.</p>\n<p>일반적으로 문자열은 키로 직접 사용되지만, 숫자는 사용될 때 자동으로 문자열로 변환됩니다.</p>\n<p>이 유연성을 통해 객체는 자바스크립트 응용 프로그램 내에서 구조화된 데이터의 저장 및 검색을 용이하게 합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 객체 예제</span>\n<span class=\"hljs-keyword\">let</span> obj = {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"yogi parmar\"</span>,\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">21</span>,\n  <span class=\"hljs-attr\">isGood</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">storingNull</span>: <span class=\"hljs-literal\">null</span>,\n  <span class=\"hljs-attr\">undefinedPropertu</span>: <span class=\"hljs-literal\">undefined</span>,\n  <span class=\"hljs-number\">1</span>: <span class=\"hljs-string\">\"one\"</span>,\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>우리의 다음 블로그에서는 자바스크립트에서 변수의 기초를 탐구할 것이며, 데이터를 저장하는 용기로서의 역할에 중점을 둘 것입니다.\n게다가, 변수의 이름 짓는 데 대한 최상의 실천법과 관습에 대해 탐구할 것입니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}