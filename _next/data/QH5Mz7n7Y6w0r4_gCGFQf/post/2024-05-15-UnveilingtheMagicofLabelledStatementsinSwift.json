{"pageProps":{"post":{"title":"타입스크립트에서 레이블 문의 마법을 공개합니다","description":"","date":"2024-05-15 11:10","slug":"2024-05-15-UnveilingtheMagicofLabelledStatementsinSwift","content":"\n\n라벨 지정문은 다른 Swift 기능들만큼 화려하지는 않지만, 코드 가독성과 흐름 제어를 크게 향상시킬 수 있는 독특한 유연성을 지니고 있어요.\n\n라벨 지정문을 사용하면 if, switch 또는 do 문과 같이 코드의 특정 부분에 이름을 지정할 수 있어요. 이는 중첩된 루프를 벗어나는 데 도움을 줄 수 있어요.\n\n아래에는 라벨이 지정된 루프의 기본 예제가 있어요.\n\n아래 코드에서는 제곱했을 때 4가 되는 첫 번째 숫자를 찾으려고 해요.\n\n\n\n```js\nlet numbers = 1...50\n\nfor number1 in numbers {\n    for number2 in numbers {\n        if number1 == number2 && number1 * number2 == 4  {\n            print(number1)\n            break // 외부 루프를 종료시키지 않습니다\n        }\n    }\n}\n```\n\n라벨을 사용하면 많은 도움을 받을 수 있습니다.\n\n```js\nlet numbers = 1...50\n\nouterLoop: for number1 in numbers {\n    for number2 in numbers {\n        if number1 == number2 && number1 * number2 == 4  {\n            print(number1)\n            break outerLoop // 외부 루프를 종료시킵니다\n        }\n    }\n}\n```","ogImage":{"url":"/assets/img/2024-05-15-UnveilingtheMagicofLabelledStatementsinSwift_0.png"},"coverImage":"/assets/img/2024-05-15-UnveilingtheMagicofLabelledStatementsinSwift_0.png","tag":["Tech"],"readingTime":1},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>라벨 지정문은 다른 Swift 기능들만큼 화려하지는 않지만, 코드 가독성과 흐름 제어를 크게 향상시킬 수 있는 독특한 유연성을 지니고 있어요.</p>\n<p>라벨 지정문을 사용하면 if, switch 또는 do 문과 같이 코드의 특정 부분에 이름을 지정할 수 있어요. 이는 중첩된 루프를 벗어나는 데 도움을 줄 수 있어요.</p>\n<p>아래에는 라벨이 지정된 루프의 기본 예제가 있어요.</p>\n<p>아래 코드에서는 제곱했을 때 4가 되는 첫 번째 숫자를 찾으려고 해요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">let</span> numbers = <span class=\"hljs-number\">1.</span>.<span class=\"hljs-number\">.50</span>\n\n<span class=\"hljs-keyword\">for</span> number1 <span class=\"hljs-keyword\">in</span> numbers {\n    <span class=\"hljs-keyword\">for</span> number2 <span class=\"hljs-keyword\">in</span> numbers {\n        <span class=\"hljs-keyword\">if</span> number1 == number2 &#x26;&#x26; number1 * number2 == <span class=\"hljs-number\">4</span>  {\n            <span class=\"hljs-title function_\">print</span>(number1)\n            <span class=\"hljs-keyword\">break</span> <span class=\"hljs-comment\">// 외부 루프를 종료시키지 않습니다</span>\n        }\n    }\n}\n</code></pre>\n<p>라벨을 사용하면 많은 도움을 받을 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">let</span> numbers = <span class=\"hljs-number\">1.</span>.<span class=\"hljs-number\">.50</span>\n\n<span class=\"hljs-attr\">outerLoop</span>: <span class=\"hljs-keyword\">for</span> number1 <span class=\"hljs-keyword\">in</span> numbers {\n    <span class=\"hljs-keyword\">for</span> number2 <span class=\"hljs-keyword\">in</span> numbers {\n        <span class=\"hljs-keyword\">if</span> number1 == number2 &#x26;&#x26; number1 * number2 == <span class=\"hljs-number\">4</span>  {\n            <span class=\"hljs-title function_\">print</span>(number1)\n            <span class=\"hljs-keyword\">break</span> outerLoop <span class=\"hljs-comment\">// 외부 루프를 종료시킵니다</span>\n        }\n    }\n}\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}